<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (abs(image_xscale)&lt;1.2) image_xscale=1.2*sign(image_xscale);
if (abs(image_yscale)&lt;1.2) image_yscale=1.2*sign(image_yscale);

if(master.SWAP_spr_LS_Door==0)
{
master.num+=1;
master.SWAP_spr_LS_Door=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Sprites\spr_LS_Door.png",22,0,1,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.SWAP_spr_LS_Door_top==0)
{
master.num+=1;
master.SWAP_spr_LS_Door_top=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Sprites\spr_LS_Door_top.png",1,0,1,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,1,225);
}

if(master.SWAP_spr_LS_Door_collide==0)
{
master.num+=1;
master.SWAP_spr_LS_Door_collide=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Sprites\spr_LS_Door_collide.png",1,0,1,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

sprite_index=global.sprite[master.SWAP_spr_LS_Door];

always_locked=false;
trigger_lock=false;
open=false;
locked=false;
depth=4;
color=image_blend;
if (colour_get_saturation(image_blend)&gt;0)
color_overide=true;
else
color_overide=false;

can_gulp=true;
    
    topID = instance_create(x,y,obj_LS_Door_top);

with (topID)
    {
    sprite_index=global.sprite[master.SWAP_spr_LS_Door_top];
    image_xscale = other.image_xscale;
    image_yscale = other.image_yscale;
    image_angle = other.image_angle;
    color=other.color;
    color_overide=other.color_overide;
    }
    
   collideID = instance_create(x,y,obj_LS_Door_collide);
   with (collideID)
    {
    sprite_index=global.sprite[master.SWAP_spr_LS_Door_collide];
    image_xscale = other.image_xscale*2;
    image_yscale = other.image_yscale*2;
    image_angle = other.image_angle;
    image_index = 0;
    image_speed = 0;
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>locked=true;

if (can_gulp==true)
{
audio_sound_pitch(snd_LS_Door_close,global.game_speed);
audio_play_sound(snd_LS_Door_close,10,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (always_locked) locked=true;

if(!locked)
{
if (trigger_lock==true)
{
    if !place_meeting(x,y,par_HERO)
        {
        locked=true;
        }
}


if (par_HERO.x-250 &lt; bbox_right) &amp;&amp; (par_HERO.x + 250 &gt; bbox_left) //was 300
    {
    if (par_HERO.y-250 &lt; bbox_bottom) &amp;&amp; (par_HERO.y + 250 &gt; bbox_top) //was 300
        {
        if(open==false) 
            {
                if (can_gulp==true)
                {
                audio_sound_pitch(snd_LS_Door_open,global.game_speed);
                audio_play_sound(snd_LS_Door_open,10,false);
                }
            }
         open=true;
         collideID.sprite_index=global.sprite[master.SWAP_spr_LS_Door_collide];
         collideID.image_xscale=image_xscale*2;
         collideID.image_yscale=image_yscale*2;      
        }
        else
        {
            if(open==true) 
                {
                if (can_gulp==true)
                audio_play_sound(snd_LS_Door_close,10,false);
                }
            open=false;
            collideID.sprite_index=global.sprite[master.SWAP_spr_LS_Door];
            collideID.image_xscale=image_xscale;
            collideID.image_yscale=image_yscale;
        }
    }
    else 
    {
    if(open==true)
        {
         if (can_gulp==true)
         audio_play_sound(snd_LS_Door_close,10,false);
        }
    open=false;
    collideID.sprite_index=global.sprite[master.SWAP_spr_LS_Door];
    collideID.image_xscale=image_xscale;
    collideID.image_yscale=image_yscale;
    }

if(open) &amp;&amp; (image_index&lt;=14)
{
    
    if place_meeting(x,y,par_HERO)
    {
    image_index=21;
    image_speed=0;
    topID.visible=true;
    }
    else
    {
    image_speed=.5*global.game_speed;
    topID.visible=false;
    }
    
}

if(open) &amp;&amp; (image_index&gt;=21)
{
    if place_meeting(x,y,par_HERO)
    {
    image_index=21;
    image_speed=0;
    topID.visible=true;
    }
    else
    {
    image_speed=-.5*global.game_speed;
    topID.visible=false;
    }


}
if(!open) &amp;&amp; (image_index&gt;0)
{
    image_speed=-.5*global.game_speed;
    topID.visible=false;
}

if(!open) &amp;&amp; (image_index&lt;1)
{
    image_speed=0;
    image_index=0;
    topID.visible=false;
}

  

}//End NOT Locked
else
{
 if (image_index&gt;0)
 image_speed=-.5*global.game_speed;
        
    if (image_index&lt;1) 
    {
        image_speed=0;
        image_index=0;
    }
    topID.visible=false;
    collideID.sprite_index=global.sprite[master.SWAP_spr_LS_Door];
    collideID.image_xscale=image_xscale;
    collideID.image_yscale=image_yscale;
}

if place_meeting(x,y,par_HERO) &amp;&amp; (!locked)
{
        
    image_index=21;
    image_speed=0;
    topID.visible=true;
    
        if instance_exists(obj_LS_Door)
    
    if (can_gulp==true)
    {
    if !audio_is_playing(snd_LS_Gulp)
        audio_play_sound(snd_LS_Gulp,15,false);
        can_gulp=false;
    }
    
    par_HERO.wallpush=0;
    if instance_exists (obj_dust_trail)
    with (obj_dust_trail) {instance_destroy();}
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>  if instance_exists(par_HERO) &amp;&amp; !instance_exists(obj_GateKeeper)
  {
  if (par_HERO.hp&gt;0)
  {
  if !audio_is_playing(snd_LS_Door_Trans)
            {
            audio_play_sound(snd_LS_Door_Trans,14,false);
            audio_sound_pitch(snd_LS_Door_Trans,global.game_speed);
            }
  }
  }
  
  can_gulp=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
if(color_overide)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,color,image_alpha);
else
draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>165,263</point>
    <point>263,263</point>
  </PhysicsShapePoints>
</object>
