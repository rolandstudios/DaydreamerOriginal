<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>par_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index=global.sprite[master.spr_Drifter_Arm_A];
color=c_gray;
image_blend=color;
image_speed=0;
image_index=20;
vsp=10;
type=2;
damage=10;
hold=true;
release=false;
lift=false;
image_xscale=(1.15); //was 1.1
image_yscale=(1.15); //1was 1.1
color=image_blend;
track_hit=noone;
track_speed=0;
adjust_HERO=false;
alarm[1]=500/global.game_speed;

hp=30*global.difficulty;

if place_meeting(x,y+50,obj_Drifter_Arm)
    {
    x+=200*irandom_range(-3,3)
    }
    
if (x&lt;200) || (x&gt;room_width-200) instance_destroy();
    
tip = instance_create(x+15,y,obj_Enemy);
with(tip)
    {
    depth=other.depth-1;
    damage=10;
    type=2;
    image_xscale=4*(1.1);
    image_yscale=4*(1.1);
    }
audio_play_sound(snd_Drifter_MechPowerDown,10,false); 
count=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xplode[count] = instance_create(x+random_range(-100,100),y+random_range(-400,10),obj_Explosion_B)

with xplode[count]
{
 image_xscale=1.2-(other.count*.05);
        if (image_xscale&lt;.25) image_xscale=.25;
        image_yscale=image_xscale
        
//image_xscale=random_range(.25,1);

//image_xscale=random_range(.25,.75);
image_yscale=image_xscale;
loot=false;
}

count+=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend=color;
audio_play_sound(snd_EnemyHit_A,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alarm[0]==-1) alarm[0]=15/global.game_speed;
release=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lift=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if (x&gt;4700) x=4800;
 
if place_meeting(x,y,obj_Vertical_Shaft_top)
depth=-14;
else
depth=-1;

if place_meeting(x,y,par_Shoot)
{
if (alarm[3]==-1)
{
        hp=hp-par_Shoot.damage;
        
        var inst;
        inst=instance_nearest(x,y,par_Shoot);
        
        /*
        if !place_meeting(x,y,obj_Bomb)
        {
            with (inst){instance_destroy();}
        }
        */
        
        if (alarm[3] &lt;=-1)
        {
        alarm[3]=4/global.game_speed; 
        image_blend = c_red;
        }       
}
}

if (hold)
{
    if (image_index&gt;=20)
    {
        if place_meeting(x,y+(vsp+50)*image_yscale*global.game_speed,obj_RockyGround_With_Bolders_dark) 
        || place_meeting(x,y+(vsp+50)*image_yscale*global.game_speed,par_Track)
        || place_meeting(x,y+(vsp+50)*image_yscale*global.game_speed,obj_Naked_Bridge_Right_Slim_collide)
        || place_meeting(x,y+(vsp+50)*image_yscale*global.game_speed,obj_Naked_Bridge_Right_collide)
        {
        if (vsp==20) 
            {
            audio_sound_pitch(snd_GrabBelly,global.game_speed);
            audio_play_sound(snd_GrabBelly,10,false);
            }
        vsp*=.75;
        image_speed=.5*global.game_speed;
        }
        else
        {
        vsp=20;
        image_speed=0;
        }
    }
    
    if (image_index&lt;=1)
        {
        hold=false;
        release=false;
        vsp=0;
        image_speed=0;
        with (tip) instance_destroy();
        
        instance_create(x,y,obj_Screen_Shake); 
        instance_create(x,y,obj_Aura_Ripple_stat_short);
        /*
        with instance_create(x+random_range(32,75)*image_yscale,y+75,obj_Ginger_Debris_Cloud){depth=other.depth+1; scale=.55;}
        with instance_create(x-random_range(32,75)*image_yscale,y+75,obj_Ginger_Debris_Cloud){depth=other.depth+1; scale=.55;}
        
        with instance_create(x+random_range(100,135)*image_yscale,y+75,obj_Ginger_Debris_Cloud){depth=other.depth+1; scale=.25;}
        with instance_create(x-random_range(100,135)*image_yscale,y+75,obj_Ginger_Debris_Cloud){depth=other.depth+1; scale=.25;}
        
        with instance_create(x+random_range(75,100)*image_yscale,y+75,obj_Ginger_Debris_Cloud){depth=other.depth-1; scale=.25;}
        with instance_create(x-random_range(75,100)*image_yscale,y+75,obj_Ginger_Debris_Cloud){depth=other.depth-1; scale=.25;}
        
       */
        with instance_create(x+random_range(32,75)*image_yscale,bbox_bottom,obj_Ginger_Debris_Cloud){depth=other.depth+1; scale=.55;}
        with instance_create(x-random_range(32,75)*image_yscale,bbox_bottom,obj_Ginger_Debris_Cloud){depth=other.depth+1; scale=.55;}
        
        with instance_create(x+random_range(100,135)*image_yscale,bbox_bottom,obj_Ginger_Debris_Cloud){depth=other.depth+1; scale=.25;}
        with instance_create(x-random_range(100,135)*image_yscale,bbox_bottom,obj_Ginger_Debris_Cloud){depth=other.depth+1; scale=.25;}
        
        with instance_create(x+random_range(75,100)*image_yscale,bbox_bottom,obj_Ginger_Debris_Cloud){depth=other.depth-1; scale=.25;}
        with instance_create(x-random_range(75,100)*image_yscale,bbox_bottom,obj_Ginger_Debris_Cloud){depth=other.depth-1; scale=.25;}
       
           repeat(2)
           {
           with instance_create(x+50*image_yscale,bbox_bottom,obj_dust_trail) //RIGHT TRAIL
           {image_xscale=-5;image_yscale=5;image_speed=2;}
           with instance_create(x-50,bbox_bottom,obj_dust_trail) //LEFT TRAIL
           {image_xscale=5;image_yscale=5;image_speed=2;}
           }  
        }   
}

if (hp&lt;=0) 
{
    if (alarm[0]==-1) alarm[0]=15/global.game_speed;
    
    //if (release==false)
    //{
        xplode[count] = instance_create(x+random_range(-70,70),y+random_range(-10,10)-count*10,obj_Explosion_B)
        with xplode[count]
        {
        //image_xscale=random_range(.4,.7);
        image_xscale=1-(other.count*.05);
        if (image_xscale&lt;.4) image_xscale=.4;
        image_yscale=image_xscale;
        loot=false;
        depth=other.depth-1;
        //image_speed=2;
        image_speed=4*global.game_speed;
        }
        count+=1;
    //}
    release=true;
}

if (!hold)
{
    if (release)
    {
    image_speed=.5*global.game_speed;
    if (lift)
        {
        //if(vsp&gt;-40) vsp-=4;
        if(vsp&gt;-30) vsp-=4;
        if (hp&lt;=0)
        {
        color=c_red;
        image_blend=c_red;
        }
        //if (alarm[4]==-1) alarm[4]=1;  
        }
    }
    else
    {
    image_speed=0; 
    vsp=0;
    }

if (image_index&gt;=20) image_speed=0;

    if (y&lt;0) 
    {
        instance_destroy();
    }
}   

y+=vsp*global.game_speed;

var n;
for (n=count-1;n&gt;0;n-=1) //XPLODES FOLLOW UP
{
if instance_exists(xplode[n]) xplode[n].y+=vsp;
}

if instance_exists(tip)
{
tip.x=x+15;
tip.y=bbox_bottom-50;
}

if (vsp&gt;0) //GOING DOWN
{
   
   if(track_hit==noone)
   { 
    if position_meeting(x,bbox_bottom+4,par_Track)
    || position_meeting(bbox_left,bbox_bottom+4,par_Track)
    || position_meeting(bbox_right,bbox_bottom+4,par_Track)
    {  
    track_hit=instance_position(x,bbox_bottom+4,par_Track);
    if (track_hit==noone)
    track_hit=instance_nearest(x,bbox_bottom+4,par_Track);
    //track_speed=track_hit.s_image_speed;
    with (track_hit) {shift=false;}
    }
   }
   
    /*
    if position_meeting(x,bbox_bottom+4,par_HERO)
    || position_meeting(bbox_left,bbox_bottom+4,par_HERO)
    || position_meeting(bbox_right,bbox_bottom+4,par_HERO)
    */
    if place_meeting(x,y,par_HERO)   
    {
        if (par_HERO.x&gt;x)
        {
        par_HERO.x+=100;
        //with (par_HERO) {while place_meeting(x,y,par_wall) x+=5;}
        }
        else
        {
        par_HERO.x-=100;
        //with (par_HERO) {while place_meeting(x,y,par_wall) x-=5;}
        }
    }
    
   
}


if (vsp&lt;=0)  //GOING UP
{
    if (track_hit!=noone)   
        {
        with (track_hit) {shift=true;}
        }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_blend!=c_red) image_blend=color;
draw_self();
/*
draw_text(x+100,y-100,"Image_index: " + string(image_index));
draw_text(x+100,y-85,"Hold: " + string(hold));
draw_text(x+100,y-70,"Release: " + string(release));
draw_text(x+100,y-55,"HP: " + string(hp));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,1007</point>
    <point>515,515</point>
  </PhysicsShapePoints>
</object>
