<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Load Sprites ----------------------
if(master.Consumer_Kart_Turn==0)
{
master.num+=1;
master.Consumer_Kart_Turn=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\Consumer_Kart_Turn.png",17,1,1,108,109);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}


if(master.Consumer_Kart_Ride==0)
{
master.num+=1;
master.Consumer_Kart_Ride=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\Consumer_Kart_Ride.png",24,1,1,108,109);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}


setspeed=random_range(2,10);
west_east=1;
scale=image_yscale;
if (scale==1) 
    {
    scale=random_range(.4,1.1);
    image_yscale=scale;
    image_xscale=scale;
    }
    
hp=15;
init_hp=hp;

acel=0;
hsp=5*image_xscale;
vsp=0;
grav=2;
grounded=false;
image_speed=.5;
moveChoice=2;
moveChoose=false;
damage=5*global.difficulty;
type=1;
active=false;
kickback=0;
stuck=0;
sprite_index=spr_collide4;

view =  instance_create(x,y,obj_ConsumerKart_view);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if audio_is_playing(snd_KartTurn)
audio_stop_sound(snd_KartTurn);
if (hp&lt;=0) global.Points+=irandom_range(5,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveChoose=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_HERO) {instance_destroy();}
else
{
if !instance_exists(view) 
{
// instance_destroy();
}
else
{
if (obj_camera_offset.x-1000 &lt; bbox_right) &amp;&amp; (obj_camera_offset.x + 1000 &gt; bbox_left) 
{active=true;} else {active=false;}

if (!active) //ACTIVE BEGIN
{
    if !place_meeting(x,y,obj_EnemyCheck)
    { 
    instance_deactivate_object(view);
    instance_deactivate_object(self);
    }
}

if(active)
{
if !audio_is_playing(snd_KartDrive)
    {
    audio_sound_pitch(snd_KartDrive,global.game_speed);
    audio_play_sound(snd_KartDrive,5,false);     
    }
    
sprite_index=spr_collide4;

if(moveChoose)
{
if place_meeting(x,y,par_HERO) || place_meeting(x+ hsp*global.game_speed,y,obj_Enemy_Barrier)
moveChoice=irandom_range(1,1);
else
moveChoice=irandom_range(1,2);

alarm[0]=irandom_range(200,300)/global.game_speed;
stuck=0;
moveChoose=false;
acel=1;
}

switch(moveChoice)
{
case 1: //Move 

view.sprite_index=global.sprite[master.Consumer_Kart_Ride];
view.image_speed=.5*acel*global.game_speed;
hsp=setspeed*image_xscale*acel;
if (acel&lt;1.25) acel+=.01;
//vsp=0;
    if (stuck&gt;=3)
        {
        x=x-20*image_xscale;
        moveChoice=3;
        view.sprite_index=global.sprite[master.Consumer_Kart_Turn];
        view.image_index=sprite_get_number(global.sprite[master.Consumer_Kart_Turn])-1;
        view.image_index=0;
        } 

break;

case 2: //Follow
view.sprite_index=global.sprite[master.Consumer_Kart_Ride];
view.image_speed=.5*acel*global.game_speed;
//vsp=0;
if (acel&lt;1.5) acel+=.01;

    if (par_HERO.x &gt; x)
    {
        hsp=setspeed*image_xscale*acel;
        if(west_east == 0)
        {
        moveChoice=3;
        view.sprite_index=global.sprite[master.Consumer_Kart_Turn];
        view.image_index=sprite_get_number(global.sprite[master.Consumer_Kart_Turn])-1;
        view.image_index=0;
        }
        else
        {
        west_east=1;
        image_xscale = scale;
        }
    }
        
    if (par_HERO.x &lt; x)
    {
        hsp=setspeed*image_xscale*acel; 
        if(west_east == 1)
        {
        moveChoice=3;
        view.sprite_index=global.sprite[master.Consumer_Kart_Turn];
        view.image_index=0;
        
        }
        else
        {
        west_east = 0;
        image_xscale = -scale;
        }
    }
    
    if (stuck&gt;=3)
        {
        x=x-20*image_xscale;
        moveChoice=3;
        view.sprite_index=global.sprite[master.Consumer_Kart_Turn];
        view.image_index=sprite_get_number(global.sprite[master.Consumer_Kart_Turn])-1;
        view.image_index=0;
        } 
break;

case 3: //Turn
alarm[0]=500/global.game_speed;
view.sprite_index=global.sprite[master.Consumer_Kart_Turn];
view.image_speed=.5*global.game_speed;
hsp=0;
stuck=0;
//vsp=0;
if (view.image_index==5)
{
audio_sound_pitch(snd_KartTurn,global.game_speed);
audio_play_sound(snd_KartTurn,8,false); 
with instance_create(x+10*image_xscale, y,obj_dust_trail)
            {
            depth=0;
            image_xscale=-2;
            image_yscale=2;
            }
}            
if (view.image_index&gt;=sprite_get_number(global.sprite[master.Consumer_Kart_Turn])-1)
{
              
    if (west_east==0)
    {
    image_xscale=scale;
    x=x-(10*image_xscale);
    west_east = 1;
    }
    else 
    {
    image_xscale=-scale;
    x=x-(10*image_xscale);
    west_east = 0;
    }
    view.sprite_index=global.sprite[master.Consumer_Kart_Ride];
    
    moveChoose=true;
    
        
}
break;

}//END SWITCH

vsp=vsp+grav*global.game_speed;
                    

if (kickback!=0) //KICK BACK
{
    hsp=kickback;
    vsp=-1;
    kickback = kickback - sign(kickback);
}




// Collisions -------------------------------------------------
if place_meeting(x+hsp,y,par_wall) 
{
   
    yplus = 0;   
    while (place_meeting(x+hsp,y-yplus,par_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus+= 1;
    
    if place_meeting(x+hsp,y-yplus,par_wall)
    {
        while (!place_meeting(x+sign(hsp),y,par_wall)) x+=sign(hsp);
        hsp =0;
        stuck=stuck+1;
         
    }
    else
    {
        y=y-yplus;
    }
    
}

if(moveChoice&lt;3)
{  
if (!place_meeting(x+(100*scale*sign(hsp)),y+30*scale,par_wall)) || place_meeting(x+(100*scale*sign(hsp)),y,obj_Vertical_Shaft) //Dont Fall off Cliff
    { 
        x=x-0*image_xscale;
        moveChoice=3;
        view.sprite_index=global.sprite[master.Consumer_Kart_Turn];
        view.image_index=sprite_get_number(global.sprite[master.Consumer_Kart_Turn])-1;
        view.image_index=0;
        hsp=0;
    }
}

if instance_exists(obj_PearStore_inside)
{
vsp=0;
hsp=0;
}

//Commit to Horizontal movement
if !place_meeting(x+ hsp*global.game_speed,y,obj_Enemy_Barrier)
x = x + hsp*global.game_speed;

//Vertical Collision
if place_meeting(x,y+vsp,par_wall) 
{ 
    while (!place_meeting(x,y+sign(vsp),par_wall)) y=y+sign(vsp);
     
    if (sign(vsp) == 1)
    {
        grounded = 1; //Enable First Jump        
    }
    vsp = 0;
}
else
{
   grounded = 0;
}


//Commit to Verical movement

y = y + vsp*global.game_speed;

//TRACK COLLIDE ----------------------------------
if place_meeting(x,y+1,par_Track)
{
    var track 
    track = instance_position(x,y,par_Track);
    if (track ==noone)
    track = instance_nearest(x,y,par_Track);
    
    if (bbox_bottom&lt;=track.bbox_top+1*abs(track.image_yscale)) 
    {
    x = x+(track.image_speed*1.57*track.image_xscale);
    }
}
//END TRACK --------------------------------------

if (view.bbox_top&gt;room_height)
{
if (x&gt;view_xview) &amp;&amp; (x&lt;view_xview+1280)
{
    if instance_exists (obj_Waves)
    {
       audio_sound_pitch(snd_splash_light, random_range(1,1.2));
       audio_play_sound(snd_splash_light,10,false);
       with  instance_create(x,room_height+irandom_range(0,5),obj_Splash) {depth=other.depth;}
    }
    else
    {
        switch(irandom(1))
        {
        case 0:
        audio_sound_pitch(snd_Arcade_Blast_A,random_range(.9,1.1)*global.game_speed);
        audio_play_sound(snd_Arcade_Blast_A,10,false);
        break;
        
        case 1:
        audio_sound_pitch(snd_Arcade_Blast_B,random_range(.9,1.1)*global.game_speed);
        audio_play_sound(snd_Arcade_Blast_B,10,false);
        break;
        }
    }
}

if instance_exists(view) with (view) {instance_destroy();}
instance_destroy();
}


}//END ACTIVE
}//END VIEW CHECK
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (y&gt;room_height+400)
{
if instance_exists(view) with (view) {instance_destroy();}
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_debug)
{
if (obj_debug.show_collide)
{
if (grounded) image_blend=c_red; else image_blend=c_white;
if sprite_exists(sprite_index) draw_self();
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>257,149</point>
    <point>257,257</point>
  </PhysicsShapePoints>
</object>
