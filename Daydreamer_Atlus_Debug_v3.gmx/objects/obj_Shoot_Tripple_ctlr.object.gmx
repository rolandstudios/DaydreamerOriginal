<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_OrangeFireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_HERO)
{
instance_destroy();
}
else
{
spread=par_HERO.spread+10;//+random_range(4,8);

switch(par_HERO.look)
{
    case 12:    
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 90;
    image_angle =90;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 90+other.spread;
    image_angle =90+other.spread;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 90-other.spread;
    image_angle =90-other.spread;
    }
    
    break;
    
    //--------------------------------------------------------------------------------------
    
    case 3:   
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 0;
    image_angle = 0;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = other.spread;
    image_angle = other.spread;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 360-other.spread;
    image_angle = 360-other.spread;
    }    
    break;
    
    //--------------------------------------------------------------------------------------
    
    case 9:
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 180;
    image_angle = 180;
    }
    
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 180+other.spread;
    image_angle = 180+other.spread;
    }
    
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 180-other.spread;
    image_angle = 180-other.spread;
    }
    
    
    break;
    
     //--------------------------------------------------------------------------------------
     
    case 2:    
    if (par_HERO.crouch)
    {  
        with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 45-12;
        image_angle = 45-12;
        }
        with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 45-12+other.spread;
        image_angle = 45-12+other.spread;
        }
        with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 45-12-other.spread;
        image_angle = 45-12-other.spread;
        } 
    }
    else
    {
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 45;
    image_angle = 45;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 45+other.spread;
    image_angle = 45+other.spread;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 45-other.spread;
    image_angle = 45-other.spread;
    } 
    } 
    break;
    //--------------------------------------------------------------------------------------
    
    case 10:
    if (par_HERO.crouch)
    {
    with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 135+12;
        image_angle = 135+12;
        }
        with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 135+12+other.spread;
        image_angle = 135+12+other.spread;
        }
        with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 135+12-other.spread;
        image_angle = 135+12-other.spread;
        }
    }
    else
    {
        with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 135;
        image_angle = 135;
        }
        with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 135+other.spread;
        image_angle = 135+other.spread;
        }
        with instance_create(x,y,obj_Shoot_Tripple)
        {
        direction = 135-other.spread;
        image_angle = 135-other.spread;
        }    
    }
    break;
    
    //--------------------------------------------------------------------------------------
     
    case 6:    
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 270;
    image_angle = 270;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 270+other.spread;
    image_angle = 270+other.spread;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 270-other.spread;
    image_angle = 270-other.spread;
    }
    
    break;
    
    //--------------------------------------------------------------------------------------
    
    case 5:   
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 315;
    image_angle = 315;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 315+other.spread;
    image_angle = 315+other.spread;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 315-other.spread;
    image_angle = 315-other.spread;
    }
    
    break;
    
    //--------------------------------------------------------------------------------------
    
    case 7:
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 225;
    image_angle = 225;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 225+other.spread;
    image_angle = 225+other.spread;
    }
    with instance_create(x,y,obj_Shoot_Tripple)
    {
    direction = 225-other.spread;
    image_angle = 225-other.spread;
    }
    
    break;
}

     with (instance_create(x,y,obj_FireFlare_HERO))
        { 
        if instance_exists(par_HERO)
        { 
            damage=par_HERO.damage;
            image_xscale = image_xscale*2;
            image_yscale = image_yscale*2; 
            
            switch(par_HERO.look)
            {
            case 2: image_angle=45; break;
            case 12: image_angle=90; break;
            case 6: image_angle=270; break;
            case 10: image_angle=135; break;
            case 5: image_angle=315; break;
            case 7: image_angle=225; break;
            
            
            case 3: image_angle=0; break;
            case 9:  
            image_angle=0;
            //image_angle=180;
            image_xscale = -image_xscale; 
            break;
            }
            y+=par_HERO.vsp;   
        
        }
    }
instance_destroy();

}































</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
