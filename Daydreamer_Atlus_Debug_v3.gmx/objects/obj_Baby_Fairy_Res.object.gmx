<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.spr_Baby_Fairy_CAST==0)
{
master.num+=1;
master.spr_Baby_Fairy_CAST=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Baby_Fairy_CAST.png",13,0,1,51,67);
}

if(master.spr_Baby_Fairy_FLY==0)
{
master.num+=1;
master.spr_Baby_Fairy_FLY=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Baby_Fairy_FLY.png",25,0,1,42,61);
}

if(master.spr_Baby_Fairy_SUMMON==0)
{
master.num+=1;
master.spr_Baby_Fairy_SUMMON=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Baby_Fairy_SUMMON.png",8,0,1,37,69);
}

if(master.Resurrection==0)
{
master.num+=1;
master.Resurrection=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\Resurrection.png",18,0,0,227,75);
}



sprite_index=global.sprite[master.spr_Baby_Fairy_SUMMON];

image_speed=.5;
quiting=false;
leaving_x=x;
leaving_y=y;

float=false;
float_up=true;
float_factor=0;
move=0;

hero_x=par_HERO.x;
hero_y=par_HERO.y;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> par_HERO.grav=.6;
 global.CutScene=false;
 par_HERO.invinsible=false;
 par_HERO.death = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(par_HERO)
{
    par_HERO.invinsible=true;
}

if(sprite_index==global.sprite[master.spr_Baby_Fairy_SUMMON])
{
    if (image_index&gt;=7)
    {
        sprite_index=global.sprite[master.spr_Baby_Fairy_CAST];
        instance_create(x+245,y-50,obj_Resurrection_header);
        
       if (par_HERO.air_Death==false)
       {
         with instance_create(par_HERO.x,par_HERO.y+55,obj_FatBlast)
               {
                col = c_red;
                depth=par_HERO.depth-1;
               }
        }
        with instance_create(par_HERO.x,par_HERO.y,obj_Twinkle_A)              
        image_speed=.5*global.game_speed;
        image_index=0;
        casts=irandom_range(1,5);
        
    }
    hsp=2;
    vsp=-2;
}

if(sprite_index==global.sprite[master.spr_Baby_Fairy_CAST])
{
    if (image_index==8)
    {
        if !audio_is_playing(snd_WizardStun)
        audio_play_sound(snd_WizardStun,10,false)
        instance_create(x-8,y,obj_FireFlare_red);
        par_HERO.visible=true;
        par_HERO.hp+=irandom_range(8,16);    
        if (par_HERO.hp&gt;100) par_HERO.hp=100;
                             
    }
    if (image_index&gt;=12)
    {
    hsp=0;
    vsp=0;
    if(casts&lt;=0)
       {   
        par_HERO.image_index=sprite_get_number(par_HERO.sprite_index)-1;
        par_HERO.image_speed=-.5*global.game_speed; 
        
        sprite_index=global.sprite[master.spr_Baby_Fairy_FLY];
        image_index=0;
        quiting=true;
        float=true;
        hsp=0;
        vsp=0;
       }
       else
       {
       casts=casts-1;
       }    
    
    }
}

if (quiting==true)
{
             if(float) 
                    {
                    if(float_up) float_factor=float_factor+.1;
                    if(!float_up) float_factor=float_factor-.1;
        
                    if(float_factor==1) float_up=false;
                    if(float_factor==-1) float_up=true;
                    }
                
                
                
                if(par_HERO.death==true) 
                    {
                        //REWIND
                        par_HERO.image_speed=-.5*global.game_speed;
                                               
                        if (par_HERO.image_index&lt;=2)
                         {
                            par_HERO.grav=.6;
                            global.CutScene=false;
                            par_HERO.invinsible=false;
                            par_HERO.death = false;
                            audio_sound_pitch(snd_Game_Whoosh,global.game_speed);
                            if !audio_is_playing(snd_Game_Whoosh)
                            audio_play_sound(snd_Game_Whoosh,10,false);
                        }
                    }
                
}
else
{
par_HERO.x=hero_x;
par_HERO.invinsible=true;
par_HERO.alarm[11] = 50;       
}

if(image_alpha&lt;=0)
    {
        par_HERO.image_alpha=1;
        instance_destroy();
    }
    
x=x+hsp*global.game_speed;
y=y+vsp*global.game_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
    if(quiting==true)
    {        
    move+=0.04;
    image_blend=c_white;
    
    image_alpha=image_alpha-.01;;
    var Stripes = shader_get_uniform(shdr_Hologram,"Stripes");
    var Filter = shader_get_uniform(shdr_Hologram,"Filter");
    var Phase = shader_get_uniform(shdr_Hologram,"Phase");
  
    draw_self();
    shader_set(shdr_Hologram);
    shader_set_uniform_f(Stripes,75.0);
    shader_set_uniform_f(Filter,0.98,0.98,0.98,1.0);//rgba diffuse color
    shader_set_uniform_f(Phase,move);
    
    
    draw_self();
    shader_reset();
    }
    else 
    {
    draw_self();
    }
}    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>51,67</point>
    <point>62,62</point>
  </PhysicsShapePoints>
</object>
