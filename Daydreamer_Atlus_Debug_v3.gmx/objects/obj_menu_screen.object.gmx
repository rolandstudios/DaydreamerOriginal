<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.spr_gamerpicture = xboxone_sprite_add_from_gamerpicture(global.xb_user, 64, 0, 0);
global.display_name = xboxone_gamedisplayname_for_user(global.xb_user);
showing_account_picker = false;
draw=true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(global.spr_gamerpicture) sprite_delete(global.spr_gamerpicture);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_confirm();
draw=false;
room_goto(rm_Intialize_Game);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (showing_account_picker) exit;

if (gamepad_button_check_released(global.playing_index, gp_face1))
{
    draw=false;
    if (alarm[0]==-1) alarm[0]=1;
    
}
else if (gamepad_button_check_released(global.playing_index, gp_face4))
{
    async_event_id = xboxone_show_account_picker(global.playing_index, 0);
    showing_account_picker = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message(json_encode(async_load));

if (async_load[? "id"] == async_event_id)
{
    showing_account_picker = false;
    
    var user = async_load[? "user"];
    
    if (user != pointer_null)
    {
        global.playing_index = async_load[? "pad_index"];
        global.xb_user = async_load[? "user"];
        global.spr_gamerpicture = xboxone_sprite_add_from_gamerpicture(global.xb_user, 64, 0, 0);
        global.display_name = xboxone_gamedisplayname_for_user(global.xb_user);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if window_get_fullscreen()
{offset=1.5;}
else
{offset=1;}

if (os_type==os_xboxone) &amp;&amp; (draw)
{
draw_set_font(fnt_Arial_Big)
draw_set_color(c_white);

if sprite_exists(global.spr_gamerpicture)
draw_sprite_ext(global.spr_gamerpicture, 0, 10*offset, 10*offset,offset,offset,0,c_white,1);
draw_set_halign(fa_left)
draw_set_valign(fa_middle);
draw_text_transformed(84*offset, (10 + 32)*offset, "Current Player:#" + global.display_name,offset,offset,0);

draw_line(0,(360-100)*offset,1920,(360-100)*offset);
draw_line(0,(360+100)*offset,1920,(360+100)*offset);

draw_set_halign(fa_center)
draw_set_font(fnt_Score)
draw_text_transformed(640*offset, (360 - 32)*offset, "SIGNED IN TO PLAY",offset,offset,0);

    draw_set_font(fnt_LowGun)
    draw_text_transformed(640*offset, (360 + 14)*offset, "Press      to Start Game",offset,offset,0);
    
    draw_set_color(c_green);
    draw_circle(588*offset, (365+14)*offset,11*offset,true);
    draw_circle(588*offset, (365+14)*offset,11.5*offset,true);
    draw_circle(588*offset, (365+14)*offset,12*offset,true);
    draw_circle(588*offset, (365+14)*offset,12.5*offset,true);
    draw_text_transformed(588*offset, (360+14)*offset, "A",offset,offset,0);
    
    draw_set_font(fnt_LowGun)
    draw_set_color(c_white);
    draw_set_halign(fa_center)
    draw_text_transformed(640*offset, (363+48)*offset, "Press       to Change User",offset,offset,0);
    
    draw_set_color(c_yellow);
    draw_circle(583*offset, (368+48)*offset,11*offset,true);
    draw_circle(583*offset, (368+48)*offset,11.5*offset,true);
    draw_circle(583*offset, (368+48)*offset,12*offset,true);
    draw_circle(583*offset, (368+48)*offset,12.5*offset,true);
    draw_text_transformed(583*offset, (363+48)*offset, "Y",offset,offset,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
