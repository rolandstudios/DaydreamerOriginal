<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-26</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>death_clock_start=false;    
death_clock_Hours=0;

death_clock_Minutes=global.ranked_Minutes;
death_clock_Seconds=global.ranked_Seconds;

//death_clock_Minutes=10;
//death_clock_Seconds=0;

death_clock_alarm=false;
death_clock_scale=1.1;
death_clock_pause=false;


summon=false;
pet_alpha=0;
flash=0;
flashup=true;
dest_score=global.Points;
alarms=0;
set_alarms=true;
grow=0;
orig_x=-100;
orig_y=0;
phase=0
twinkle_frame_A=0;
twinkle_x_A=irandom_range(483,500);
twinkle_y_A=irandom_range(80,90);

money_index=0;

four_bar_flash=false;
shield_flashup=false;
shield_flash=1;
last_shield=par_HERO.shields;

show_Plus_Score=false;
last_score=global.Points;
last_enemy_count=0;

Plus_Score=0;
Plus_Score_scale=.5;
Plus_Score_x=1100;
Plus_Score_y=200;
Plus_Score_last=0;
Plus_Score_multiplier=0;
Plus_Score_color=c_white;
Plus_Score_flash_count=0;
Plus_Score_Size=.5;

Plus_Score_flash=1;
Plus_Score_flashup=true;


Money_flash=1;
Money_flashup=true;
Money_low=false;

Hp_low=false;

shake=false;
shake_x=0;
shake_y=0;
range=2;

const=0;
money_scale=1;
if instance_exists(par_HERO)
money_last=par_HERO.money;
else
money_last=0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>death_clock_alarm=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_ten_minutes,12,false);
death_clock_start=true; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>summon=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>set_alarms=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(snd_nomoney,.4,0);
audio_sound_pitch(snd_nomoney,global.game_speed);
audio_play_sound(snd_nomoney,16,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Hp_low=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>four_bar_flash=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Money_low=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_pitch(snd_Points_D,.8+.05*Plus_Score_multiplier);
audio_sound_gain(snd_Points_D,.1*Plus_Score_multiplier,0);
audio_play_sound(snd_Points_D,10,false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(par_HERO)
{
if (Plus_Score_multiplier&gt;par_HERO.max_chain)
    {
    par_HERO.max_chain=Plus_Score_multiplier;
    
    if (global.platform==1)
    {
    scr_XboxOne_Achievement(24); 
    }
    
    }
}

show_Plus_Score=false;
Plus_Score_last=0;
Plus_Score_multiplier=0;
audio_sound_pitch(snd_Got_special_A, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//REGULATE GAME CLOCK -------
if (global.ranked==true) //INIT DEATH CLOCK
    {
        if (death_clock_start==false)
        {
            if (global.CutScene==false)
            {
            if (alarm[9]==-1)
            {
            if !instance_exists(obj_Alarm) instance_create(0,0,obj_Alarm);
            alarm[9]=150;
            audio_play_sound(snd_ToWar,9,false);
            }
            }
        }
    }
    

    global.Seconds+=1/room_speed;
    
    if (global.Seconds&lt;60) &amp;&amp; (global.Seconds &gt;59.9)
    {
        global.Seconds=0;
        global.Minutes +=1;
    }
    
    if (global.Minutes==60) 
    {
        global.Minutes=0;
        global.Hours +=1;
    }


if (global.ranked==true) &amp;&amp; (death_clock_start==true)  //RANKED DEATH CLOCK COUNT DOWN ------
{
    if (global.CutScene==false)
    {
        if (death_clock_pause==false)
        death_clock_Seconds-=1/room_speed;
    }
    else
    {
        if instance_exists(obj_Inventory) 
        {
        if (death_clock_pause==false)
        death_clock_Seconds-=1/room_speed;
        }
    }
    
    if (death_clock_Seconds&lt;0) 
    {
    if (death_clock_Minutes&gt;0) 
            {
            if (death_clock_Minutes==5) 
                {                
                audio_sound_pitch(snd_five_minutes,global.game_speed);
                audio_play_sound(snd_five_minutes,15,false);
                death_clock_alarm=true;
                alarm[10]=30;
                }
            if (death_clock_Minutes==1) 
                {
                audio_play_sound(snd_ALARM_A,9,false);
                audio_sound_pitch(snd_one_minutes,global.game_speed);
                audio_play_sound(snd_one_minutes,15,false);
                eath_clock_alarm=true;
                alarm[10]=30;
                }
            
            death_clock_Minutes -=1;   
            death_clock_Seconds=60;
            }
            else
            {
            death_clock_Seconds=0; //TIME OUT
            }
    }
    
    if (death_clock_Minutes&lt;0) 
    {
        death_clock_Minutes=60;
    if (death_clock_Hours&gt;0) global.Hours -=1;        
    }
    
    if (death_clock_Seconds&lt;=0) //KILL HERO WHEN TIME RUNS OUT
    {
        if(death_clock_Minutes&lt;=0)
            {
            if (death_clock_Hours&lt;=0) 
                {
                if instance_exists(par_HERO)
                {
                if (alarm[8]==-1)
                    { 
                    audio_sound_pitch(snd_goodbye,global.game_speed);
                    audio_play_sound(snd_goodbye,15,false);
                    with instance_create(par_HERO.x,par_HERO.y,obj_Enemy) {damage=100;}
                    alarm[8]=200;
                    }
                }
                }
            }
            
    }
    
} //END -------------------------------------- RANKED



//REGULATE HEALTH ALARM

if (par_HERO.hp&lt;=10)
{
    if (Hp_low==false)
    {
    if (par_HERO.shields&gt;=5)
        {
        if !instance_exists(obj_ForceField)
            {
            if (set_alarms==true)//DONT SPAM ALARMS
            {
            set_alarms=false
            Hp_low=true;
            alarms=3;
            alarm[4]=120;
            alarm[6]=1000;
            }
            }
        }
    
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Plus_Score_multiplier=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(par_HERO)
{
if window_get_fullscreen()
{
offset=1.5
orig_x=-17;
}
else
{
offset=1
orig_x=-13+5; //Shifts all UI
}

draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_set_font(fnt_BytePolice);


if (flash&lt;=.5) flashup=true;
if (flash&gt;=.75) flashup=false;
if (flashup) flash+=.01; else flash-=.01;

// WARPs -------------------------------------------------
draw_set_alpha(1);
draw_sprite_ext(spr_Warp_UI,0,orig_x+475*offset,orig_y+20*offset,offset,offset,0,c_white,.85);
draw_text_transformed(orig_x+483*offset,orig_y+20*offset,":",offset,offset,image_angle); //+ string(par_HERO.warps)

var i;
for (i = 1; i &lt; par_HERO.warps+1; i += 1)
{

draw_set_color(make_color_hsv(128,90,255));
    
    if (i==par_HERO.warps) || (par_HERO.warps&gt;=5)
    {
        draw_set_alpha(flash);
        
        if (par_HERO.warping) 
        draw_sprite_ext(spr_warp_boosts,0,orig_x+(492+6*i)*offset,orig_y+22*offset,offset,offset,0,c_orange,.8);
        else
        draw_sprite_ext(spr_warp_boosts,0,orig_x+(492+6*i)*offset,orig_y+22*offset,offset,offset,0,make_color_hsv(128,90,255),flash);        
    }
    else
    {
        draw_set_alpha(.5);
        draw_sprite_ext(spr_warp_boosts,0,orig_x+(492+6*i)*offset,orig_y+22*offset,offset,offset,0,make_color_hsv(128,90,255),.5);        
    }
}
draw_set_color(c_white);

//SHIELDS ----------------------------------------------

//DRAW PIE
draw_set_alpha(1);
draw_sprite_ext(spr_Shield_UI,0,orig_x+475*offset,orig_y+40*offset,offset,offset,0,c_white,.85);
draw_text_transformed(orig_x+483*offset,orig_y+40*offset,":",offset,offset,image_angle); //+ string(par_HERO.warps)


if (four_bar_flash) draw_set_color(make_color_hsv(128,irandom_range(1,255),255));

for (i = 1; i &lt; par_HERO.shields+1; i += 1)
{
if (i==par_HERO.shields) || (par_HERO.shields&gt;=5)
draw_set_alpha(flash);
else
draw_set_alpha(.5);


if (par_HERO.shields&gt;last_shield)
{
    if(par_HERO.shields==5)
    {
        four_bar_flash=true;
    if (alarm[3]==-1) 
        {
            audio_play_sound(snd_shield_charge,11,false);
            alarm[3]=50;
        }
    }

}

last_shield=par_HERO.shields;

    if (four_bar_flash)
    {
            
            if (shield_flash&lt;=0) shield_flashup=true;
            if (shield_flash&gt;=1) shield_flashup=false;
            if (shield_flashup) shield_flash+=.25; else shield_flash-=.25;

            draw_set_alpha(.8);
            
            draw_rectangle(orig_x+(490+6*i)*offset,orig_y+39*offset,orig_x+(494+6*i)*offset,orig_y+46*offset,false);
    }
    else
    {
        draw_set_color(make_color_hsv(128,90,255));
        draw_rectangle(orig_x+(490+6*i)*offset,orig_y+39*offset,orig_x+(494+6*i)*offset,orig_y+46*offset,false);
    }

}
draw_set_color(c_white);



//BULLET TIME -------------------------------
draw_sprite_ext(spr_game_time,0,orig_x+475*offset,orig_y+60*offset,.7*offset,.7*offset,0,c_white,.85);
draw_text_transformed(orig_x+483*offset,orig_y+60*offset,":",offset,offset,image_angle); //+ string(par_HERO.warps)
draw_set_color(make_color_hsv(128,90,255));

    draw_set_alpha(flash);
        
    if(global.game_speed&lt;1) //FLASH IF BULLET TIME
    {
    phase+=1;
    if (phase&lt;4) draw_set_color(c_orange);
    if (phase&gt;4) draw_set_color(c_aqua); 
    if (phase&gt;8) phase=0;
    }
    
    
    if instance_exists(obj_SIN_Health) 
        {
        draw_set_color(c_red);
        par_HERO.Bullet_Time-=1;
        if (par_HERO.Bullet_Time&lt;0) par_HERO.Bullet_Time=0;
        //draw_set_alpha(1);
        }
    
draw_rectangle(orig_x+(496)*offset,orig_y+59*offset,orig_x+(496+par_HERO.Bullet_Time*.28)*offset,orig_y+66*offset,false);
draw_set_color(c_white);
//MONEY -------------------------------------
draw_set_alpha(1);
if (par_HERO.money&gt;1000000) par_HERO.money=1000000;
if (par_HERO.money&lt;0) par_HERO.money=0;

if (money_last&lt;par_HERO.money) 
    {
    Money_low=false;
    money_scale+=.1*(par_HERO.money-money_last);
    
    if (money_scale&gt;1.25) money_scale=1.25; 
    twinkle_frame_A=0;
    twinkle_x_A=irandom_range(490,520);
    twinkle_y_A=irandom_range(80,90);
    }
    
money_last=par_HERO.money;

draw_sprite_ext(spr_Monies_Single,money_index,orig_x+480*offset,orig_y+88*offset,.3*offset,.3*offset,0,c_white,1);
money_index+=.5;
if (money_index&gt;=30) money_index=0;

        if (money_scale&gt;1.1) 
        {
        if (Money_flash&lt;=0) Money_flashup=true;
        if (Money_flash&gt;=1) Money_flashup=false;
        if (Money_flashup) Money_flash+=.5; else Money_flash-=.5;
        draw_set_alpha(Money_flash);
        }

if (par_HERO.money&lt;10)
{
    draw_text_transformed(orig_x+483*offset,orig_y+81*offset,": 00" + string(par_HERO.money),money_scale*offset,money_scale*offset,image_angle);
}
else if (par_HERO.money&lt;100)
{
    draw_text_transformed(orig_x+483*offset,orig_y+81*offset,": 0" + string(par_HERO.money),money_scale*offset,money_scale*offset,image_angle);
}
else
{
    draw_text_transformed(orig_x+483*offset,orig_y+81*offset,": " + string(par_HERO.money),money_scale*offset,money_scale*offset,image_angle);
}

draw_set_alpha(1);

if (money_scale&gt;1) 
    {
    money_scale-=.01;
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(spr_Twinkle_A,twinkle_frame_A*offset,twinkle_x_A*offset,twinkle_y_A*offset,.5*offset,.5*offset,0,c_white,1);
    if (twinkle_frame_A&lt;14) twinkle_frame_A+=.5;
    draw_set_blend_mode(bm_normal);
    }
    

    
//TIMER --------------------------------------


draw_set_font(fnt_Orbitron);
draw_set_halign(fa_right);
draw_set_alpha(.5); draw_set_color(c_black);
 draw_text_transformed(orig_x+(596-1)*offset,orig_y+(24+1)*offset,"Time:",.9*offset,.9*offset,image_angle);
 draw_text_transformed(orig_x+(596-1)*offset,orig_y+(52+1)*offset,"Score:",.9*offset,.9*offset,image_angle);
draw_set_alpha(1); draw_set_color(c_yellow);
 draw_text_transformed(orig_x+596*offset,orig_y+24*offset,"Time:",.85*offset,.9*offset,image_angle);
 draw_text_transformed(orig_x+596*offset,orig_y+52*offset,"Score:",.85*offset,.9*offset,image_angle);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_font(fnt_Digital);

//NORMAL CLOCK
if (global.ranked==false)
{
    if (global.Seconds&lt;10) &amp;&amp; (global.Minutes&lt;10)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(global.Hours)+":0"+string(global.Minutes)+":0"+string(global.Seconds),1.1*offset,1.1*offset,image_angle);
    }
    else if(global.Seconds&gt;=10) &amp;&amp; (global.Minutes&gt;=10)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(global.Hours)+":"+string(global.Minutes)+":"+string(global.Seconds),1.1*offset,1.1*offset,image_angle);
    }
    else if (global.Seconds&lt;10) &amp;&amp; (global.Minutes&gt;=10)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(global.Hours)+":"+string(global.Minutes)+":0"+string(global.Seconds),1.1*offset,1.1*offset,image_angle);
    }
    else if (global.Seconds&gt;=10) &amp;&amp; (global.Minutes &lt;10)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(global.Hours)+":0"+string(global.Minutes)+":"+string(global.Seconds),1.1*offset,1.1*offset,image_angle);
    }
}

//DEATH CLOCK
if (global.ranked==true)
{
 if (death_clock_Minutes==0) death_clock_color =c_red; else death_clock_color=c_white;
 
        if (death_clock_alarm==false)
        {
            death_clock_scale=1.1;
        }
        else
        {
            death_clock_scale=1+sin(grow)*.05;
            if (irandom_range(1,3)==1) death_clock_color=c_red;
        }

   
    
    draw_set_color(death_clock_color);

    if (death_clock_Seconds&lt;10) &amp;&amp; (death_clock_Minutes&lt;10)
    {        
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(death_clock_Hours)+":0"+string(death_clock_Minutes)+":0"+string(death_clock_Seconds),death_clock_scale*offset,death_clock_scale*offset,image_angle);
    }
    else if(death_clock_Seconds&gt;=10) &amp;&amp; (death_clock_Minutes&gt;=10)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(death_clock_Hours)+":"+string(death_clock_Minutes)+":"+string(death_clock_Seconds),death_clock_scale*offset,death_clock_scale*offset,image_angle);
    }
    else if (death_clock_Seconds&lt;10) &amp;&amp; (death_clock_Minutes&gt;=10)
    {
        if (death_clock_Seconds==0)
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(death_clock_Hours)+":"+string(death_clock_Minutes)+":0"+string(death_clock_Seconds)+".00",death_clock_scale*offset,death_clock_scale*offset,image_angle);
        else
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(death_clock_Hours)+":"+string(death_clock_Minutes)+":0"+string(death_clock_Seconds),death_clock_scale*offset,death_clock_scale*offset,image_angle);
    }
    else if (death_clock_Seconds&gt;=10) &amp;&amp; (death_clock_Minutes &lt;10)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+29*offset,string(death_clock_Hours)+":0"+string(death_clock_Minutes)+":"+string(death_clock_Seconds),death_clock_scale*offset,death_clock_scale*offset,image_angle);
    }
    
}
draw_set_color(c_white);

//SHOW SCORE --------------------------------------------------------------------------------------------------------------------------------------------------------------------

if !instance_exists(obj_StageClear_header)
{
if (last_score!=global.Points)
    {
    
    //Plus_Score_multiplier+=1;
    Plus_Score_multiplier+=abs(last_enemy_count-instance_number(par_Enemy_Body));
    
    if (Plus_Score_multiplier&gt;1) shake=true; else shake=false;
   
    Plus_Score=(global.Points-last_score)*Plus_Score_multiplier+Plus_Score_last;
    
    //BONUS POINTS ------------------
    Plus_Score_bonus=(global.Points-last_score)*(Plus_Score_multiplier-1);
    if (Plus_Score_bonus&gt;0) 
        {
        global.Points+=Plus_Score_bonus;
        last_score+=Plus_Score_bonus;
        }
    //-------------------------------       
    Plus_Score_last=Plus_Score
    //alarm[0]=100;
    alarm[0]=250;
    show_Plus_Score=true;
    Plus_Score_scale=1;
    if (Plus_Score_multiplier&lt;17)
    Plus_Score_x=1100;
    else
    Plus_Score_x=1000;
    
    Plus_Score_y=200;
    const=Plus_Score/50;
    
    if (Plus_Score_multiplier&gt;1) //&amp;&amp; (Plus_Score_multiplier&lt;6) //JAB SOUND
    {
    audio_sound_gain(snd_Jab,.2+Plus_Score_multiplier*.1,0)
    if (Plus_Score_multiplier&lt;7) audio_sound_pitch(snd_Jab,.9+Plus_Score_multiplier*.1);
    audio_play_sound(snd_Jab,10,false);
    }
    
    
    if (Plus_Score_multiplier&gt;4) //SUPER SPECIAL
    {
    audio_sound_gain(snd_HitMetal,1,0)
    audio_play_sound(snd_HitMetal,10,false);
    
    switch(Plus_Score_multiplier)
        {  
        case 5:
        audio_sound_gain(snd_Meow_Angry, .75,0);
        audio_sound_pitch(snd_Meow_Angry,1);
        audio_play_sound(snd_Meow_Angry,11,false);
        break;
              
        case 6:
        audio_sound_pitch(snd_Bonus, .5);
        audio_play_sound(snd_Bonus,11,false);
        break;
        
        case 7:
        audio_sound_pitch(snd_Bonus, .6);
        audio_play_sound(snd_Bonus,11,false);
        break;
        
        case 8:
        audio_sound_pitch(snd_Bonus,.7)
        audio_play_sound(snd_Bonus,11,false);    
        break;
        
        case 9:
        audio_sound_pitch(snd_Bonus, .8)
        audio_play_sound(snd_Bonus,11,false);    
        break;
        
        case 10:
        audio_sound_pitch(snd_Bonus, .9)
        audio_play_sound(snd_Bonus,11,false);
        
        //STEAM
        if (global.platform==0)
        {
        if !steam_get_achievement("ach_10_Chain") 
             steam_set_achievement("ach_10_Chain");        
        }
        //XBOX ONE
        if (global.platform==1)
        {                     
            scr_XboxOne_Achievement(2);                     
        }
        //PS4
        if (global.platform==3)
        {       
            scr_PS4_Trophies(2);                                   
        }         
        break;
        
        case 11:
        audio_sound_pitch(snd_Bonus, 1)
        audio_play_sound(snd_Bonus,11,false);    
        break;
        
        case 12:
        audio_sound_pitch(snd_Bonus, 1.1)
        audio_play_sound(snd_Bonus,11,false);    
        break;
        
        case 13:
        audio_sound_pitch(snd_Bonus, 1.2)
        audio_play_sound(snd_Bonus,11,false);    
        break;
        
        case 14:
        audio_play_sound(snd_Consumer_Laugh,10,false);
        audio_sound_pitch(snd_HeavyDamage, 1);
        audio_play_sound(snd_HeavyDamage,11,false);
        break;
        
        case 15:
        //XBOX ONE
        if (global.platform==1)
        { 
            scr_XboxOne_Achievement(3);                             
        }
        //PS4
        if (global.platform==3)
        {       
            scr_PS4_Trophies(3);                                   
        }         
        break;
        
        case 20:
        //STEAM
        if (global.platform==0)
        {       
         if !steam_get_achievement("ach_20_Chain") 
             steam_set_achievement("ach_20_Chain");
        }
        //XBOX ONE
        if (global.platform==1)
        {   
            scr_XboxOne_Achievement(4);                                        
        }
        //PS4
        if (global.platform==3)
        {       
            scr_PS4_Trophies(4);                                   
        }         
        break;
         
        }
    }
    
    
    shake_x=0;
    shake_y=0;
    range=3;
    }
    
    last_score=global.Points;
    if (dest_score&lt;global.Points) dest_score+=1;
    
               
    
    draw_set_font(fnt_Orbitron);
    if (dest_score&lt;10)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+55*offset,"000"+string(round(dest_score)),1.1*offset,1.1*offset,image_angle);
    }
    else if (dest_score&lt;100)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+55*offset,"00"+string(round(dest_score)),1.1*offset,1.1*offset,image_angle);
    }
    else if (dest_score&lt;1000)
    {
        draw_text_transformed(orig_x+607*offset,orig_y+55*offset,"0"+string(round(dest_score)),1.1*offset,1.1*offset,image_angle);
    }
    else
    {
        draw_text_transformed(orig_x+607*offset,orig_y+55*offset,string(round(dest_score)),1.1*offset,1.1*offset,image_angle);
    }

if (show_Plus_Score==true)
{
    
    if (Plus_Score_scale&lt;1) //ZIP UP FAST
    {
     Plus_Score_scale*=1.07;
    }
    else                
    if (Plus_Score_scale&lt;1.25) //SLOW GROW
    {
     Plus_Score_scale+=.001;
     if (Plus_Score_scale&gt;1.05) shake=false;
    }
     
     
    if (Plus_Score_y&gt;170) Plus_Score_y-=.25; //FLOAT UP
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_set_font(fnt_Score);
    
    
    if (shake) //SHAKE
    {
    shake_x=irandom_range(-range,range);
    shake_y=irandom_range(-range,range); 
    if (range&gt;0) range-=.1
    }
    else
    {
    shake_x=0;
    shake_y=0;
    }
    
    if (alarm[0]&lt;50) //COUNT DOWN POINTS 
        {
        Plus_Score=floor(Plus_Score-const);
        if (Plus_Score_multiplier&gt;1)
            {
            if (alarm[1]==-1) alarm[1] = 2;
            }
        }
    if(Plus_Score&lt;0) Plus_Score=0;
    
   
    
    if (Plus_Score_multiplier&lt;=1) //PLAIN SCORE
    {
    Plus_Score_color=c_white;
    draw_set_font(fnt_Orbitron);
    draw_text_transformed_color((Plus_Score_x-2*Plus_Score_scale+shake_x)*offset,(Plus_Score_y+2*Plus_Score_scale+shake_y)*offset,"+ "+string(Plus_Score),Plus_Score_scale*offset,Plus_Score_scale*offset,0, c_black, c_black, c_black, c_black, .75);
    draw_text_transformed_color((Plus_Score_x+shake_x)*offset,(Plus_Score_y+shake_y)*offset,"+ "+string(Plus_Score),Plus_Score_scale*offset,Plus_Score_scale*offset,0, Plus_Score_color, Plus_Score_color, Plus_Score_color, Plus_Score_color, .75);
    }
    else
    {
    
        if (Plus_Score_multiplier&gt;=5) //SCORE FLASH COLOR
        {         
        if (Plus_Score_flash_count&lt;4)
            {
            Plus_Score_color=c_aqua;
            }
            else
            {
            Plus_Score_color=c_orange;
            }
            
        Plus_Score_flash_count+=1; 
        if (Plus_Score_flash_count&gt;8)  Plus_Score_flash_count=0;      
        Plus_Score_flash=1;
        Plus_Score_Size=1;
        }
        
        if (Plus_Score_multiplier==3) || (Plus_Score_multiplier==4)//RUMBLE WITH SCORE FLASH
        {
        if (Plus_Score_flash&lt;=0) Plus_Score_flashup=true;
        if (Plus_Score_flash&gt;=1) Plus_Score_flashup=false;
        if (Plus_Score_flashup) Plus_Score_flash+=.5; else Plus_Score_flash-=.5;
        
        Plus_Score_Size=.85;
        Plus_Score_color=c_white;
        }
        
        if (Plus_Score_multiplier&lt;3) //PLAIN SCORE WITH RUMBLE
        {
        Plus_Score_flash=1;
        Plus_Score_Size=.7;
        Plus_Score_color=c_white;
        }
    
    draw_text_transformed_color((Plus_Score_x-2*Plus_Score_scale+shake_x)*offset,(Plus_Score_y+2*Plus_Score_scale+shake_y)*offset,"+ "+string(Plus_Score)+" x"+string(Plus_Score_multiplier),Plus_Score_scale*Plus_Score_Size*offset,Plus_Score_scale*Plus_Score_Size*offset,0, c_black, c_black, c_black, c_black, .75*Plus_Score_flash);
    draw_text_transformed_color((Plus_Score_x+shake_x)*offset,(Plus_Score_y+shake_y)*offset,"+ "+string(Plus_Score)+" x"+string(Plus_Score_multiplier),Plus_Score_scale*Plus_Score_Size*offset,Plus_Score_scale*Plus_Score_Size*offset,0, Plus_Score_color, Plus_Score_color, Plus_Score_color, Plus_Score_color, Plus_Score_flash);
    draw_set_font(fnt_Orbitron);
    draw_text_transformed_color((Plus_Score_x-2*Plus_Score_scale)*offset,(Plus_Score_y+2*Plus_Score_scale+30*Plus_Score_Size)*offset,"Chain Bonus: "+string(Plus_Score_bonus),Plus_Score_scale*Plus_Score_Size*offset,Plus_Score_scale*Plus_Score_Size*offset,0, c_yellow, c_yellow, c_yellow, c_yellow, 1);    
    }
}
}
else
{
last_score=global.Points;
}

grow+=.25*global.game_speed;


//WARPS
draw_set_halign(fa_left);
draw_set_color(c_aqua);
draw_set_alpha(.25);
draw_roundrect(orig_x+(491)*offset,(orig_y+14)*offset,orig_x+(529)*offset,(orig_y+30)*offset,true);

//SHIELD
draw_set_color(c_aqua);
draw_set_alpha(.25);

if (Hp_low==false)
    {
        
    if (four_bar_flash)
    {
        draw_set_color(make_color_hsv(128,irandom_range(1,255),255));
        draw_set_alpha(.55);
    }
    
    draw_roundrect(orig_x+(491)*offset,(orig_y+34)*offset,orig_x+(529)*offset,(orig_y+50)*offset,true);
    }
    else
    {
        if (alarms&gt;0)
        {
        if (alarm[5]==-1)
            { 
            alarms-=1;
            alarm[5]=30; //play alarm
            }
        }
        
        if (money_scale&lt;1.1) 
        {
        if (Money_flash&lt;=0) Money_flashup=true;
        if (Money_flash&gt;=1) Money_flashup=false;
        if (Money_flashup) Money_flash+=.25; else Money_flash-=.25;     
        }
        
        draw_set_alpha(Money_flash);
        draw_set_color(c_red);       
        draw_roundrect(orig_x+(491)*offset,(orig_y+34)*offset,orig_x+(529)*offset,(orig_y+50)*offset,true);
        draw_roundrect(orig_x+(492)*offset,(orig_y+35)*offset,orig_x+(528)*offset,(orig_y+49)*offset,true);
        draw_set_font(fnt_BytePolice);
        draw_set_halign(fa_center);
        if (Money_low)
        draw_text_transformed( orig_x+(510)*offset,(orig_y+115)*offset,"(SHIELD UP!!)",(1+sin(grow)*.1)*offset,(1+sin(grow)*.1)*offset,0)
        else
        draw_text_transformed( orig_x+(510)*offset,(orig_y+100)*offset,"(SHIELD UP!!)",(1+sin(grow)*.1)*offset,(1+sin(grow)*.1)*offset,0);   
    }

//BULLET TIME
    draw_set_color(c_aqua);
    draw_set_alpha(.25);
    draw_roundrect(orig_x+(491)*offset,(orig_y+54)*offset,orig_x+(529)*offset,(orig_y+70)*offset,true); 

//MFORCE
    if (Money_low)
    {        
        if (alarms&gt;0)
        {
        if (alarm[5]==-1) 
            {
            alarms-=1;
            alarm[5]=30; //play alarm
            }        
        }
        
        if (alarm[2]==-1) 
            {
            if (set_alarms==true) //DONT SPAM ALARMS
            {
            set_alarms=false;
            alarm[6]=1000;
            alarms=3;
            alarm[2]=120;
            }
            }
        
        if (money_scale&lt;1.1) 
        {
        if (Money_flash&lt;=0) Money_flashup=true;
        if (Money_flash&gt;=1) Money_flashup=false;
        if (Money_flashup) Money_flash+=.25; else Money_flash-=.25;     
        }
        
        draw_set_alpha(Money_flash);
        draw_set_color(c_red);       
        draw_roundrect(orig_x+(491)*offset,(orig_y+72)*offset,orig_x+(529)*offset,(orig_y+88)*offset,true);
        draw_roundrect(orig_x+(492)*offset,(orig_y+73)*offset,orig_x+(528)*offset,(orig_y+87)*offset,true);
        draw_set_font(fnt_BytePolice);
        draw_set_halign(fa_center);
        draw_text_transformed( orig_x+(510)*offset,(orig_y+100)*offset,"(RUNNING LOW!!)",(1+sin(grow)*.1)*offset,(1+sin(grow)*.1)*offset,0);
    }
draw_set_alpha(1);
draw_set_color(c_white);

draw_set_alpha(1);
draw_set_halign(fa_left) //important

    
last_enemy_count=instance_number(par_Enemy_Body);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="120">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>death_clock_Minutes-=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
