<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_collide</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//Load Sprites ----------------------
offset=10;
alarm_hit=false;
if(master.spr_MegaBot_Explode==0)
{
master.num+=1;
master.spr_MegaBot_Explode=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Explode.png",24,0,1,124,117);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Dash_H==0)
{
master.num+=1;
master.spr_MegaBot_Dash_H=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Dash_H.png",25,0,1,179,115);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Dash_V==0)
{
master.num+=1;
master.spr_MegaBot_Dash_V=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Dash_V.png",25,0,1,146,195);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Blast==0)
{
master.num+=1;
master.spr_MegaBot_Blast=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Blast.png",21,0,1,218,118);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Jump==0)
{
master.num+=1;
master.spr_MegaBot_Jump=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Jump.png",35,0,1,178,151);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Slash==0)
{
master.num+=1;
master.spr_MegaBot_Slash=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Slash.png",19,0,1,250,138);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Turn==0)
{
master.num+=1;
master.spr_MegaBot_Turn=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Turn.png",13,0,1,111,120);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Walk==0)
{
master.num+=1;
master.spr_MegaBot_Walk=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Walk.png",32,0,1,133,127);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Sword==0)
{
master.num+=1;
master.spr_MegaBot_Sword=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Sword.png",11,0,1,371,252);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_MegaBot_Idle==0)
{
master.num+=1;
master.spr_MegaBot_Idle=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_MegaBot_Idle.png",33,0,1,75,116);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}




//-----------------------------------
image_xscale=1;
image_yscale=1;
image_speed=.5;
damage=10*global.difficulty;
hp=810;
moveChoose=false;
moveChoice=1;
swing_range = false;
hsp=0;
vsp=0;
jhsp=0;
acel=0;
grav=.6;
turn_count=0;

scale=image_yscale;
image_xscale=1;
image_yscale=1;
jumpspeed=8;
west_east = 0;
float=false;
floatup=true;
canland=false;
v_collide=true;
can_land=false;
grounded=false;
not_grounded=0;
alarm[0]=500;



sprite_index=spr_collide;
while !place_meeting(x,y,par_wall) y+=1;

with instance_create(x,y,obj_MegaBot_view)
    {
    scale=other.scale;
    }

hero_hp=0;
hero_damage=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (hp&lt;=0) 
{
global.world_clear[12]=1;
   
   //STEAM
   if (global.platform==0)
   {
   if !steam_get_achievement("ach_Defeat_Megabot") 
        steam_set_achievement("ach_Defeat_Megabot");
    }
    //XBOX ONE
    if (global.platform==1)
    {  
        scr_XboxOne_Achievement(18);                                          
    }
    //PS4
    if (global.platform==3)
    {       
        scr_PS4_Trophies(18);                                   
    } 
       
with instance_create(x,y,obj_CheckPoint){World=12.5;Boss=true;}
damage_bonus=round((100-hero_damage)*5);
    if (damage_bonus&gt;500) damage_bonus=500;
    if (damage_bonus&lt;0) damage_bonus=0;

    
time_bonus = (300-((global.Hours*3600+global.Minutes*60+global.Seconds)-time))*2.08;    
    if (time_bonus&gt;500) time_bonus=500;
    if (time_bonus&lt;0) time_bonus=0;
    
with instance_create(x,y,obj_StageClear_header)
    {
    point_bonus=500;
    time_bonus=other.time_bonus;
    damage_bonus=other.damage_bonus;    
    boss_num=12; 
    }
}
   
   

   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveChoose=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_MegaBot_view) instance_destroy();
if !instance_exists(par_HERO) {instance_destroy();}
else
{
sprite_index=spr_collide;
if (!alarm_hit)
{
instance_create(x,y,obj_Alarm);
audio_play_sound(snd_IndustrialRoar,10,false);
alarm_hit=true;
}

//CheckSwingRange
if(par_HERO.x &lt; x) &amp;&amp; (par_HERO.x &gt; x - 180) || (par_HERO.x &gt; x) &amp;&amp; (par_HERO.x &lt; x + 180) 
 {
 if (moveChoice&lt;3)
 swing_range = true; else swing_range = false;
 }
 else
 {
 swing_range = false;
 }

//check direction
if (par_HERO.x &gt; x)
{
    if(moveChoice&lt;3) || (moveChoose)
    {
    
    if (moveChoice==1) hsp=0; //Idle
    if (moveChoice==2) hsp=3; //Walk
    
     if(west_east == 0)
        {
         turn_count+=1;
         alarm[0]=2000/global.game_speed;
         moveChoose=false;
         moveChoice=8;
         obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Turn];
         obj_MegaBot_view.image_speed=.5*global.game_speed;
         obj_MegaBot_view.image_index=0;
         hsp=0;
         audio_sound_pitch(snd_droid_discharge,global.game_speed);
         audio_play_sound(snd_droid_discharge,10,false);
         }
         else
         {
         west_east = 1;
         image_xscale = -scale;
         }
    }
    
}

if (par_HERO.x &lt; x) 
{
    if(moveChoice&lt;3) || (moveChoose)
    {
    
    if (moveChoice==1) hsp=0;  //Idle
    if (moveChoice==2) hsp=-3; //Walk
  
    if(west_east == 1)
        {
         turn_count+=1;
         alarm[0]=2000/global.game_speed;
         moveChoose=false;
         moveChoice=8;
         obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Turn];
         obj_MegaBot_view.image_speed=.5*global.game_speed;
         obj_MegaBot_view.image_index=0;
         hsp=0;
         audio_sound_pitch(snd_droid_discharge,global.game_speed);
         audio_play_sound(snd_droid_discharge,10,false);
         }
         else
         {
            west_east = 0;
            image_xscale = scale;
         }
    }
   
}

if(swing_range) 
{
 if(moveChoice&lt;3)
 {
 if(obj_MegaBot_view.sprite_index != global.sprite[master.spr_MegaBot_Slash]) 
    {
    if (obj_MegaBot_view.sprite_index != global.sprite[master.spr_MegaBot_Turn])
    {
    obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Slash];
    obj_MegaBot_view.image_speed=.5*global.game_speed;
    obj_MegaBot_view.image_index=0;
    moveChoose=false;
    moveChoice=3;
    }
    }
 }
} 
 

 
 if(moveChoose==true)
    {
    turn_count=0;
       
      n=irandom_range(1, 7);
            
     while(n==moveChoice)
        {
            n=irandom_range(1, 7);   
        }
        
        if (n==5)
            {
                if (y&lt;800) n=2;  //IF TOO HIGH FOR V_DASH THEN WALK     
            }
        
     moveChoice=n;
         
         //Initiallize the Move
        switch(moveChoice)
            {
            case 1:  //Stand
            obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Idle];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            alarm[0]=40/global.game_speed;
            damage=7*global.difficulty;
            not_grounded=0;
            break;
            
            case 2:  //Walk
            obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Walk];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            alarm[0]=100/global.game_speed;
            damage=7*global.difficulty;
            not_grounded=0;
            break;
            
            case 3:  //Slash
            //audio_play_sound(snd_SIN_Bite,10,false);
            obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Slash];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            audio_sound_pitch(snd_saberwhoosh,global.game_speed);
            audio_play_sound(snd_saberwhoosh,10,false);
            damage=15*global.difficulty;
            break;

            case 4:  //Jump
            obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Jump];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            jhsp=10*-(sign(image_xscale));
            acel=1;
            canland=false;
            
            break;
            
            case 5:   // DASH VERTICAL
            obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Dash_V];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            damage=7*global.difficulty;
            acel=1;
            audio_sound_pitch(snd_droid_check,global.game_speed);
            audio_play_sound(snd_droid_check,10,false);
            can_land=false;
            
            
            
            break;
            
            case 6:  //Blast
            //audio_play_sound(snd_SIN_Impact,10,false);
            obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Blast];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            
            instance_create(x,y,obj_MegaBot_LockOn);
            damage=10*global.difficulty;
            audio_sound_pitch(snd_droid_check,global.game_speed);
            audio_play_sound(snd_droid_check,10,false);
            break;
            
            case 7:  // DASH HORIZONTAL
            obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Dash_H];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            damage=0;
            audio_sound_pitch(snd_droid_check,global.game_speed);
            audio_play_sound(snd_droid_check,10,false);
            
            break;
            
            
            }
        moveChoose=false;  
        if audio_is_playing(snd_droid_walk) 
            audio_stop_sound(snd_droid_walk);          
    }


    
switch(moveChoice)
{

case 1: //Stand
    
    obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Idle]; 
    obj_MegaBot_view.image_speed=.5*global.game_speed;          
    damage=7*global.difficulty;
    hsp=0;
    vsp=0;
    
    if (!grounded) 
        not_grounded+=1; else not_grounded=0;
        
    if (not_grounded&gt;=3) //IF FLOATING ON AIR THEN FALL
        {
        moveChoice=4;
        acel=1;
        obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Jump];
        obj_MegaBot_view.image_index=0;
        obj_MegaBot_view.image_speed=.5*global.game_speed;
        jhsp=10*-(sign(image_xscale));
        alarm[0]=2000/global.game_speed;
        }
    

break;


case 2: //Walk
    damage=7*global.difficulty;
    obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Walk]; 
    obj_MegaBot_view.image_speed=.5*global.game_speed;          
    
    vsp=0;
    audio_sound_pitch(snd_droid_walk,global.game_speed);
    
    if !audio_is_playing(snd_droid_walk)
        audio_play_sound(snd_droid_walk,10,false);
        
    if (!grounded) 
        not_grounded+=1; else not_grounded=0;
        
    if (not_grounded&gt;=3) //IF FLOATING ON AIR THEN FALL
        {
        moveChoice=4;
        acel=1;
        obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Jump];
        obj_MegaBot_view.image_index=0;
        obj_MegaBot_view.image_speed=.5*global.game_speed;
        jhsp=10*-(sign(image_xscale));
        alarm[0]=2000/global.game_speed;
        }
    
    
break;

case 3: //Slash
    damage=15*global.difficulty;
    obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Slash]; 
    obj_MegaBot_view.image_speed = .5*global.game_speed;
    alarm[0]=2000/global.game_speed;
    hsp=0;
    vsp=0;    
    if (obj_MegaBot_view.image_index&gt;=sprite_get_number(global.sprite[master.spr_MegaBot_Slash])-1) moveChoose=true;
        
break;
    
case 4: //Jump
    obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Jump];
    alarm[0]=2000/global.game_speed;   
    damage=9*global.difficulty;
    if (obj_MegaBot_view.image_index&lt;7)
        {
        hsp=0;
        vsp=0;
        obj_MegaBot_view.image_speed = .5*global.game_speed;
        }
    
    if (obj_MegaBot_view.image_index&gt;=7) &amp;&amp; (obj_MegaBot_view.image_index&lt;=24)
        {    
        if (obj_MegaBot_view.image_index&lt;15) 
            {
            vsp=-25+acel;
            if (acel&lt;75) acel+=1;
            hsp=jhsp;
            }//END MOVING UP
            
            else
            {
            jhsp=jhsp*.9;
            hsp=jhsp;
            if (acel&lt;75) acel+=2;//1.5;
            
        
        if(!grounded)
            {
                vsp=-25+acel;
                
            if (obj_MegaBot_view.image_index&gt;=19)
                    obj_MegaBot_view.image_speed = 0;
            }   
            else
            {
                if (acel&gt;50)
                {
                if !instance_exists(obj_Screen_Shake) 
                    with instance_create(x,y,obj_Screen_Shake)
                        {
                        quake=false; 
                        hold=30; 
                        if (obj_camera_offset_dummy.y&lt;room_height-350) wave=true; else wave=false;
                        max_range=irandom_range(8,20);
                        }
                    //with instance_create(x,y,obj_Screen_Shake){quake=false; hold=30;}
                }
                vsp=0;
                obj_MegaBot_view.image_speed = 1*global.game_speed;
            }
            }//END IF MOVING DOWN
        }
        
    if (obj_MegaBot_view.image_index&gt;=25)
        {
        if (round(obj_MegaBot_view.image_index)==25) 
            {
            audio_sound_pitch(snd_TrollSlash,global.game_speed);
            if !audio_is_playing(snd_TrollSlash)
            audio_play_sound(snd_TrollSlash,10,false);
            }
        hsp=0;
        vsp=0;
        obj_MegaBot_view.image_speed = .5*global.game_speed;
        }
        
    if(obj_MegaBot_view.image_index&gt;=sprite_get_number(global.sprite[master.spr_MegaBot_Jump])-1)
        moveChoose=true;    

break;
        
case 5: //DASH Vertical
damage=7*global.difficulty;
alarm[0]=2000/global.game_speed;
obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Dash_V];

if (obj_MegaBot_view.image_index&lt;7)
{
hsp=0;
vsp=0;
obj_MegaBot_view.image_speed=.5*global.game_speed;
}


if (obj_MegaBot_view.image_index&gt;=7)
{


if (obj_MegaBot_view.image_index&lt;17)
    {
    hsp=0;
    vsp=-30;
    v_collide=false;
    obj_MegaBot_view.image_speed=.5*global.game_speed;
    if place_meeting(x,y+vsp,par_wall) 
        {   
         if !place_meeting(x,y+vsp,obj_platform_128x4) can_land=true; 
         //audio_play_sound(snd_Got_special_A,10,false);
        }
    }
    else
    {
    v_collide=true;
    
    if (can_land)
    {
        if (!grounded)
        {
        hsp=0;
        vsp=10+acel;
        if (acel&lt;30) acel+=1;
        if (obj_MegaBot_view.image_index&gt;=17) obj_MegaBot_view.image_speed=0;
        }
        else
        {
        obj_MegaBot_view.image_speed=.5*global.game_speed;
        hsp=0;
        vsp=0;
    
        }
    }//END CAN LAND
        else
            {
            
            obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Dash_H];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            damage=0;
            audio_sound_pitch(snd_droid_check,global.game_speed);
            audio_play_sound(snd_droid_check,10,false);
            alarm[0]=200/global.game_speed;
            hsp=0;
            vsp=0;
            moveChoice=7;
            }
    
    }
}

if (round(obj_MegaBot_view.image_index)==6)
    {
    audio_sound_pitch(snd_warp,global.game_speed);
    if !audio_is_playing(snd_warp)
    audio_play_sound(snd_warp,10,false);
    }

if (obj_MegaBot_view.image_index&gt;=sprite_get_number(global.sprite[master.spr_MegaBot_Dash_V])-1)
    moveChoose=true;
    
break;

case 6:  //Blast
damage=10*global.difficulty;
obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Blast];
obj_MegaBot_view.image_speed=.5*global.game_speed;

if (round(obj_MegaBot_view.image_index)==6)
    {
    audio_sound_pitch(snd_AirBlast,global.game_speed);
    if !audio_is_playing(snd_AirBlast)
    audio_play_sound(snd_AirBlast,10,false);
    }
//if (obj_MegaBot_view.image_index==13) instance_create(x,y,obj_MegaBot_Blast);


if (obj_MegaBot_view.image_index&gt;=sprite_get_number(global.sprite[master.spr_MegaBot_Blast])-1) moveChoose=true;
hsp=0;
vsp=0;
break;

case 7:  //DASH Horizontal
obj_MegaBot_view.sprite_index =  global.sprite[master.spr_MegaBot_Dash_H];
damage=0;
if (obj_MegaBot_view.image_index&lt;7)
{
hsp=0;
vsp=0;
}


if (obj_MegaBot_view.image_index&gt;=7)
{

if (obj_MegaBot_view.image_index&lt;8)
    {
    audio_sound_pitch(snd_warp,global.game_speed);
    if !audio_is_playing(snd_warp)audio_play_sound(snd_warp,10,false);
    }
if (obj_MegaBot_view.image_index&lt;23)
    {
    hsp=30*-(image_xscale);
    vsp=0;
    }
    else
    {
    hsp=0;
    vsp=0;
    }
}

if (round(obj_MegaBot_view.image_index)==6)
    {
    audio_sound_pitch(snd_warp,global.game_speed);
    if !audio_is_playing(snd_warp)
    audio_play_sound(snd_warp,10,false);
    }
if (obj_MegaBot_view.image_index&gt;=sprite_get_number(global.sprite[master.spr_MegaBot_Dash_H])-1)
    {
     if (grounded)
     {
     moveChoose=true;
     }
     else
     {
     moveChoice=4;
     acel=30;
     obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Jump];
     obj_MegaBot_view.image_index=16;
     obj_MegaBot_view.image_speed=.5*global.game_speed;
     jhsp=0;
     alarm[0]=2000/global.game_speed;
     }    
    }

break;


case 8: //Turn
    if (turn_count&gt;=4)
    {
            turn_count=0;
            moveChoice=7;
            moveChoose=false;
            alarm[0]=100;
            obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Dash_H];
            obj_MegaBot_view.image_speed=.5*global.game_speed;
            obj_MegaBot_view.image_index=0;
            damage=0;
            audio_sound_pitch(snd_droid_check,global.game_speed);
            audio_play_sound(snd_droid_check,10,false);
    }
    else
    {
                        
damage=7*global.difficulty;
obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Turn]; 
obj_MegaBot_view.image_speed=.5*global.game_speed;
swing_range=false;
alarm[0]=2000/global.game_speed;
if audio_is_playing(snd_droid_walk) 
    audio_stop_sound(snd_droid_walk);  

if (obj_MegaBot_view.image_index&gt;=sprite_get_number(global.sprite[master.spr_MegaBot_Turn])-1) 
    {
    moveChoose=true;
    obj_MegaBot_view.sprite_index = global.sprite[master.spr_MegaBot_Turn];
    if (west_east==0) 
        {
        west_east = 1;
        image_xscale = -scale;
        x=x+(scale*10); //TURN OFFSET 
        obj_MegaBot_view.sprite_index =global.sprite[master.spr_MegaBot_Idle];
        }
        else
        { 
        west_east = 0;
        image_xscale = scale;
        x=x-(scale*10); //TURN OFFSET
        obj_MegaBot_view.sprite_index =global.sprite[master.spr_MegaBot_Idle];
        } 
    }
    }//END TURN COUNT CHECK
break;
}

vsp = vsp + grav*global.game_speed;


//Collisions ------------------------------------------------------------



//Horizontal Collision ------------------------------


if place_meeting(x+hsp,y,par_wall) 
{
    
    yplus = 0;   
    while (place_meeting(x+hsp,y-yplus,par_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus+= 1;
    if place_meeting(x+hsp,y-yplus,par_wall)
    {
        while (!place_meeting(x+sign(hsp),y,par_wall)) x+=sign(hsp);
        hsp = 0;        
    }
    else
        {
        y=y-yplus;
        }
    
}

x = x + hsp*global.game_speed;

//Vertical Collision ------------------------------
if (v_collide)
{
if place_meeting(x,y+vsp,par_wall) 
{ 
//if !place_free(x,y+vsp) 
// {    
    while (!place_meeting(x,y+sign(vsp),par_wall)) y=y+sign(vsp);
     

     
    if (sign(vsp) == 1)
    {
        grounded = 1; //Enable First Jump
        
        
    }
    
    vsp = 0;
// }    //END NOT PLACE FREE 
}
else
{
   grounded = 0;
}
}//END IF V_COLLIDE
y = y + vsp*global.game_speed;


if (hero_hp!=0)
{ 
if (par_HERO.hp&lt;hero_hp)
    {
        hero_damage+=(hero_hp-par_HERO.hp)
    }
hero_hp=par_HERO.hp;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_debug)
{
if (obj_debug.show_collide)
{
if (grounded)
    image_blend=c_red;
    else
    image_blend=c_white;
    
draw_self();
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>296,263</point>
    <point>277,277</point>
  </PhysicsShapePoints>
</object>
