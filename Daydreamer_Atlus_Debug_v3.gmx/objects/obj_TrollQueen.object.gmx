<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Load Sprites ----------------------
if(master.TrollQueen_Explode==0)
{
master.num+=1;
master.TrollQueen_Explode=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_Explode.png",20,0,1,106,248);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.TrollQueen_Turn==0)
{
master.num+=1;
master.TrollQueen_Turn=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_Turn.png",13,0,1,120*.9,270*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.TrollQueen_GetUP==0)
{
master.num+=1;
master.TrollQueen_GetUP=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_GetUP.png",16,0,1,199*.9,264*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}


if(master.TrollQueen_Stand==0)
{
master.num+=1;
master.TrollQueen_Stand=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_Stand.png",25,0,1,127*.9,258*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.TrollQueen_Fire==0)
{
master.num+=1;
master.TrollQueen_Fire=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_Fire.png",15,0,1,266*.9,284*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}


if(master.TrollQueen_Walk==0)
{
master.num+=1;
master.TrollQueen_Walk=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_Walk.png",30,0,1,166*.9,293*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

/*
if(master.TrollQueen_Swing==0)
{
master.num+=1;
master.TrollQueen_Swing=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_Swing.png",31,1,1,256,317);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}
*/

if(master.TrollQueen_BackHand==0)
{
master.num+=1;
master.TrollQueen_BackHand=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\TrollQueen_BackHand.png",17,0,1,279*.9,269*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.TrollQueen_UpperCut==0)
{
master.num+=1;
master.TrollQueen_UpperCut=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\TrollQueen_UpperCut.png",17,0,1,245*.9,277*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.TrollQueen_Jump==0)
{
master.num+=1;
master.TrollQueen_Jump=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_Jump.png",39,0,1,194*.9,315*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.TrollQueen_SlamGround==0)
{
master.num+=1;
master.TrollQueen_SlamGround=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_SlamGround.png",29,0,1,221*.9,402*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.TrollQueen_Sit==0)
{
master.num+=1;
master.TrollQueen_Sit=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TrollQueen_Sit.png",17,0,1,150*.9,240*.9);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}



//-----------------------------------




land=false;
fired=false;
hp = 850;
west_east = 0;
hsp=0;
vsp=0;
jhsp=0;
acel=0;
grav=.6;
grounded=false;
swing_range = false;
damage=8*global.difficulty;
shadow_ON=true;
not_grounded=0;
swing=1;
turns=0;

getup=false;
active=false;

image_xscale=1.3;
image_yscale=1.3;
scale=image_yscale;


moveChoose=false;
moveChoice=0;

//Create Shadow
instance_create(x,y,obj_TrollQueen_view);
sprite_index=global.sprite[master.TrollQueen_Sit];
image_speed=.5;

hero_hp=0;
hero_damage=0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_TrollQueen_dropShadow) {instance_destroy();}
with (obj_TrollQueen_Health) {instance_destroy();}

  
if (hp&lt;=0) 
{
global.world_clear[6]=1;

    //STEAM
    if (global.platform==0)
    {
    if !steam_get_achievement("ach_Defeat_Grimeboy") 
        steam_set_achievement("ach_Defeat_Grimeboy");
    }
    //XBOX ONE
    if (global.platform==1)
    {  
        scr_XboxOne_Achievement(14);                                      
    }
    //PS4
    if (global.platform==3)
    {       
        scr_PS4_Trophies(14);                                   
    }  
    
with instance_create(x,y,obj_CheckPoint){World=6.5; Boss=true;}

//const=500/(4*60); //MIN CONSTANT
damage_bonus=round((125-hero_damage)*4);
    if (damage_bonus&gt;500) damage_bonus=500;
    if (damage_bonus&lt;0) damage_bonus=0;

    
time_bonus = (300-((global.Hours*3600+global.Minutes*60+global.Seconds)-time))*2.08;    
    if (time_bonus&gt;500) time_bonus=500;
    if (time_bonus&lt;0) time_bonus=0;
    
with instance_create(x,y,obj_StageClear_header)
    {
    point_bonus=500;
    time_bonus=other.time_bonus;
    damage_bonus=other.damage_bonus;   
    boss_num=6;  //BOSS ID was 8
    }
}
   
   

   
   
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turns=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x-70*sign(image_xscale),y+15,obj_TrollQueen_GroundBlast);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveChoose=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_TrollQueen_view) instance_destroy();
if !instance_exists(par_HERO) {instance_destroy();}
else
{


if instance_exists(obj_camera_offset_dummy)
{
obj_camera_offset_dummy.y_offset=-100;
}

if (active==false)
{

if(getup)
{
sprite_index=global.sprite[master.TrollQueen_GetUP];
image_speed=.35;//*global.game_speed;


if(image_index&gt;=sprite_get_number(sprite_index)-1)
    {
    active=true;
    getup=false;
    image_xscale=1.3;
    image_yscale=1.3;
    
    sprite_index=spr_collide;
    damage=8*global.difficulty;
    while !place_meeting(x,y,par_wall) y+=1;
    x=x-55*.9; 
    obj_TrollQueen_view.x=x;
    obj_TrollQueen_view.y=y-obj_TrollQueen_view.y_offset*scale*.9;
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Stand]; 
    obj_TrollQueen_view.image_speed = .5*global.game_speed;
    //sprite_delete(global.sprite[master.TrollQueen_GetUP]);
    //sprite_delete(global.sprite[master.TrollQueen_Sit]);
    moveChoice=0; moveChoose=false;
    alarm[0]=80;    
    
    with instance_create(sprite_width/2, bbox_bottom+10,obj_TrollQueen_dropShadow)
    {
    depth=other.depth+1;
    }
    instance_create(0,0,obj_TrollQueen_Health);
    }
}
else
{
sprite_index=global.sprite[master.TrollQueen_Sit];
if (image_index&gt;=sprite_get_number(sprite_index)-1) image_speed=-.5;//*global.game_speed;
if (image_index&lt;=0) image_speed=.5;//*global.game_speed;
}



}


if (active)
{
sprite_index=spr_collide;
//CheckSwingRange
if(par_HERO.x &lt; x) &amp;&amp; (par_HERO.x &gt; x - 180) || (par_HERO.x &gt; x) &amp;&amp; (par_HERO.x &lt; x + 180) 
 {
 swing_range = true;
 }
 else
 {
 swing_range = false;
 }
//CheckFireRange
if(par_HERO.x &lt; x) &amp;&amp; (par_HERO.x &gt; x - 700) || (par_HERO.x &gt; x) &amp;&amp; (par_HERO.x &lt; x + 700) 
 {
 fire_range = false;
 }
 else
 {
 fire_range = true;
 }

//check direction

if (par_HERO.x &gt; x)
{
    if(moveChoice&lt;2) &amp;&amp; (moveChoice!=7) || (moveChoose)
    {
    
    if (moveChoice==0) hsp=0; //Idle
    if (moveChoice==1) hsp=4; //Walk
    
     if(west_east == 0) 
        {
         alarm[0]=2000;
         moveChoose=false;
         moveChoice=6;
         obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Turn];
         obj_TrollQueen_view.image_speed=.5*global.game_speed;
         obj_TrollQueen_view.image_index=0;
         hsp=0;
         }
         else
         {
         west_east = 1;
         image_xscale = -scale;
         }
    }   
}

if (par_HERO.x &lt; x) 
{
    if(moveChoice&lt;2) &amp;&amp; (moveChoice!=7) || (moveChoose)
    {
    
    if (moveChoice==0) hsp=0;  //Idle
    if (moveChoice==1) hsp=-4; //Walk
  
    if(west_east == 1) 
        {
         alarm[0]=2000;
         moveChoose=false;
         moveChoice=6;
         obj_TrollQueen.sprite_index = global.sprite[master.TrollQueen_Turn];
         obj_TrollQueen.image_speed=.5*global.game_speed;
         obj_TrollQueen.image_index=0;
         hsp=0;
         }
         else
         {
           west_east = 0;
           image_xscale = scale;
         }
    }   
}
  
 
if(moveChoose==true)
{
    
   n=irandom_range(1, 7);
            
     while(n==moveChoice)
        {
            n=irandom_range(1, 7);   
        }
           
        if (n==6) n=1; //MORE LIKELY TO WALK
        
        if (swing_range)  
            n=irandom_range(2, 3);   
            
        if(fire_range) &amp;&amp; (moveChoice&lt;4)
            n=irandom_range(4, 5);
            
        moveChoice=n;
    
//INITIALIZE MOVE    
    switch(moveChoice)
    {
    case 0: //STAND
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Stand]; 
    obj_TrollQueen_view.image_speed = .5*global.game_speed;
    obj_TrollQueen_view.image_index = 0;
    alarm[0]=80;
    not_grounded=0;
    collide=true;
    break;
    
    case 1: //WALK
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Walk]; 
    obj_TrollQueen_view.image_speed = 0.4*global.game_speed;
    obj_TrollQueen_view.image_index = 0;
    alarm[0]=300;
    not_grounded=0;
    damage=8*global.difficulty;
    collide=true;
    break;
    
    case 2: //JUMP
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump]; 
    obj_TrollQueen_view.image_index=0;
    obj_TrollQueen_view.image_speed = .5*global.game_speed;
    jhsp=10*-(sign(image_xscale));
    acel=1;
    land=false;
    damage=10*global.difficulty;
    collide=true;
    break;
    
    case 3: //SLASH
    swing=irandom_range(1,2);
    switch(swing)
    {
     case 1:
     obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_BackHand];
     audio_sound_pitch(snd_TrollSlash_A,global.game_speed);
     audio_play_sound(snd_TrollSlash_A, 10, false);
     break;
     
     case 2:
     obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_UpperCut];
     audio_sound_pitch(snd_TrollSlash_B,global.game_speed);
     audio_play_sound(snd_TrollSlash_B, 10, false);
     break;
    }
    
    obj_TrollQueen_view.image_speed = .4*global.game_speed; 
    obj_TrollQueen_view.image_index=0;
    audio_sound_pitch(snd_TrollSlash,global.game_speed);
    audio_play_sound(snd_TrollSlash, 10, false);
    not_grounded=0;
    collide=true;
    break;
    
    case 4: //SLAM GROUND
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_SlamGround]; 
    obj_TrollQueen_view.image_speed = .5*global.game_speed; 
    obj_TrollQueen_view.image_index=0;
    damage=10*global.difficulty;
    collide=true;
    break;
    
    case 5: //FIRE
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Fire]; 
    obj_TrollQueen_view.image_speed = .5*global.game_speed; 
    obj_TrollQueen_view.image_index=0;
    damage=10*global.difficulty;
    not_grounded=0;
    fired=false;
    collide=true;
    break;
    
    case 6: //TURN
    damage=10*global.difficulty;
    collide=true;
    break;
    
    case 7: //GORO JUMP
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump]; 
    obj_TrollQueen_view.image_index=0;
    obj_TrollQueen_view.image_speed = .5*global.game_speed;
    jhsp=10*-(sign(image_xscale));
    acel=1;
    land=false;
    damage=10*global.difficulty;
    collide=true;
    dips=0;
    audio_sound_pitch(snd_Troll_Growl,.8*global.game_speed);
    audio_play_sound(snd_Troll_Growl, 10, false);
                    
                    if !audio_is_playing(snd_BaseDrop)
                    {
                     audio_sound_pitch(snd_BaseDrop,global.game_speed); 
                     audio_play_sound(snd_BaseDrop,10,false);
                    }
                    
                    if !audio_is_playing(snd_saberwhoosh)
                                {
                                 audio_sound_pitch(snd_saberwhoosh,1.2*global.game_speed); 
                                 audio_play_sound(snd_saberwhoosh,10,false);
                                }
    break;    
    }
    moveChoose=false;
}
 

//EXECUTE MOVE    
switch(moveChoice)
{

    case 0: //STAND
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Stand]; 
    obj_TrollQueen_view.image_speed = .5*global.game_speed;
    damage=5*global.difficulty;
    hsp=0;
    vsp=0;
    if place_meeting(x,y+2,obj_trollfactory_FG)
    shadow_ON=true;
    
    if (!grounded) 
        not_grounded+=1; else not_grounded=0;
        
    if (not_grounded&gt;=3) //IF FLOATING ON AIR THEN FALL
        {
        moveChoice=2;
        obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump];
        obj_TrollQueen_view.image_index=20;
        obj_TrollQueen_view.image_speed=.5*global.game_speed;
        acel=30;
        jhsp=0;
        alarm[0]=2000;
        }
    collide=true;
    break;
    
    case 1: //WALK
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Walk]; 
    obj_TrollQueen_view.image_speed = 0.4*global.game_speed;
    vsp=0;
    damage=8*global.difficulty;
    if place_meeting(x,y+2,obj_trollfactory_FG)
    shadow_ON=true;
    if(swing_range) {moveChoose=true;}
    
    if (!grounded) 
        not_grounded+=1; else not_grounded=0;
        
    if (not_grounded&gt;=3) //IF FLOATING ON AIR THEN FALL
        {
        moveChoice=2;
        acel=1;
        obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump];
        obj_TrollQueen_view.image_index=0;
        obj_TrollQueen_view.image_speed=.5*global.game_speed;
        jhsp=10*-(sign(image_xscale));
        alarm[0]=2000;
        }
    collide=true;
    break;
    
   case 2: //JUMP
   
        obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump]; 
        
        if(obj_TrollQueen_view.image_index&lt;9) 
            {
                hsp=0;
                vsp=0;
                land=false;
                if place_meeting(x,y+2,obj_trollfactory_FG)
                shadow_ON=true;
                obj_TrollQueen_view.image_speed=.5*global.game_speed;
            }
        else
        { 
        if (obj_TrollQueen_view.image_index&lt;=30)
        {
        shadow_ON=false;   
        if (obj_TrollQueen_view.image_index&lt;20) 
            {
            vsp=-30+acel;
            if (acel&lt;75) acel+=1*global.game_speed;
            hsp=jhsp;
            }//END MOVING UP
            else
            {
            jhsp=jhsp*.9*global.game_speed;
            hsp=jhsp;
            if (acel&lt;75) acel+=2*global.game_speed;//1.5;
            
        
        if(!grounded)
            {
                vsp=-25+acel;
                
            if (obj_TrollQueen_view.image_index&gt;=29)
                    obj_TrollQueen_view.image_speed = 0;
            }   
            else //IF GROUNDED --------------------------------------------------------------------
            {
                //if (acel&gt;10)
                //{
                if place_meeting(x,y+2,obj_trollfactory_FG)
                shadow_ON=true;
                
                if (land==false)
                    {
                            if !audio_is_playing(snd_Bash)
                                {
                                 audio_sound_gain(snd_Bash,1,0); 
                                 audio_sound_pitch(snd_Bash,random_range(.7,.85)*global.game_speed); 
                                 audio_play_sound(snd_Bash,10,false);
                                }
                    repeat(2)
                    {
                        with instance_create(x+20*image_xscale+50, y+10,obj_dust_trail) //RIGHT TRAIL
                        {image_xscale=-5;image_yscale=5;image_speed=2;}
                        with instance_create(x+20*image_xscale-50, y+10,obj_dust_trail) //LEFT TRAIL
                        {image_xscale=5;image_yscale=5;image_speed=2;}
                        }
                        
                        if instance_exists(obj_Screen_Shake){with (obj_Screen_Shake){instance_destroy();}}
                        with instance_create(x,y,obj_Screen_Shake){quake=false; hold=30; wave=true; max_range=irandom_range(8,20);}
                        instance_create(x,y,obj_Aura_Ripple_stat);
                        
                        
                        
                        land=true;
                    }
                //}
                vsp=0;
                obj_TrollQueen_view.image_speed = 1*global.game_speed;
            }
            }//END IF MOVING DOWN
        }
        
    if (obj_TrollQueen_view.image_index&gt;=sprite_get_number(obj_TrollQueen_view.sprite_index)-1)
        {
        if (round(obj_TrollQueen_view.image_index)==30) 
            {
            audio_sound_pitch(snd_TrollSlash,global.game_speed);
            if !audio_is_playing(snd_TrollSlash)
            audio_play_sound(snd_TrollSlash,10,false);
            }
        hsp=0;
        vsp=0;
        if place_meeting(x,y+2,obj_trollfactory_FG)
        shadow_ON=true;
        obj_TrollQueen_view.image_speed = .5*global.game_speed;
        }
        }//END IF IMAGE INDEX IS LESS THEN 10
            
    if(obj_TrollQueen_view.image_index&gt;=sprite_get_number(global.sprite[master.TrollQueen_Jump])-1)
        moveChoose=true;    
    collide=true;
    break;
    
    
    case 3: //SLASH
    
        hsp=0;
        vsp=0;
        switch(swing)
        {
         case 1:
         obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_BackHand];
         if(obj_TrollQueen_view.image_index&gt;=sprite_get_number(global.sprite[master.TrollQueen_BackHand])-1)
             moveChoose=true;
         break;
         
         case 2:
         obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_UpperCut];
         if(obj_TrollQueen_view.image_index&gt;=sprite_get_number(global.sprite[master.TrollQueen_UpperCut])-1)
             moveChoose=true;
         collide=true;
         break;
        }
    
    obj_TrollQueen_view.image_speed = .4*global.game_speed;
    
    damage=15*global.difficulty;
    if place_meeting(x,y+2,obj_trollfactory_FG)
    shadow_ON=true;
    if(round(obj_TrollQueen_view.image_index) == 5)
        {
        audio_sound_pitch(snd_MonsterGrowl_A,global.game_speed);
        if !audio_is_playing(snd_MonsterGrowl_A)
        audio_play_sound(snd_MonsterGrowl_A, 10, false);
        }
    
    break; 
    
    case 4: //GROUND SLAM
   
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_SlamGround]; 
    obj_TrollQueen_view.image_speed = .5*global.game_speed;
    hsp=0;
    vsp=0;

    damage=15*global.difficulty;
    if place_meeting(x,y+2,obj_trollfactory_FG)
    shadow_ON=true;
    if(round(obj_TrollQueen_view.image_index) == 5)
        {
        audio_sound_pitch(snd_MonsterGrowl_A,global.game_speed);
        if !audio_is_playing(snd_MonsterGrowl_A)
        audio_play_sound(snd_MonsterGrowl_A, 10, false);
        }
    if(round(obj_TrollQueen_view.image_index) == 17) 
        {

            if !instance_exists(obj_Screen_Shake)
            {    
            instance_create(x,y,obj_ScreenFlash);
            audio_sound_pitch(snd_TrollSlash,global.game_speed); 
            audio_play_sound(snd_TrollSlash,10,false);  
            
            with instance_create(x,y,obj_Screen_Shake){quake=false; hold=50; shakerange=5;}
            }
        }
        if(obj_TrollQueen_view.image_index &gt;= 15)
        {
        if (alarm[4]==-1) alarm[4]=4; 
        }
    if(obj_TrollQueen_view.image_index&gt;=sprite_get_number(obj_TrollQueen_view.sprite_index)-1) 
        {
        moveChoose=true;
        }
        
    if (!grounded) 
        not_grounded+=1; else not_grounded=0;
        
    if (not_grounded&gt;=3) //IF FLOATING ON AIR THEN FALL
        {
        moveChoice=2;
        obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump];
        obj_TrollQueen_view.image_index=20;
        obj_TrollQueen_view.image_speed=.5*global.game_speed;
        acel=30;
        jhsp=0;
        land=false;
        alarm[0]=2000;
        }
        
    collide=true;
    break; 
    
    case 5: // FIRE
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Fire]; 
    obj_TrollQueen_view.image_speed = .5*global.game_speed;
        
        hsp=0;
        vsp=0;
    
     if(round(obj_TrollQueen_view.image_index)==10)
     { 
      if (fired==false)
      {
      repeat(3)
        {
            instance_create(x-345*sign(image_xscale),y-360,obj_TrollQueen_Fire);
        }
       audio_sound_pitch(snd_Collector_Fire,global.game_speed);
       audio_play_sound(snd_Collector_Fire, 10, false);
      fired=true;
      }
     }
    
    damage=15*global.difficulty;
    if place_meeting(x,y+2,obj_trollfactory_FG)
    shadow_ON=true;
    if(obj_TrollQueen_view.image_index&gt;=sprite_get_number(obj_TrollQueen_view.sprite_index)-1) moveChoose=true;
    if (!grounded) 
        not_grounded+=1; else not_grounded=0;
        
    if (not_grounded&gt;=3) //IF FLOATING ON AIR THEN FALL
        {
        moveChoice=2;
        obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump];
        obj_TrollQueen_view.image_index=20;
        obj_TrollQueen_view.image_speed=.5*global.game_speed;
        acel=30;
        jhsp=0;
        land=false;
        alarm[0]=2000;
        }
    collide=true;
    break; 
    
    case 6: // TURN
    
    alarm[5]=100;
    damage=5;
    not_grounded=0;
    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Turn]; 
    obj_TrollQueen_view.image_speed=.5*global.game_speed;
    swing_range=false;
    alarm[0]=2000;
    
    if (obj_TrollQueen_view.image_index&gt;=sprite_get_number(global.sprite[master.TrollQueen_Turn])-1) 
        {
        moveChoose=true;
        turns+=1;
        obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Turn];
        if (west_east==0) 
            {
            west_east = 1;
            image_xscale = -scale;
            x=x+(scale*115); //TURN OFFSET 
            obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Stand]; 
            
            }
            else
            { 
            west_east = 0;
            image_xscale = scale;
            x=x-(scale*115); //TURN OFFSET
            obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Stand]; 
            
         } 
          obj_TrollQueen_view.image_xscale=image_xscale;
          obj_TrollQueen_view.image_index=0;
          obj_TrollQueen_view.x=x;
          obj_TrollQueen_view.y=y-165*scale;
          not_grounded=0;
          moveChoice=1;
              
              if (turns&gt;=3) //IF 3 or MORE TURN GORO JUMP
              {
                    moveChoice=7;
                    moveChoose=false;
                    turns=0;
                    
                    obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump]; 
                    obj_TrollQueen_view.image_index=0;
                    obj_TrollQueen_view.image_speed = .5*global.game_speed;
                    jhsp=10*-(sign(image_xscale));
                    acel=1;
                    land=false;
                    damage=10*global.difficulty;
                    collide=true;
                    dips=0;
                    audio_sound_pitch(snd_Troll_Growl,.8*global.game_speed);
                    audio_play_sound(snd_Troll_Growl, 10, false);
                                    
                                    if !audio_is_playing(snd_BaseDrop)
                                    {
                                     audio_sound_pitch(snd_BaseDrop,global.game_speed); 
                                     audio_play_sound(snd_BaseDrop,10,false);
                                    }
                                    
                                    if !audio_is_playing(snd_saberwhoosh)
                                                {
                                                 audio_sound_pitch(snd_saberwhoosh,1.2*global.game_speed); 
                                                 audio_play_sound(snd_saberwhoosh,10,false);
                                                }
              
              }
          
        } 
    collide=true;  
    break;
    
    case 7: //GORO JUMP
   
        obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump];
        alarm[0]=1000;
        if(obj_TrollQueen_view.image_index&lt;9) //GROUNDED ANTISIPATION ------------------------------
            {
                hsp=0;
                vsp=0;
                peek=false;
                land=false;
                shadow_ON=true;
                collide=true;
                if (obj_TrollQueen_view.image_index&lt;=1) obj_TrollQueen_view.image_speed=1*global.game_speed;
                
                if (obj_TrollQueen_view.image_index&gt;=5)
                {
                    if (dips&lt;1)
                    {
   
                    audio_sound_pitch(snd_TrollSlash,1.2*global.game_speed); 
                    audio_play_sound(snd_TrollSlash,10,false);  
                    dips+=1;
                    obj_TrollQueen_view.image_speed=-1*global.game_speed; //Dip Down
                    }
                    
                    if (obj_TrollQueen_view.image_index&gt;=7) vsp=-20; //Launch UP
                    
                }
                
            } 
        else //GOING UP ---------------------------------------------------------
        { 
            if (obj_TrollQueen_view.image_index&lt;=30)
            {
            shadow_ON=false;
            
                if (peek==false) 
                {
                collide=false;   
                if (vsp&gt;-50) vsp-=4;
                hsp=0;
                if (y&lt;=view_yview-300) //-250  
                    {
                    
                    
                    peek=true;
                    vsp=20;//10;
                    y=view_yview-250;
                    x=par_HERO.x;
                    }
                } //GOING DOWN ---------------------------------------------------------
                else
                {
                hsp=0;                  
                if(!grounded)
                    {
                    vsp+=1;
                    if (obj_TrollQueen_view.image_index&gt;=29)
                            obj_TrollQueen_view.image_speed = 0;                        
                    }   
                    else //IF GROUNDED --------------------------------------------------------------------
                    {                    
                        if place_meeting(x,y+2,obj_trollfactory_FG) shadow_ON=true;
                        hsp=0;
                        vsp=0;
                        
                        if (land==false)
                            {
                             if !audio_is_playing(snd_Bash)
                                {
                                 audio_sound_gain(snd_Bash,1,0); 
                                 audio_sound_pitch(snd_Bash,.7*global.game_speed); 
                                 audio_play_sound(snd_Bash,10,false);
                                }
                            repeat(2)
                            {
                                with instance_create(x+20*image_xscale+50, y+10,obj_dust_trail) //RIGHT TRAIL
                                {image_xscale=-5;image_yscale=5;image_speed=2;}
                                with instance_create(x+20*image_xscale-50, y+10,obj_dust_trail) //LEFT TRAIL
                                {image_xscale=5;image_yscale=5;image_speed=2;}
                                }
                                
                                if instance_exists(obj_Screen_Shake){with (obj_Screen_Shake){instance_destroy();}}
                                with instance_create(x,y,obj_Screen_Shake){quake=false; hold=50; shakerange=25;}
                                instance_create(x,y,obj_Aura_Ripple_stat);
                                land=true;
                            }
                              
                        //instance_create(x,y,obj_ScreenFlash);
                        obj_TrollQueen_view.image_speed = .5*global.game_speed; //IF GROUNDED RESUME ANIMATION
                        
                    }//END IF GROUNDED
                }//END IF PEEK
            }//END FRAME LESS THAN 30
        
                //PLAY SOUND AND RESUME SHADOW IF END ------------------------------------------------------   
                if (obj_TrollQueen_view.image_index&gt;=sprite_get_number(obj_TrollQueen_view.sprite_index)-1)
                {
                if (round(obj_TrollQueen_view.image_index)==30) 
                    {
                    audio_sound_pitch(snd_TrollSlash,global.game_speed);
                    if !audio_is_playing(snd_TrollSlash)
                    audio_play_sound(snd_TrollSlash,10,false);
                    }
                hsp=0;
                vsp=0;
                if place_meeting(x,y+2,obj_trollfactory_FG)shadow_ON=true;
                obj_TrollQueen_view.image_speed = .5*global.game_speed;
                }// ----------------------------------------------------------------------------------------
        }//END IF IMAGE INDEX IS LESS THEN 10
            
    //DO ANOTHER JUMP
    if(obj_TrollQueen_view.image_index&gt;=sprite_get_number(global.sprite[master.TrollQueen_Jump])-1)
        {
        moveChoice=2;
        acel=1;
        obj_TrollQueen_view.sprite_index = global.sprite[master.TrollQueen_Jump];
        obj_TrollQueen_view.image_index=0;
        obj_TrollQueen_view.image_speed=.5*global.game_speed;
        jhsp=10*-(sign(image_xscale));
        alarm[0]=2000;
        }     
    break;
   
    
}//END MOVE SWITCH 




//Collisions ------------------------------------------------------------

vsp = vsp + grav*global.game_speed;

//Horizontal Collision ------------------------------


if place_meeting(x+hsp,y,par_wall) &amp;&amp; (collide) //and moving down
{
    
    yplus = 0;   
    while (place_meeting(x+hsp,y-yplus,par_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus+= 1;
    if place_meeting(x+hsp,y-yplus,par_wall)
    {
        while (!place_meeting(x+sign(hsp),y,par_wall)) x+=sign(hsp);
        hsp = 0;        
    }
    else
        {
        y=y-yplus;
        }
    
}

x = x + hsp*global.game_speed;

//Vertical Collision ------------------------------

if place_meeting(x,y+vsp,par_wall) 
{ 
    if place_meeting(x,y+vsp,par_flux_plat) 
    {
        grounded = 0;
    }
    else
    {
        while (!place_meeting(x,y+sign(vsp),par_wall)) y=y+sign(vsp);
         
        if (sign(vsp) == 1)
        {
            grounded = 1; //Enable First Jump        
        }
        vsp = 0;
    }

}
else
{
   grounded = 0;
}

y = y + vsp*global.game_speed;

}//END ACTIVE


if (hero_hp!=0)
{ 
if (par_HERO.hp&lt;hero_hp)
    {
        hero_damage+=(hero_hp-par_HERO.hp)
    }
hero_hp=par_HERO.hp;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index != spr_collide) 
    {
    if (sprite_index != spr_collide) 
    if sprite_exists(sprite_index) 
        {
         if (sprite_index !=  global.sprite[master.TrollQueen_Turn]) &amp;&amp; (sprite_index != global.sprite[master.spr_Rabbit_Idle]) draw_self();
        }
    }

if instance_exists(obj_debug)
{
if (obj_debug.show_collide)
{
if (grounded)
    image_blend=c_red;
    else
    image_blend=c_white;
    
if (sprite_index == spr_collide) 
draw_self();
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>175,280</point>
    <point>240,240</point>
  </PhysicsShapePoints>
</object>
