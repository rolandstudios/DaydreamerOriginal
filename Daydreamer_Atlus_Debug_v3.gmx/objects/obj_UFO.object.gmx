<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy_Body</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Load Sprites ----------------------
if(master.UFO_top==0)
{
master.num+=1;
master.UFO_top=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\ufo_top.png",20,1,1,201,86);
sprite_collision_mask(global.sprite[master.UFO_top], 0, 0, 0, 0,sprite_width, sprite_height,1,0);
}

if(master.UFO==0)
{
master.num+=1;
master.UFO=master.num;
var temp = noone;
temp = sprite_add(working_directory+"\Imports\ufo_B.png",50,0,1,201,86);
global.sprite[master.UFO] = sprite_add(working_directory+"\Imports\ufo_A.png",51,0,1,201,86);

    if (temp!=noone)
    {
        sprite_merge(global.sprite[master.UFO],temp);
        sprite_delete(temp);
    }
    
sprite_collision_mask(global.sprite[master.UFO], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

sprite_index=global.sprite[master.UFO];


hp=37;
init_hp=hp;
swing_range=false;
west_east = 0;
active=true;
scale=1;
image_xscale=1;
image_yscale=1;

setspeed = 8 + random_range(1,5);
hsp=0;
vsp=0;
type=1;
damage=5*global.difficulty;
moveChoose=true;
moveChoice=1;
rewind=false;
canSpawn=true;
spawnrate=25;
origin_y=y;
ufoStop=false;
flip=0;
fire=false;

image_xscale=scale;
image_yscale=scale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp&lt;=0) global.Points+=irandom_range(50,100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
     with instance_create(x,y+15,obj_UFO_fire)
     {
        if(other.flip==1)
        {
            direction=275;
            image_angle=276;
        }
        if(other.flip==2)
        {
            direction=264;
            image_angle=264;
        }
     }
    if audio_is_playing(snd_Quadropod_Laser)
        {
        audio_stop_sound(snd_Quadropod_Laser)
        audio_sound_pitch(snd_Quadropod_Laser,global.game_speed);
        audio_play_sound(snd_Quadropod_Laser,10,false);     
        }
        else
        {
        audio_sound_pitch(snd_Quadropod_Laser,global.game_speed);
        audio_play_sound(snd_Quadropod_Laser,10,false);
        }
        
         if (image_index&gt;=70) 
            fire=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canSpawn=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_EnemyHit_A</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(moveChoice==2)
ufoStop=true;
else
moveChoose=true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp&lt;=0)
{
        
   with instance_create(x,y,obj_Explosion_Boss)
    {
    boss_image_index=other.image_index;
    boss_sprite_index=other.sprite_index;
    boss_image_xscale=other.image_xscale;
    boss_image_yscale=other.image_yscale;
    boss_image_angle=other.image_angle;
    boss_x=other.x;
    boss_y=other.y;
    boss_image_angle=other.image_angle;
    xplode=10;
    spread=100;
    stripes=120;
    rate=4;
    bloodsplash=false;//true;
    }
    
instance_destroy();
}


if (obj_camera_offset.x-2000 &lt; bbox_right) &amp;&amp; (obj_camera_offset.x + 2000 &gt; bbox_left) 
{
active=true; 
}
else 
{
active=false;
}


if (active)
{



if(!swing_range)
{
if (par_HERO.x &gt; x)
    {    
    hsp=setspeed;      
    }
    else
    {
    hsp=-setspeed;
    }
    
}


//CheckSwingRange
if(par_HERO.x &lt; x) &amp;&amp; (par_HERO.x &gt; x - 50) || (par_HERO.x &gt; x) &amp;&amp; (par_HERO.x &lt; x + 50) 
 {
 swing_range = true;
 }
 else
 {
 swing_range = false;
 }


 
if(moveChoose==true)
    {   
      
        if (canSpawn)
        moveChoice=irandom_range(1, 4);
            else
        moveChoice=irandom_range(1, 2);
        
         if(moveChoice&gt;2)
         {
         if place_meeting(x,y,par_wall) moveChoice=2;
         }   
         
         switch(moveChoice)
         {
         case 1:
         //sprite_index = global.UFO;
         //sprite_index = spr_UFO;
         image_index=0; 
         image_speed=.5*global.game_speed;
         alarm[0]=50/global.game_speed;
         depth=-1;
         
         float=true;
         float_up= irandom_range(0,1);
         float_factor=0;
         break;
         
         case 2:
         //sprite_index = global.UFO;
         //sprite_index = spr_UFO; 
         image_index=0;
         image_speed=.5*global.game_speed;         
         alarm[0]=300/global.game_speed;
         depth=-1;
         speed_clamp=0;
         
         ufoStop=false;
         float=true;
         float_up= irandom_range(0,1);
         float_factor=0;
         audio_sound_pitch(snd_ufo,global.game_speed);
         audio_play_sound(snd_ufo,10,false);
         break;
         
         case 3:
         //sprite_index = global.UFO;
         //sprite_index = spr_UFO; 
         image_index=30;
         image_speed=1*global.game_speed;
         rewind=false;
         break;
         
         case 4:
         //sprite_index = global.UFO;
         //sprite_index = spr_UFO; 
         flip=irandom_range(1,2)
         image_index=30;
         image_speed=1*global.game_speed;
         rewind=false;
         fire=false;
         break;
               
        }
        
        moveChoose=false;
 }
    
switch(moveChoice)
{

    case 1:  //STANDING
    
   
        if (image_index &gt;= 30)
            image_index=0;
        
        
    damage=3*global.difficulty;
    
    
     if(float)
        {
        if(float_up) float_factor=float_factor+.1;
        if(!float_up) float_factor=float_factor-.1;
        
        if(float_factor==1) float_up=false;
        if(float_factor==-1) float_up=true;
        vsp = float_factor;
        } 
    
        if(y&gt;par_HERO.y-100) vsp=-2;
        if(y&lt;par_HERO.y-420) vsp=2;
    hsp=0;
    
    break;
    
    case 2: //FOLLOWING
   
     
   if (image_index &gt;= 30)
            image_index=0;
   
   if (speed_clamp&lt;1)
    {
        if(!ufoStop)
        {
        hsp=hsp*speed_clamp;
        speed_clamp=speed_clamp+.01*global.game_speed;
        }
    }
    
    if(ufoStop)
    {
    hsp=hsp*speed_clamp;
    speed_clamp=speed_clamp-.01;
    if (hsp==0) moveChoose=true;
    }
            
                      
    if(float)
        {
        if(float_up) float_factor=float_factor+.1;
        if(!float_up) float_factor=float_factor-.1;
        
        if(float_factor==2) float_up=false;
        if(float_factor==-2) float_up=true;
        vsp = float_factor;
        } 
        
        damage=5*global.difficulty;
    
   
        
        if(y&gt;par_HERO.y-100) vsp=-2;
        if(y&lt;par_HERO.y-420) vsp=2;
        
        image_angle=hsp/2;
        
        if(swing_range) 
        {
        alarm[0]=-1; 
        ufoStop=true;
        }
        
    break;
    
    
    case 3:  //SPAWNING
    
    depth=-2;
    hsp=0;
    vsp=0;
    
    if(image_index==60) &amp;&amp; (instance_number(obj_Lurker)&lt;50)
     {
     image_speed=.5*global.game_speed;
     with instance_create(x,y,obj_Lurker)
     {
     image_xscale=.5;
     grav=16;
     }
     with instance_create(x,y,obj_UFO_top)
     {
     image_xscale=other.image_xscale;
     image_yscale=other.image_yscale;
     image_speed=other.image_speed;
     image_index=0;
     }
     audio_sound_pitch(snd_Airlock_Open,global.game_speed);
     audio_play_sound(snd_Airlock_Open,10,false);
     }
    
    if (image_index &gt;= 99)
            {
            moveChoose=true;
            canSpawn=false;
            alarm[3]=spawnrate/global.game_speed; 
            if (spawnrate&lt;1000) spawnrate=spawnrate+25;      
            }
    
    
    break;
    
    
    case 4:  //FIRE
    
    depth=-2;
    hsp=0;
    vsp=0;
    
    switch(flip)
        {
        case 1:
        image_xscale=scale;
        break;
        
        case 2:
        image_xscale=-scale;
        break;
        }
    
    if(image_index==60)
     {
     
     image_speed=.5*global.game_speed;
     fire=true;
     
     
     with instance_create(x,y,obj_UFO_top)
        {
        image_xscale=other.image_xscale;
        image_yscale=other.image_yscale;
        image_speed=other.image_speed;
        image_index=0;
        }
     
     audio_sound_pitch(snd_Airlock_Open,global.game_speed);
     audio_play_sound(snd_Airlock_Open,10,false);
     
     
     }
    
     if(fire)
     {
        if (alarm[4]=-1) alarm[4]=4/global.game_speed;
     
     }
     
     
    if (image_index &gt;= 99)
            {
            moveChoose=true;  
            image_xscale=scale;
            flip=0;   
            }
    
    
    break;
    
}  

//Confirm Move ------------------------------------------------------------

if (place_meeting(x,y+64,par_wall)) 
    {
    if (!place_meeting(x,y,par_wall)) 
    {
    if(moveChoice==3)
        if(image_index&lt;60) &amp;&amp; (y&gt;200) //edit
            {
            if (!place_meeting(x,y-2,par_wall)) vsp=vsp-2;
            }
    }
    }

x=x+hsp*global.game_speed;

y=y+vsp*global.game_speed;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> var shoot
    shoot=instance_place(x,y,par_Shoot)
    if (shoot==noone)
    shoot=instance_nearest(x,y,par_Shoot)
    
        if (shoot!=noone)
        {    
            //hp=hp-par_Shoot.damage;
            hp=hp-shoot.damage;
            
            
            if (alarm[1] ==-1) 
            {  
            image_blend = c_red;          
            alarm[1]=4; 
            }
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
draw_self();

if (global.enemy_hp)
    {
    draw_rectangle_color(x,bbox_top-25,x+(init_hp),bbox_top-22,c_red,c_red,c_red,c_red,false);
    draw_rectangle_color(x,bbox_top-25,x+(hp),bbox_top-22,c_green,c_green,c_green,c_green,false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>60,121</point>
    <point>121,121</point>
  </PhysicsShapePoints>
</object>
