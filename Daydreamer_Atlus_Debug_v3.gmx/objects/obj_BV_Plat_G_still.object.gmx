<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_V_moving_platform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_BV_Plat_G==0)
{
master.num+=1;
master.SWAP_spr_BV_Plat_G=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_BV_Plat_G.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.SWAP_spr_BV_Plat_G],  0, 2, 2, 24, 251, 172,1,225);
}
sprite_index=global.sprite[master.SWAP_spr_BV_Plat_G];


vsp=1;
setspeed=vsp;
range=20;
floatFactor=irandom_range(1,range);
jump_through=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(jump_through)
{
if (par_HERO.bbox_bottom-4 &gt; bbox_top)&amp;&amp; (par_HERO.bbox_left &lt; bbox_right+32) &amp;&amp; (par_HERO.bbox_right &gt; bbox_left-32) //&amp;&amp; (!par_HERO.grounded)
{
solid=0;
}
else
{
solid=1;
}
}

floatFactor=floatFactor+1*global.game_speed;
if (floatFactor&gt;=50)
{
floatFactor=0;
vsp= -(vsp);
}



if instance_exists(par_HERO)
{
       
       
       
            
if(!jump_through)
{ 
if (par_HERO.sprite_index!=spr_Old_Olivia_Climb) &amp;&amp; (par_HERO.sprite_index!=spr_Young_Olivia_Climb)
{
 if (vsp&gt;=0)
       {     
           
        if (par_HERO.vsp!=0)    
        {
            if place_meeting(x,bbox_bottom+vsp,par_HERO)
            {
                if (vsp!=0) setspeed=vsp;
                vsp=0;
                floatFactor=floatFactor-1*global.game_speed;
                
            }
           else
           {
                vsp=setspeed;
           }
        }
        else
        {
        if place_meeting(x,bbox_bottom+vsp,par_HERO)
            { 
                vsp=-vsp;
                floatFactor=range-floatFactor;   
            }
        }
       }
}
}

 //if place_meeting(x,y-abs(vsp),par_HERO) 
 
        if place_meeting(x,y-abs(vsp)*global.game_speed,par_HERO) 
            {
                par_HERO.y=par_HERO.y+round(vsp*global.game_speed);     
            }
 
}   

y=y+round(vsp*global.game_speed);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>480,290</point>
    <point>480,480</point>
  </PhysicsShapePoints>
</object>
