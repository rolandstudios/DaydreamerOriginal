<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_Tunnel_Cliff_E_LED==0)
{
master.num+=1;
master.SWAP_spr_Tunnel_Cliff_E_LED=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Tunnel_Cliff_E_LED.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.SWAP_spr_Tunnel_Cliff_E==0)
{
master.num+=1;
master.SWAP_spr_Tunnel_Cliff_E=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Tunnel_Cliff_E.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num],  1, 0, 0, 0, sprite_width, sprite_height,0,225);
}
sprite_index=global.sprite[master.SWAP_spr_Tunnel_Cliff_E];

if(master.SWAP_spr_Tunnel_Cliff_E_collide==0)
{
master.num+=1;
master.SWAP_spr_Tunnel_Cliff_E_collide=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Tunnel_Cliff_E_collide.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num],  1, 0, 0, 0, sprite_width, sprite_height,0,225);
}



    with (instance_create(x,y,obj_Tunnel_Cliff_E_Elevator_collide))
    {
    sprite_index = global.sprite[master.SWAP_spr_Tunnel_Cliff_E_collide];
    image_xscale = other.image_xscale*2;
    image_yscale = other.image_yscale*2;
    image_angle = other.image_angle;
    }
    
vsp=0;
active=false;    

    flash_alpha=0;
    flash_speed=.1;  
    flash=true;
    flash_sect=1;
    flash_type=2;
    flashes=0;
    
    set_x=0;
    set_y=0;
    
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (y&lt;=700) //was 1200
{
if (active) 
{
    audio_play_sound(snd_Elevator_Stop,10,false);
    with instance_create(x,y,obj_Screen_Shake_Locked)
    {
    hold=50;
    shakerange=5;
    }

}
active=false;
}

if (active)
{
flash_type=3;
obj_platform_128x4.y+=round(vsp*global.game_speed);
obj_Tunnel_Cliff_E_Elevator_collide.y+=round(vsp*global.game_speed);

y+=round(vsp*global.game_speed);

if instance_exists(par_HERO)
{
//if place_meeting(x,y-abs(vsp)-1,par_HERO) 
if place_meeting(x,y,par_HERO) 
    {
        par_HERO.y+=round(vsp*global.game_speed);
    }
}

if !audio_is_playing(snd_Elevator_Start)   
{
if !audio_is_playing(snd_Elevator_Motion) 
    audio_play_sound(snd_Elevator_Motion,10,false); 
}


obj_camera_offset.elevator=true;

if place_meeting(x,y,obj_Little_Consumer)
{
    
    var inst;
    var i;
    
    for (i = 0; i &lt; instance_number(obj_Little_Consumer); i += 1)
    {
    inst[i] = instance_find(obj_Little_Consumer,i);
    if place_meeting(x,y,inst[i])
        {       
            with (inst[i]) y+=round(other.vsp*global.game_speed);
        }
    }    
}

if place_meeting(x,y,obj_TurrentPOD)
{
    
    
    for (i = 0; i &lt; instance_number(obj_TurrentPOD); i += 1)
    {
    inst[i] = instance_find(obj_TurrentPOD,i);
    if place_meeting(x,y,inst[i])
        {
        if (inst[i].image_angle==270)
            {       
            with (inst[i]) y+=round(other.vsp*global.game_speed);
            }
        }
    }    
}

if place_meeting(x,y,obj_moving_platform_H_direction) 
    {
       obj_moving_platform_H_direction.y+=round(vsp*global.game_speed);
    }

}//END ACTIVE
else
{
flash_type=2;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_HERO">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (!active)
{
    if (y&gt;1600)
    {
    active=true;
    vsp=-2;
    with instance_create(x,y,obj_Screen_Shake_Locked) 
    {
    hold=150;
    quake=false;
    shakerange=5;
    }
    audio_play_sound(snd_Elevator_Start,10,false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index) draw_self();

if (flash)
{
    draw_sprite_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,set_x,set_y,image_xscale,image_yscale,image_angle,c_black,.1);
    
    flash_alpha+=flash_speed*global.game_speed;
    
    if (flash_alpha&gt;=1) {flash_speed=-.1;}
    if (flash_alpha&lt;=0) {flash_speed=.1; flash_sect+=1; flashes+=1;}   
    if (flash_sect&gt;9) flash_sect=1;
        
    x_offset=sprite_get_xoffset(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED]);
    y_offset=sprite_get_yoffset(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED]);


if (flashes&gt;50)  
    {
    flash_type+=1;
    if(flash_type&gt;3)flash_type=1
    flashes=0;
    }
    
if (flash_type==3)  //RADIAL
{

switch(flash_sect)
    {
    
    case 1:  //BOTTOM ROW
    shift=164;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(61-x_offset+shift+12)*image_xscale,
    y+(59-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=190;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(108-x_offset+shift+12)*image_xscale,
    y+(60-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 2:  //BOTTOM ROW
    shift=137;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-3-x_offset+shift+12)*image_xscale,
    y+(57-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=217;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(174-x_offset+shift+12)*image_xscale,
    y+(62-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 3:  //BOTTOM ROW
    shift=110;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-50-x_offset+shift+12)*image_xscale,
    y+(56-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=238;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(230-x_offset+shift+12)*image_xscale,
    y+(61-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 4:  //BOTTOM ROW
    shift=82;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-114-x_offset+shift+12)*image_xscale,
    y+(55-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=266;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(294-x_offset+shift+12)*image_xscale,
    y+(62-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 5:  //BOTTOM ROW
    shift=53;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-157-x_offset+shift+12)*image_xscale,
    y+(53-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=295;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(337-x_offset+shift+12)*image_xscale,
    y+(65-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 6:  //BOTTOM ROW
    shift=23;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-220-x_offset+shift+12)*image_xscale,
    y+(52-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=323;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(401-x_offset+shift+12)*image_xscale,
    y+(64-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    
    case 7:  //BOTTOM ROW
    shift=0;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-272-x_offset+shift+12)*image_xscale,
    y+(52-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=346;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(448-x_offset+shift+12)*image_xscale,
    y+(67-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;

    
    

    
    case 8:  //TOP ROW
    shift=86;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(117-x_offset+shift)*image_xscale,
    y+(-151-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=123;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(85-x_offset+shift)*image_xscale,
    y+(-111-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=163;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(106-x_offset+shift)*image_xscale,
    y+(-152-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
 
    shift=198;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(86-x_offset+shift)*image_xscale,
    y+(-116-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        
    
           
    case 9:  //TOP ROW
    shift=0;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(-170-x_offset+shift)*image_xscale,
    y+(-123-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=40;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(-165-x_offset+shift)*image_xscale,
    y+(-153-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=238;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(373-x_offset+shift)*image_xscale,
    y+(-134-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=276;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(407-x_offset+shift)*image_xscale,
    y+(-110-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
       

    }
}    
    
if (flash_type==1)  //FLOW
{

switch(flash_sect)
    {
        case 1:  //BOTTOM ROW
    shift=0;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-272-x_offset+shift+12)*image_xscale,
    y+(52-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 2:  //BOTTOM ROW
    shift=23;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-220-x_offset+shift+12)*image_xscale,
    y+(52-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 3:  //BOTTOM ROW
    shift=53;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-157-x_offset+shift+12)*image_xscale,
    y+(53-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 4:  //BOTTOM ROW
    shift=82;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-114-x_offset+shift+12)*image_xscale,
    y+(55-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 5:  //BOTTOM ROW
    shift=110;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-50-x_offset+shift+12)*image_xscale,
    y+(56-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 6:  //BOTTOM ROW
    shift=137;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-3-x_offset+shift+12)*image_xscale,
    y+(57-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 7:  //BOTTOM ROW
    shift=164;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(61-x_offset+shift+12)*image_xscale,
    y+(59-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 8:  //BOTTOM ROW
    shift=190;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(108-x_offset+shift+12)*image_xscale,
    y+(60-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 9:  //BOTTOM ROW
    shift=217;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(174-x_offset+shift+12)*image_xscale,
    y+(62-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 10:  //BOTTOM ROW
    shift=238;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(230-x_offset+shift+12)*image_xscale,
    y+(61-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 11:  //BOTTOM ROW
    shift=266;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(294-x_offset+shift+12)*image_xscale,
    y+(62-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 12:  //BOTTOM ROW
    shift=295;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(337-x_offset+shift+12)*image_xscale,
    y+(65-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 13:  //BOTTOM ROW
    shift=323;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(401-x_offset+shift+12)*image_xscale,
    y+(64-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
        case 14:  //BOTTOM ROW
    shift=346;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(448-x_offset+shift+12)*image_xscale,
    y+(67-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;

    
    
        case 15:  //TOP ROW
    shift=0;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(-170-x_offset+shift)*image_xscale,
    y+(-123-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
          case 16:  //TOP ROW
    shift=40;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(-165-x_offset+shift)*image_xscale,
    y+(-153-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
          case 17:  //TOP ROW
    shift=86;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(117-x_offset+shift)*image_xscale,
    y+(-151-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
          case 18:  //TOP ROW
    shift=123;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(85-x_offset+shift)*image_xscale,
    y+(-111-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
          case 19:  //TOP ROW
    shift=163;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(106-x_offset+shift)*image_xscale,
    y+(-152-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
          case 20:  //TOP ROW
    shift=198;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(86-x_offset+shift)*image_xscale,
    y+(-116-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
          case 21:  //TOP ROW
    shift=238;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(373-x_offset+shift)*image_xscale,
    y+(-134-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
          case 22:  //TOP ROW
    shift=276;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(407-x_offset+shift)*image_xscale,
    y+(-110-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    

    

    }
}

//FLASH ALL NO SWITCH

if (flash_type==2)  //ALL ON
{
    shift=0;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-272-x_offset+shift+12)*image_xscale,
    y+(52-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);


    shift=23;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-220-x_offset+shift+12)*image_xscale,
    y+(52-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);


    shift=53;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-157-x_offset+shift+12)*image_xscale,
    y+(53-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);


    shift=82;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-114-x_offset+shift+12)*image_xscale,
    y+(55-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=110;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-50-x_offset+shift+12)*image_xscale,
    y+(56-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=137;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(-3-x_offset+shift+12)*image_xscale,
    y+(57-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=164;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(61-x_offset+shift+12)*image_xscale,
    y+(59-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=190;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(108-x_offset+shift+12)*image_xscale,
    y+(60-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=217;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(174-x_offset+shift+12)*image_xscale,
    y+(62-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
  
    shift=238;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(230-x_offset+shift+12)*image_xscale,
    y+(61-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=266;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(294-x_offset+shift+12)*image_xscale,
    y+(62-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
 
    shift=295;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(337-x_offset+shift+12)*image_xscale,
    y+(65-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
   
    shift=323;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(401-x_offset+shift+12)*image_xscale,
    y+(64-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=346;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,25,25,26,
    x+(448-x_offset+shift+12)*image_xscale,
    y+(67-y_offset+25)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=0;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(-170-x_offset+shift)*image_xscale,
    y+(-123-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=40;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(-165-x_offset+shift)*image_xscale,
    y+(-153-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=86;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(117-x_offset+shift)*image_xscale,
    y+(-151-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=123;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(85-x_offset+shift)*image_xscale,
    y+(-111-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=163;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(106-x_offset+shift)*image_xscale,
    y+(-152-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
  
    shift=198;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(86-x_offset+shift)*image_xscale,
    y+(-116-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=238;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(373-x_offset+shift)*image_xscale,
    y+(-134-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);

    shift=276;
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,shift,0,25,26,
    x+(407-x_offset+shift)*image_xscale,
    y+(-110-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);    
    

    }
    
}//END FLASH

    





/*
draw_sprite_part_ext(global.sprite[master.SWAP_spr_Tunnel_Cliff_E_LED],0,0,0,sprite_width,sprite_height,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset)*image_yscale,
    image_xscale,image_yscale,c_red,.4);

    draw_set_alpha(1);
    draw_set_color(c_white);
    draw_set_font(fnt_Orbitron);

    if keyboard_check(vk_up) set_y-=1;
    if keyboard_check(vk_down) set_y+=1;
    draw_text (x+200,y+25,"movelist_y: "+string(set_y));
    
    if keyboard_check(vk_left)  set_x-=1;
    if keyboard_check(vk_right) set_x+=1;
    draw_text (x+200,y,"movelist_x: "+string(set_x));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>764,292</point>
    <point>764,764</point>
  </PhysicsShapePoints>
</object>
