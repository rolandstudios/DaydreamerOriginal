<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_OrangeFireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create Target
damage=5;
type=2;
can_hold=false;
alarm[1]=irandom_range(50,100);
image_xscale=.7;
image_yscale=.7;

audio_sound_pitch(snd_lockON,global.game_speed);
audio_play_sound(snd_lockON,10,false);

target_x=par_HERO.x+irandom_range(-100,100);
target_y=par_HERO.y+irandom_range(-100,100);


switch(obj_MegaBot.image_xscale)
{
    case 1:
    y=obj_MegaBot_view.y+90;
    x=obj_MegaBot_view.x-165;
    direction = 90;
    image_angle =90;
    break;
    
    case -1:
    y=obj_MegaBot_view.y+90
    x=obj_MegaBot_view.x+165;
    x=x+40;
    direction = 0;
    image_angle =0;
    break;

}


with (instance_create(x,y,obj_FireFlare))
    {
    image_xscale = 3*obj_MegaBot_view.image_xscale;
    image_yscale = 3;
    image_angle = 0;
    }
    
if !instance_exists(obj_Aura_Ripple_stat)
    {
    instance_create(x,y,obj_ScreenFlash);
    instance_create(x,y,obj_Aura_Ripple_stat);    
    }
    
target_direction = point_direction(x, y, target_x, target_y);  
if (target_direction&lt;180) target_direction+=360; 
direction = target_direction; 
image_angle = direction;
seek=true;
hold=false;

s_speed=random_range(3,15);
speed=s_speed*global.game_speed;

image_speed=.5*global.game_speed;

//TRAIL -------------------------

trail_length=15;

for (a=0;a&lt;=trail_length;a+=1)
{
trail_x[a]=x;
trail_y[a]=y;
trail_angle[a]=image_angle;
}



























</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_hold=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_HERO)
{
instance_destroy();
}
else
{ 

last_target_direction_A=target_direction;

//SIZE CHANGE -------------------------------

if(image_xscale&lt;1.7)
    {
    image_xscale=image_xscale+.02;
    image_yscale=image_yscale+.02;
    }

   
//ADD SPEED AND INDEX -----------------------    

if (seek==true)
{
target_direction = point_direction(x, y, target_x, target_y);
diff = angle_difference(target_direction,last_target_direction_A)
target_direction = last_target_direction_A+diff*.35;

    direction = target_direction;
    image_angle=direction;

     s_speed*=.95;
     
     if (s_speed&lt;=3) 
        {
        seek=false;
        }
}


if (seek==false)
{
 s_speed*=1.05;
 
 if (s_speed&gt;=15) &amp;&amp; (hold==false)
    {
    audio_sound_pitch(snd_confirm_tab_B,1.1*global.game_speed);
    audio_play_sound(snd_confirm_tab_B,12,false);
    target_x=par_HERO.x+irandom_range(-100,100);
    target_y=par_HERO.y+irandom_range(-100,100);
    seek=true;
    }
}

    if (can_hold==true)
    thresh=50;
    else
    thresh=speed;

if point_distance(x,y,target_x,target_y)&lt;thresh //was 150
    {
        if (hold==false) audio_play_sound(snd_Game_Whoosh,14,false);
        hold=true;
        seek=false;
        
    } 

       
if(image_index&gt;=24) image_speed=0;
speed=s_speed*global.game_speed;
image_speed=.5*global.game_speed;

}

//TRAIL ------------------------------------------------
    
for (a=trail_length;a&gt;0;a-=1)
    {
    trail_x[a]=trail_x[a-1];
    trail_y[a]=trail_y[a-1];
    trail_angle[a]=trail_angle[a-1];
    }
    
    trail_x[0]=x;
    trail_y[0]=y;
    trail_angle[0]=image_angle;
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_HERO">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x,y,obj_FireFlare)
    {
    image_xscale=2*other.image_xscale;
    image_yscale=2*other.image_yscale;
    image_angle = other.image_angle;
    }
    
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alarm[0]==-1) alarm[0]=25;
   
   if (hold==false) audio_play_sound(snd_Game_Whoosh,14,false);
   hold=true;
   seek=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = make_color_hsv(0,50,255);//c_white;
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale*1.4,image_yscale,image_angle,image_blend,1);
image_blend = c_red;

for (a=trail_length;a&gt;0;a-=1)
    {   
        if (a&lt;trail_length) //DRAW INBETWEEN 
        {
        var blend_x = (trail_x[a] + trail_x[a+1])*.5;
        var blend_y = (trail_y[a] + trail_y[a+1])*.5;    
        var blend_x_scale = (image_xscale*(1-0.05*a) + image_xscale*(1-0.05*(a+1)))*.5;
        var blend_y_scale = (image_yscale*(1-0.05*a) + image_yscale*(1-0.05*(a+1)))*.5;    
        var blend_angle = (trail_angle[a] + trail_angle[a+1])*.5;    
        var blend_alpha = (.75-(.025*a) + .75-(.025*a+1))*.5;   
         
        draw_set_blend_mode(bm_normal);
        draw_sprite_ext(sprite_index, image_index-a, blend_x, blend_y, blend_x_scale, blend_y_scale, blend_angle, image_blend, blend_alpha);
        draw_set_blend_mode(bm_add);
        draw_sprite_ext(sprite_index, image_index-a, blend_x, blend_y, blend_x_scale, blend_y_scale, blend_angle, image_blend, blend_alpha);
        }

   draw_sprite_ext(sprite_index, image_index-a, trail_x[a], trail_y[a], image_xscale*(1-0.05*a), image_yscale*(1-0.05*a), trail_angle[a], image_blend, .75-(.025*a));
   }
    
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
