<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_OrangeFireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>par_Shoot</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create Target
image_speed=.5;
seek=true;
damage=7;//par_HERO.damage;
org_damage=7;//par_HERO.damage;
color_gain=0;
trail_length=15;

targ_scale=irandom_range(1,360);
targ_angle=irandom_range(1,360);
targ_alpha=irandom_range(1,360);

image_xscale=.35;
image_yscale=.35;


if instance_exists(par_Enemy_Body)
{
enmey=instance_nearest(x, y, par_Enemy_Body);
inst=instance_nearest(x, y, par_Enemy_Body);

enemy_offset_x=irandom_range(-32,32);
enemy_offset_y=irandom_range(-32,32);

target_x=(x+inst.x)/2+irandom_range(-64,64);
target_y=(y+inst.y)/2+irandom_range(-64,64);

}
else
{
target_x=par_HERO.x+(par_HERO.image_xscale*512);
target_y=par_HERO.y+random_range(-100,100);
}

s_speed = 8;
speed=s_speed;

switch(par_HERO.look)
{
    case 12:
    y=y-40;
    target_direction = 90;
    image_angle =90;
    
    break;
    
    case 3:
    y=y-4;
    x=x+40;
    target_direction = 0;
    image_angle =0;
    
    break;
    
    case 9:
    y=y-4;
    x=x-30;
    target_direction = 180;
    image_angle =180;
    
    break;
    
    case 2:
    y=y-20;
    x=x+22;
    target_direction = 45;
    image_angle =45;
    
    break;
    
    case 10:
    y=y-20;
    x=x-22;
    target_direction = 135;
    image_angle =135;
    
    break;
    
    case 6:
    y=y+25;
    target_direction = 270;
    image_angle =270;
    
    break;
    
    case 5:
    y=y+22;
    x=x+18;
    target_direction = 315;
    image_angle =315;
    
    break;
    
    case 7:
    y=y+22;
    x=x-18;
    target_direction = 225;
    image_angle =225;
    
    break;
}
shift=sign(par_HERO.image_xscale);
alarm[1]=85/global.game_speed;//destroy //was 100


with (instance_create(x,y,obj_FireFlare_HERO))
        {
        damage=1;
        image_xscale = 2;
        image_yscale = 2;
        image_angle = other.image_angle;
        }
    

if (shift==1)
    {
    if (target_direction&lt;180) target_direction+=360;
    }

direction=target_direction;
last_target_direction_A=target_direction;
image_angle = direction;

hold_on=false; 

for (a=0;a&lt;=trail_length;a+=1)
{
trail_x[a]=x;
trail_y[a]=y;
trail_angle[a]=image_angle;
}



























</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x,y,obj_Spark_B)
        {
        image_xscale=2;
        image_yscale=2;
        image_angle=other.image_angle;
        color=c_red;
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>seek=false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//SEEK TARGET ----------------------------------------------------
if (image_index&gt;8)
{
    last_target_direction_A=target_direction; 
    diff=(last_target_direction_A-target_direction); 
    
    if instance_exists(enemy)
    target_direction = point_direction(x, y, enemy.x-enemy_offset_x, enemy.y-enemy_offset_y);
    else
    target_direction = point_direction(x, y, target_x, target_y);
    
    if (shift==1)
    {
    if (target_direction&lt;180) target_direction+=360;
    }
    

if !instance_exists(enemy) target_direction=(target_direction+last_target_direction_A)/2;
if !instance_exists(enemy) target_direction=(target_direction+last_target_direction_A)/2;
if !instance_exists(enemy) target_direction=(target_direction+last_target_direction_A)/2; //edit
target_direction=(target_direction+last_target_direction_A)/2;
target_direction=(target_direction+last_target_direction_A)/2;

direction=target_direction;
image_angle=direction;
}

//LOOK DEVELOPMENT -----------------------------------------------
s_speed=s_speed*1.05;
if (color_gain&lt;255)
{
if (color_gain&lt;10)
color_gain=color_gain+1;
else
color_gain=color_gain+8;
}
if (color_gain&gt;255)
        color_gain=255;

if(image_xscale&lt;1.5)
    {
    image_xscale=image_xscale+0.1*global.game_speed; //was .5
    image_yscale=image_yscale+0.05*global.game_speed; //was .25
    }

damage=org_damage*image_xscale;
if (damage&lt;4) damage=4;

image_speed=.5*global.game_speed;
if(image_index&gt;=24) image_speed=0;



//BLAST PARTICLES------------------------------------
if place_meeting(x,y,par_Enemy_Body)
{
var temp
temp = instance_place(x, y, par_Enemy_Body);
if (temp.type==1)
{
with instance_create(x,y,obj_FireFlare)
    {
    image_xscale=2*other.image_xscale;
    image_yscale=2*other.image_yscale;
    image_angle = other.image_angle;
    }  
    instance_destroy();  
}
}
//--------------------------------------------------
//LOOK AND SPEED --
image_blend = make_color_rgb(255,color_gain,color_gain);
speed=s_speed*global.game_speed;
//--------------------------------------------------
if place_meeting(x,y,par_Top)
depth=-4;
else
depth=-30;


//TRAIL ------------------------------------------------
    
for (a=trail_length;a&gt;0;a-=1)
    {
    trail_x[a]=trail_x[a-1];
    trail_y[a]=trail_y[a-1];
    trail_angle[a]=trail_angle[a-1];
    }
    
    trail_x[0]=x;
    trail_y[0]=y;
    trail_angle[0]=image_angle;
    
/*
//CHECK and HOLD DIRECTION

if (abs(last_target_direction-target_direction)&gt;25) 
    {
    if (alarm[1]/global.game_speed&lt;80) 
      {
        hold_on=true;
     }   
    }
/*    
if(hold_on)
    {
        direction=last_target_direction;
        image_angle=last_target_direction;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//DRAW TRAIL
draw_set_blend_mode(bm_normal);
for (a=trail_length;a&gt;0;a-=1)
    {
    
        if (a&lt;trail_length) //DRAW INBETWEEN 
        {
        var blend_x = (trail_x[a] + trail_x[a+1])*.5;
        var blend_y = (trail_y[a] + trail_y[a+1])*.5;    
        var blend_x_scale = (image_xscale*(1-0.05*a) + image_xscale*(1-0.05*(a+1)))*.5;
        var blend_y_scale = (image_yscale*(1-0.05*a) + image_yscale*(1-0.05*(a+1)))*.5;    
        var blend_angle = (trail_angle[a] + trail_angle[a+1])*.5;    
        var blend_alpha = (.75-(.025*a) + .75-(.025*a+1))*.5;   
         
        draw_sprite_ext(sprite_index, image_index-a, blend_x, blend_y, blend_x_scale, blend_y_scale, blend_angle, image_blend, blend_alpha);
        }
    
    draw_sprite_ext(sprite_index, image_index-a, trail_x[a], trail_y[a], image_xscale*(1-0.05*a), image_yscale*(1-0.05*a), trail_angle[a], image_blend, .75-(.025*a));
    }
    
    
draw_set_blend_mode(bm_add);
draw_self();
draw_set_blend_mode(bm_normal);

targ_scale+=1;
targ_angle+=2;
targ_alpha+=5;

if instance_exists(enemy)
draw_sprite_ext(spr_Crosshair,0,enemy.x-enemy_offset_x,enemy.y-enemy_offset_y,.4+sin(targ_scale)*.25,.4+sin(targ_scale)*.25,0,c_red,1);

//draw_rectangle_color(enemy.x-enemy_offset_x-4,enemy.y-enemy_offset_y-4,enemy.x-enemy_offset_x+4,enemy.y-enemy_offset_y+4,c_red,c_red,c_red,c_red,true);
/*
draw_text(x,y+25,string(abs(last_target_direction-target_direction)));
draw_text(x,y+40,string(alarm[1]/global.game_speed));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
