<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_Stack_LED==0)
{
master.num+=1;
master.SWAP_spr_Stack_LED=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Stack_LED.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.SWAP_spr_Stack_A==0)
{
master.num+=1;
master.SWAP_spr_Stack_A=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Stack_A.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}
sprite_index=global.sprite[master.SWAP_spr_Stack_A];

    flash_alpha=0;
    flash_speed=.1;  
    if (image_angle==0) flash=true; else flash=false;
    flash_sect=1;
    color=c_white;
    //set_x=-49;
    //set_y=-314;
    
    set_x=0;
    set_y=0;
    active=true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bbox_right&gt;view_xview-400) &amp;&amp; (bbox_left&lt;view_xview+1680) 
{
    if (bbox_bottom&gt;view_yview-400) &amp;&amp; (bbox_top&lt;view_yview+1120)
    {
    active=true;
    }
    else
    {
    active=false;
    }
}
else
{
active=false;
}

if (!active)
{
instance_deactivate_object(self);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index) 
    {
    if (color!=c_white) image_blend=color;
    draw_self();
    }

if (image_angle==0) flash=true; else flash=false;
    
if (flash)
{
    //draw_sprite_ext(global.sprite[master.SWAP_spr_Stack_LED],0,set_x,set_y,image_xscale,image_yscale,image_angle,c_black,.1);
    
    flash_alpha+=flash_speed*global.game_speed;
    
    if (flash_alpha&gt;=1) {flash_speed=-.1;}
    if (flash_alpha&lt;=0) {flash_speed=.1; flash_sect+=1;}   
    if (flash_sect&gt;16) flash_sect=1;
        
    x_offset=sprite_get_xoffset(global.sprite[master.SWAP_spr_Stack_LED]);
    y_offset=sprite_get_yoffset(global.sprite[master.SWAP_spr_Stack_LED]);
    

switch(flash_sect)
    {
    case 1:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,0,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+0)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 2:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,60,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+60)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 3:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,110,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+110)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 4:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,170,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+170)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 5:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,230,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+230)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 6:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,290,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+290)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 7:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,350,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+350)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 8:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,410,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+410)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 9:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,480,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+480)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 10:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,540,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+540)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 11:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,600,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+600)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 12:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,655,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+655)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 13:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,715,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+715)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 14:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,775,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+775)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 15:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,835,171,40,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+835)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    case 16:
    draw_sprite_part_ext(global.sprite[master.SWAP_spr_Stack_LED],0,0,895,171,15,
    x+(set_x-x_offset)*image_xscale,
    y+(set_y-y_offset+895)*image_yscale,
    image_xscale,image_yscale,c_red,flash_alpha);
    break;
    
    }

}//END FLASH
/*
    if keyboard_check(vk_up) set_y-=1;
    if keyboard_check(vk_down) set_y+=1;
    draw_text (x,y+20,"movelist_y: "+string(set_y));
    
    if keyboard_check(vk_left)  set_x-=1;
    if keyboard_check(vk_right) set_x+=1;
    draw_text (x,y,"movelist_x: "+string(set_x));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>17,60</point>
    <point>60,60</point>
  </PhysicsShapePoints>
</object>
