<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_LockON_sm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
x_offset=0;
y_offset=0;
draw_y=50;
draw_x=120;
select_x=x+25;

start=false;
finish=false;


shift_back=0;
rest=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rest=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.CutScene=false;
if instance_exists(obj_TextPromt)
{
with (obj_TextPromt) instance_destroy();
}

     if instance_exists(obj_Mozaic_Flash)
            {
                obj_Mozaic_Flash.count_up=true;
            }
            
instance_destroy(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>finish=false;
start=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (start)
{

Key_Up = gamepad_button_check_pressed(global.playing_index, gp_padu);
Key_Down = gamepad_button_check_pressed(global.playing_index, gp_padd);
Key_Left = gamepad_button_check_pressed(global.playing_index, gp_padl);
Key_Right = gamepad_button_check_pressed(global.playing_index, gp_padr);

Key_Jump = gamepad_button_check_pressed(global.playing_index, gp_face1);
Key_Fire = gamepad_button_check_pressed(global.playing_index, gp_face2);

if keyboard_check_pressed(global.kb_Left) Key_Left = true;
if keyboard_check_pressed(global.kb_Right) Key_Right = true; 
if keyboard_check_pressed(global.kb_Up) Key_Up = true;
if keyboard_check_pressed(global.kb_Down) Key_Down = true;

if keyboard_check_pressed(global.kb_Jump) Key_Jump = true;
if keyboard_check_pressed(global.kb_Melee) Key_Melee = true;
if keyboard_check_pressed(global.kb_Fire) Key_Fire = true;
if keyboard_check_pressed(global.kb_Select) Key_Select = true;


if (rest)
{
if (gamepad_axis_value(global.playing_index, gp_axislv)&lt;-.5) {Key_Up = 1; alarm[3]=10; rest=false;} 
if (gamepad_axis_value(global.playing_index, gp_axislv)&gt;.5) {Key_Down = 1; alarm[3]=10; rest=false;}
if (gamepad_axis_value(global.playing_index, gp_axislh)&lt;-.5) {Key_Left = 1; alarm[3]=10; rest=false;}
if (gamepad_axis_value(global.playing_index, gp_axislh)&gt;.5) {Key_Right = 1; alarm[3]=10; rest=false;}
}

if (Key_Left) || (Key_Right)
{
    audio_play_sound(snd_selectA,10,false);
    if (select_x==x+25)
        select_x=x+65;
        else
        select_x=x+25;
        
        shift_back=0;
}


if (Key_Jump)
{

if (select_x==x+25) //SELECT YES
{   
    finish=true;
    start=false;
    with instance_create(x,y,obj_Screen_Darken){hold=140;max_dark=1;}
    par_HERO.sleeping=true;
    
    if instance_exists(par_HERO)
        {
        //REPLENISH_HERO        
        with instance_create(par_HERO.x,par_HERO.y,obj_YellowEnergy)
                {
                Energy=100; 
                visible=false;
                all_weapon=true;
                }
                
        with instance_create(par_HERO.x,par_HERO.y,obj_RedEnergy)
                {
                Energy=100; 
                visible=false;
                }
                
                par_HERO.warps=5;
                par_HERO.shields=5;
                par_HERO.Bullet_Time=100;
        }
        
    if (global.HERO_type==0)
    par_HERO.sprite_index=spr_Young_Olivia_Die;
    else
    par_HERO.sprite_index=spr_Old_Olivia_Die;
    
    par_HERO.image_speed=.5*global.game_speed;
    par_HERO.image_index=0;
 
       
    if !instance_exists(obj_Mozaic_Flash)
            {
                with instance_create(x,y,obj_Mozaic_Flash) {bed_save=true;}
            }
    
}
else //SELECT NO
{
    audio_play_sound(snd_capped_out,10,false);
    start=false;
    finish=false;
    alarm[0]=500;
    global.CutScene=false;
}
}

}//END START LOOP


if (finish) //IF FINISH
{
if (global.HERO_type==0)
par_HERO.sprite_index=spr_Young_Olivia_Die;
else
par_HERO.sprite_index=spr_Old_Olivia_Die;

par_HERO.image_speed=.5*global.game_speed;

par_HERO.sleeping=true;
global.CutScene=true;

if (par_HERO.image_index&gt;=23)
    {
    par_HERO.image_speed=0;
    par_HERO.image_index=23;
    
         if instance_exists(obj_Mozaic_Flash)
            {
                obj_Mozaic_Flash.count_up=true;
                obj_Mozaic_Flash.curtain=true;
            }
    if (alarm[1]==-1){scr_savegame(); alarm[1]=100;}//pause 
    }
    else
    par_HERO.image_speed=.5*global.game_speed;
    
     if instance_exists(obj_Mozaic_Flash)
            {
                obj_Mozaic_Flash.count_up=false;
                obj_Mozaic_Flash.curtain=false;
            }
            
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_HERO">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!start) &amp;&amp; (!finish) &amp;&amp; (alarm[0]&lt;=0)
{
    start=true; 
    global.CutScene=true;
    x_offset=0;
    y_offset=0;
    draw_y=50;
    draw_x=120;
    select_x=x+25;
    audio_play_sound(snd_Popup_Menu,10,false);
    shift_back=0;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (start)
{
draw_set_alpha(0.1);
draw_set_color(c_black);
draw_roundrect(x,y, x+x_offset,y+y_offset,false);
draw_set_alpha(0.5);
draw_set_color(c_white);
draw_roundrect(x,y, x+x_offset,y+y_offset,true);
draw_set_alpha(0.8);

if (x_offset&lt;draw_x) x_offset+=(draw_x/5);
if (y_offset&lt;draw_y) y_offset+=(draw_y/5);
//if (y_offset&gt;=draw_y) start=false;


    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_set_font(fnt_Arial_Big);
    
      draw_set_color(c_black); draw_set_alpha(.7);
      draw_text((x+draw_x*.5)-2,y+17,"Take a nap?");
      draw_set_color(c_white); draw_set_alpha(.8);
      draw_text(x+draw_x*.5,y+15,"Take a nap?");
   
    draw_set_font(fnt_Arial);
    
    
    if (shift_back&lt;2.5) shift_back+=.25;
    
    draw_set_color(c_black);
    if (select_x==x+25) draw_text(x+draw_x*.5+shift_back-19,y+35+shift_back*.5,"Yes")
    if (select_x==x+65) draw_text(x+draw_x*.5+shift_back+20,y+35+shift_back*.5,"No");
    
    draw_set_color(c_white);
    draw_text(x+draw_x*.5-19,y+35,"Yes")
    draw_text(x+draw_x*.5+20,y+35,"No");
    
    draw_sprite_ext(spr_arrow,0,select_x,y+35,1,1,0,c_white,1);
}




if (finish)
{
draw_set_alpha(0.1);
draw_set_color(c_black);
draw_roundrect(x,y, x+x_offset,y+y_offset,false);
draw_set_alpha(0.5);
draw_set_color(c_white);
draw_roundrect(x,y, x+x_offset,y+y_offset,true);
draw_set_alpha(0.8);

if (x_offset&gt;0) x_offset-=(draw_x/5);
if (y_offset&gt;0) y_offset-=(draw_y/5);
//if (y_offset&lt;=0) instance_destroy();
}
   




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
