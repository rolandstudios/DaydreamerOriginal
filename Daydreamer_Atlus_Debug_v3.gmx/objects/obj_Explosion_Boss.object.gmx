<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_explosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_PearStore_inside) instance_destroy();

scale=1;
tempo_rate=2; //was 5
tear_rate=21;
boom_rate=50;
bomb_rate=200;


psy=false;
die_color=c_red;
hologram=true;
xplode=18;
xpos=x;
ypos=y;
loot=true;
move=0;
rate=3;
fade_speed=.02;
spread_x=1;
max_spread_x=35;
max_spread_y=2;

boss_image_index=0;
boss_sprite_index=noone;
boss_x=x;
boss_y=y;
boss_image_xscale=1;
boss_image_yscale=1;
boss_image_angle=0;
boss_image_alpha=1;
boss_image_speed=0;
boss_image_max=0;
stripes=100;
spread=155;
bloodsplash=false;
depth_xplode=depth;
flash=true;
second_flash=true;
image_speed=0;

instance_create(x,y,obj_Aura_Ripple);
with instance_create(x,y,obj_Screen_Shake) {max_range=25;}

//if !instance_exists(obj_AuraFlash)
    


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if !audio_is_playing(snd_Grenade)// &amp;&amp; (size&gt;1) 
 audio_play_sound(snd_Grenade,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(snd_Grenade) audio_play_sound(snd_Grenade,14,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(snd_Grenade_short) 
audio_sound_pitch(snd_Grenade_short,random_range(.9,1.1));
audio_play_sound(snd_Grenade_short,10,false);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TEMPO EXPLODE
switch(irandom_range(1,3))
{
case 1:
audio_sound_pitch(spr_Explode_After_Burn,random_range(.9,1.1));
audio_play_sound(spr_Explode_After_Burn,11,false);
break;

case 2:
if !audio_is_playing(spr_Explode_Tear_A)
audio_sound_pitch(spr_Explode_Tear_A,random_range(.9,1.1));
audio_play_sound(spr_Explode_Tear_A,12,false);
break;

case 3:
if (irandom_range(1,6)!=1)
audio_play_sound(spr_Explode_Tear_A,12,false);
else
audio_play_sound(spr_Explode_Tear_B,13,false);
break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TEMPO EXPLODE
if !audio_is_playing(snd_tripple_sound)
{
audio_sound_pitch(snd_tripple_sound,random_range(1.1,1.2));
audio_play_sound(snd_tripple_sound,15,false);
}

range=spread;

//TEMPO SCATTER
x=xpos+random_range(-range, range)*image_yscale;
y=ypos+random_range(-range, range)*image_yscale;

with instance_create(x,y,obj_Explosion_tempo)
    {
    scale=random_range(.8,1.4)*other.scale;
    image_xscale=scale;
    image_yscale=scale;
    depth=irandom_range(-2,-5);
    }
    
    
xplode=xplode-1;

if (psy==false)
{
    
    x=xpos+random_range(-spread, spread);
    y=ypos+random_range(-spread, spread); 
    
   
explode = instance_create(x,y,obj_Explosion_B_mute);

with (explode)
    {
    image_xscale=random_range(.5,1.5);
    image_yscale=image_xscale;
    image_angle=random_range(0,360); 
    depth=irandom_range(-3,0);  
    loot=other.loot;
    
    while !position_meeting(x,y,obj_Explosion_Boss)
        {
        x=other.xpos+random_range(-other.spread, other.spread);
        y=other.ypos+random_range(-other.spread, other.spread); 
        } 
        
    }
        
        x=xpos+random_range(-spread, spread);
        y=ypos+random_range(-spread, spread);
        
        smoke = instance_create(x,y,obj_Smoke_A);
        
        with (smoke)
        {
          while !position_meeting(x,y,obj_Explosion_Boss)
            {
            x=other.xpos+random_range(-other.spread, other.spread);
            y=other.ypos+random_range(-other.spread, other.spread); 
            } 
        }
        
            if (bloodsplash==true)
            {
            with instance_create(x,y,obj_StarBurst)
            {
            image_xscale=1;
            image_yscale=1;
            image_angle=irandom_range(1,360);
            image_blend=c_red;
            depth=other.depth_xplode; 
            }
            
    with instance_create(x,y,obj_BloodSplash)
    {
    image_xscale=1;
    image_yscale=1;
    depth=other.depth_xplode;
    }
    bloodsplash=false;
    }
}
else
{
    x=xpos+random_range(-spread, spread);
    y=ypos+random_range(-spread, spread);

  exp_psy=instance_create(x,y,obj_Explosion_PSY);
    
  with (exp_psy)
    {
    image_xscale=random_range(.5,1.5);
    image_yscale=image_xscale;
    image_angle=random_range(0,360); 
    depth=irandom_range(-3,0);  
    loot=other.loot;
    
      while !position_meeting(x,y,obj_Explosion_Boss)
        {
        x=other.xpos+random_range(-other.spread, other.spread);
        y=other.ypos+random_range(-other.spread, other.spread); 
        } 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_PearStore_inside) instance_destroy();
if (flash)
{
    instance_create(x,y,obj_AuraFlash); 
    flash=false;
}

//TEAR
if (alarm[1]==-1) alarm[1]=tear_rate;

//BOOM
if (alarm[2]==-1) alarm[2]=boom_rate;

//BOMB
if (alarm[3]==-1) 
    {
    alarm[3]=bomb_rate;
    bomb_rate=irandom_range(20,200);
    }
    
    
    
    if (boss_image_alpha&lt;=0) instance_destroy();
    
    if(xplode&lt;=0)
     {
        if (boss_image_alpha&lt;=0) instance_destroy();
     }
     else
     {
        if (alarm[0]=-1) alarm[0]=rate/global.game_speed;
     }
    
    if (boss_image_speed&gt;0) 
        {
        boss_image_index+=boss_image_speed*global.game_speed;
        }
        
if (second_flash==true)
{
    if !instance_exists(obj_AuraFlash) &amp;&amp; (boss_image_alpha&lt;=.5)
    {
    with instance_create(x,y,obj_AuraFlash){depth=-1;}
    }
    
    second_flash=false;
}


if (spread_x&lt;max_spread_x) spread_x+=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
boss_image_alpha=boss_image_alpha-fade_speed*global.game_speed;
 
if (hologram) //HOLOGRAM DRAW
{
    move+=0.1*global.game_speed;
    image_blend=c_white;
   
   
    var Stripes = shader_get_uniform(shdr_Hologram,"Stripes");
    var Filter = shader_get_uniform(shdr_Hologram,"Filter");
    var Phase = shader_get_uniform(shdr_Hologram,"Phase");
    
draw_sprite_ext(boss_sprite_index,boss_image_index,boss_x+irandom_range(-spread_x,spread_x),boss_y+irandom_range(-5,5),boss_image_xscale,boss_image_yscale,boss_image_angle,die_color,boss_image_alpha)    
    shader_set(shdr_Hologram);
    shader_set_uniform_f(Stripes,stripes);
    shader_set_uniform_f(Filter,0.98,0.98,0.98,1.0);//rgba diffuse color
    shader_set_uniform_f(Phase,move);
draw_sprite_ext(boss_sprite_index,boss_image_index,boss_x+irandom_range(-spread_x,spread_x),boss_y+irandom_range(-5,5),boss_image_xscale,boss_image_yscale,boss_image_angle,die_color,boss_image_alpha)
    
    shader_reset();
}

//AURA DRAW
draw_set_blend_mode(bm_add);
//draw_sprite_ext(boss_sprite_index,boss_image_index,boss_x,boss_y,boss_image_xscale,boss_image_yscale,boss_image_angle,die_color,1)
draw_sprite_ext(sprite_index,image_index,x+irandom_range(-spread_x,spread_x),y+irandom_range(-5,5),image_xscale,image_yscale,image_angle,image_blend,image_alpha)  
draw_set_blend_mode(bm_normal);

if (!hologram) //NORMAL DRAW
{
    draw_set_blend_mode(bm_normal);
    draw_set_alpha(1);
    if(boss_image_index&lt;=boss_image_max)
    draw_sprite_ext(boss_sprite_index,boss_image_index,boss_x+irandom_range(-spread_x,spread_x),boss_y+irandom_range(-5,5),boss_image_xscale,boss_image_yscale,boss_image_angle,c_white,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
