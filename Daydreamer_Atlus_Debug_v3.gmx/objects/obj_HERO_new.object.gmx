<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Old_Olivia_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>par_HERO</parentName>
  <maskName>spr_Old_Olivia_Collide</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Olivia Initial variables

if (global.ranked) //LOCK DIFFICULTY IF RANKED
    {
    global.difficulty=2;
    }
    
pause_cooldown=0;
pause_ladder=false;
pause_push=false;
ranked_die_save=false;
ledge_x=x;
ledge_y=y;
zapped=0;
tank_hold=false;
lock_movement=false;
blink=0;
blink_rate=360;
red=255;
blink_cap=50;
crouch_count=0; //edit 10/29/15
fire_count=0; //edit 10/30/15
crouch=false; //edit 10/28/15
crouch_axis=false;
fall_x=x;
hit_index=0;
R_stick_rest=0;
warp_charge=0;
shield_charge=0;
yplus = 0;  
respawn=false;
respawn_frame=0;
ladder_climb=-1;
burn=false;
burn_count=0;
buffs=0;
contact=0;
swung_damage=false;
swung=false;
wallslide=0;
tract=.8;
skid=0;
move=0;
neck_fire=0;
grounded_count=0;
not_grounded_count=0;
y_diff=0;
Bullet_Time=100;
dragoon_turn=false;
air_Death=false;
yview_offset=0;
angle=0;
last_y=y;
vsp = 0;
hsp = 0;
grav = .6;
grounded = 0;
djump = 0;
ladder = false;
ladder_count=0;
hp=50;
hitbounce = 50;
sound_count=0;
hit = false;
rewind=false;
accel=0;
look=3;
ray_look=3;
ray_west_east=1;
west_east=1;
warping = false;
warpdist = 10;
invinsible=false;
firing = false;
spread=0;
shoot_hold=0;
restart_x=x;
restart_y=y;
warps=5;//was 4
shields=5;//was 4
damage=1;
wallbounce=false;
wallbounces=0;
canbounce=false;
Change_weapon=false;
Summon_Pet=false;
shield=false;
shieldup=false;
shieldstand=false;
summon=false;
wallpush=0;
climbledge=false;
adjustview=false;
hit=false;
index_swap=0;
can_Melee=true;
Melee=false;
Dash=1;
Swing=1;
jumpkick=false;
jump_Swing=0;
slide=false;
Inventory=false;
death=false;
headstuck=0;
idle=0;
idle_choice=irandom_range(1,2);
item_hud=0;
land=false;
TubeIN=false;
finish_fire=false;
max_jump=14;
float=false;
sleeping=false;
floatup=true;
recharge=150;//Energy Recharge
luck=0;
color=c_white;
y_shoot_offset=45;
turn=false;
death_count=0;

//WEAPON TOOL TIPS ----
for (i=1;i&lt;9;i+=1)
{
tip_weapon[i]=0;
}
//--------------
//ITEM TOOL TIPS ----
for (i=1;i&lt;14;i+=1)
{
tip_item[i]=0;
}
//--------------

no_pets=true;
pet=0; //WHICH PET IS IN QUEUE
//global.pets[0]=1; //ALWAYS ENSURE TURTLE EXSISTS

var i
for (i=0;i&lt;5;i+=1)
{
    if (global.pets[i]!=0) 
        {
        no_pets=false;
        }
}

if (global.pets[0]!=0) pet=0;


// [0] - FuzzyTurtle 
// [1] - GingerPup
// [2] - MeowCat
// [3] - Weasel
// [4] = Duck

//Color Correction----
brightness=-.04; //brightness
contrast=0; //contrast
//--------------------

global.rows=2;
global.columns=3;

if !instance_exists(obj_camera_offset)
        instance_create(x,y,obj_camera_offset)

if !instance_exists(obj_DJ) instance_create(x,y,obj_DJ) 
with (obj_DJ) {roomcount=12;}
                
weapon_A=global.weapon_A;
weapon_B=global.weapon_B;
weapon_C=global.weapon_C;
weapon_D=global.weapon_D;

weapon_A_energy=global.weapon_A_energy;
weapon_B_energy=global.weapon_B_energy;
weapon_C_energy=global.weapon_C_energy;
weapon_D_energy=global.weapon_D_energy;



weaponslot=1;
weapontype=weapon_A;
energy=weapon_A_energy;
if (weapon_A==0) 
empty_slot=true;
else
empty_slot=false;
//energy=100;
money=0;



instance_create (0,0, obj_Weapon_Type);
instance_create (0,0, obj_Yellow_Energy);
instance_create (0,0, obj_RedEnergyBar);
instance_create (0,0, obj_warps);
instance_create (x,y, obj_Tube);


bloom = .3;
var_radial_blur_offset = 0;

bloom_up=true;
bloom_max=.55;
//bloom_max=.4;
//bloom_min=0;
bloom_min=.00;
bloom_inc=.005;

blur_up=true;
blur_max=0.015;
//blur_min=0;
blur_min=-0.005;
blur_inc=0.00005;

//master_inc=100;
master_inc=500;

if (global.blur_fx!=0) 
{
if !instance_exists(obj_Bloom) instance_create(x,y,obj_Bloom);
}

//Check INventory for Buffs ------------------------------

for (a=0;a&lt;=global.rows;a+=1)
{
    
    for (b=0;b&lt;=global.columns;b+=1)
    {
        if (global.Inventory[a,b]==10)
            {        
            recharge=100;       
            }
    }
}

for (a=0;a&lt;=global.rows;a+=1)
{
    
    for (b=0;b&lt;=global.columns;b+=1)
    {
        if (global.Inventory[a,b]==11)
            {        
            recharge=50;       
            }
    }
}

//LUCK

for (a=0;a&lt;=global.rows;a+=1)
{    
    for (b=0;b&lt;=global.columns;b+=1)
    {
        if (global.Inventory[a,b]==14)
            {        
            luck+=1;       
            }
    }
}

//Trail
trail=true;
for (a=0;a&lt;=8;a+=1)
{
trail_x[a]=x;
trail_y[a]=y;
}
//Create Shadow
if !instance_exists(obj_HERO_dropShadow)
    instance_create(x,y,obj_HERO_dropShadow);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    
if instance_exists(obj_camera_offset)
with (obj_camera_offset) {instance_destroy();}

if instance_exists(obj_DJ)
with (obj_DJ) {instance_destroy();}

if instance_exists(obj_Weapon_Type)
with (obj_Weapon_Type) {instance_destroy();}
        
if instance_exists(obj_Yellow_Energy)
with (obj_Yellow_Energy) {instance_destroy();}
        
if instance_exists(obj_RedEnergyBar)
with (obj_RedEnergyBar) {instance_destroy();}
        
if instance_exists(obj_warps)
with (obj_warps) {instance_destroy();}
         
if instance_exists(obj_LSD)
with (obj_LSD) {instance_destroy();}
    


//OTHER STUFF
global.manuel_draw=false;
audio_sound_pitch(snd_droid_activate,1);

if (global.platform==1) || (global.platform==3)
{
if (global.platform==3) gamepad_set_colour(0, c_blue);

global.debug=false;
if instance_exists(obj_debug){with (obj_debug){instance_destroy();}}
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//END HIT COOLDOWN and VIBRATION
gamepad_set_vibration(0, 0, 0);

if !instance_exists(obj_ForceField) 
    {
    invinsible=false;
    shield=false;
    }
    color=c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//WALL SLIDE TRAIL
with instance_create(x+30*image_xscale,bbox_bottom,obj_dust_trail)
{
image_xscale=2+random_range(-1,1); 
image_yscale=(image_xscale)*sign(other.image_xscale);
image_angle=270;
image_index=0;
i_image_speed=2;
depth=other.depth+irandom_range(-1,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_Melee=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_vibration(0, 0, 0);
//FLAME DUMMY ALARM
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TRIPPLE SHOT
if(energy&gt;1)
{
energy=energy-1;
fire_y=y-25;
fire_x=x;

if (sprite_index==spr_Old_Olivia_Shoot_Down_Split)
{      
    fire_x=x+8*image_xscale;
}

if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split)
{    
    fire_y=y-15;
    fire_x=x-43*image_xscale;
}

if (sprite_index==spr_Old_Olivia_Shoot_Up_Split)
{    
    fire_x=x+19*image_xscale;
    //fire_x=x+32*image_xscale;
    fire_y=y-37;    
}

if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split_Up)
{    
    fire_y=y-30;
    fire_x=x+22*image_xscale;
}



switch(look)
{
    case 12:
    fire_y=fire_y-100;
    fire_x=fire_x-20*image_xscale;
    fire_direction = 90;
    break;
    
    case 3:
    fire_y=fire_y-28;
    fire_x=fire_x+70;
    fire_direction = 0; 
    break;
    
    case 9:
    fire_y=fire_y-28;
    fire_x=fire_x-70;
    fire_direction = 180; 
    break;
    
    case 2:
    fire_y=fire_y-72;
    fire_x=fire_x+42;
    if (crouch)
    fire_direction = 33;
    else
    fire_direction = 45;
    break;
    
    case 10:
    fire_y=fire_y-72;
    fire_x=fire_x-42;
     if (crouch)
    fire_direction = 147;
    else
    fire_direction = 135;     
    break;
    
    case 6:
    if (crouch)
    {
    fire_y=fire_y+78;
    fire_x=fire_x-1*image_xscale;
    }
    else
    {
    fire_y=fire_y+45;
    fire_x=fire_x-5*image_xscale;
    }  
    fire_direction = 270;  
    break;
    
    case 5:
    if (crouch)
    {
    fire_y=fire_y+38;
    fire_x=fire_x+88;
    }
    else
    {
    fire_y=fire_y+27;
    fire_x=fire_x+77;
    }
    fire_direction = 315;
    break;
    
    case 7:
    if (crouch)
    {
    fire_y=fire_y+38;
    fire_x=fire_x-88;
    }
    else
    {
    fire_y=fire_y+27;
    fire_x=fire_x-77;
    }
    fire_direction = 225;
    break;
}


if (crouch) 
    {
    fire_y+=45; //edit 10/28/15
    if (Key_Up) 
        {
        if !(Key_Left) &amp;&amp; !(Key_Right)
        fire_x+=15*image_xscale;
        }
    }

if (sprite_index!=spr_Old_Olivia_Jump_Shoot)
{    


if(!grounded)
{
with instance_create(fire_x+hsp,fire_y+vsp,obj_Shoot_Tripple_ctlr) 
{direction=other.fire_direction; image_angle=other.fire_direction;}
}
else
{
with instance_create(fire_x+hsp,fire_y+vsp,obj_Shoot_Tripple_ctlr) 
{direction=other.fire_direction; image_angle=other.fire_direction;}
}


audio_sound_pitch(snd_TriBlast,global.game_speed);
audio_play_sound(snd_TriBlast, 10, false);
gamepad_set_vibration(0, 0, 0);
}
 else
 {    
    
    if(image_index&lt;=79)
    {
    fire_x=x+jump_shoot_x(round(image_index))*image_xscale+hsp;
    fire_y=y+jump_shoot_y(round(image_index))+vsp-25;
    
    with instance_create(fire_x,fire_y,obj_Shoot_Tripple_ctlr) 
    {direction=other.fire_direction; image_angle=other.fire_direction;}
    
    audio_sound_pitch(snd_TriBlast,global.game_speed);
    audio_play_sound(snd_TriBlast, 10, false);
    gamepad_set_vibration(0, 0, 0);
    
    }//END IN JUMP FRAME RANGE
 }//END JUMP SHOOTING   



}//ENOUGH ENERGY
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//UNSHIELD ALL
shield=false;
shieldup=false;
shieldstand=false;

if instance_exists(obj_ForceField)
    {
    audio_play_sound(snd_impact_Heavy,10,false);
    audio_play_sound(snd_Powerdown_A,10,false);
    obj_ForceField.image_alpha=.8;
    obj_ForceField.sprite_index=Force_Field_B_Hit;
    obj_ForceField.image_index=0;
    obj_ForceField.image_speed=.5*global.game_speed;
    obj_ForceField.hit=true;
    obj_ForceField.die=true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//RECHARGE AMMO-------------------
if (!empty_slot)
{
    if(weapontype!=6)
    {
    if (energy &lt; 100) energy=energy+2;
    if (energy &gt; 100) energy=100;
    }
}

if (weapon_A!=6) {if (weapon_A_energy &lt; 100) if (global.weapon_A!=0) weapon_A_energy=weapon_A_energy+1;}
if (weapon_B!=6) {if (weapon_B_energy &lt; 100) if (global.weapon_B!=0) weapon_B_energy=weapon_B_energy+1;}
if (weapon_C!=6) {if (weapon_C_energy &lt; 100) if (global.weapon_C!=0) weapon_C_energy=weapon_C_energy+1;}
if (weapon_D!=6) {if (weapon_D_energy &lt; 100) if (global.weapon_D!=0) weapon_D_energy=weapon_D_energy+1;}

if (Bullet_Time&lt;100) Bullet_Time+=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HOMING SHOT
if(energy&gt;2)
{
energy=energy-1;
fire_y=y-25;
fire_x=x;

if (sprite_index==spr_Old_Olivia_Shoot_Down_Split)
{      
    fire_x=x+5*image_xscale;
}

if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split)
{    
    fire_y=y-15;
    fire_x=x-40*image_xscale;
}


if (sprite_index==spr_Old_Olivia_Shoot_Up_Split)
{    
    fire_x=x+19*image_xscale;
    //fire_x=x+32*image_xscale;
    fire_y=y-37;    
}

if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split_Up)
{    
    fire_y=y-30;
    fire_x=x+22*image_xscale;
}



switch(look)
{
    case 12:
    fire_y=fire_y-100;
    fire_x=fire_x-20*image_xscale;
    fire_direction = 90;
    break;
    
    case 3:
    fire_y=fire_y-28;
    fire_x=fire_x+70;
    fire_direction = 0; 
    break;
    
    case 9:
    fire_y=fire_y-28;
    fire_x=fire_x-70;
    fire_direction = 180; 
    break;
    
    case 2:
    fire_y=fire_y-72;
    fire_x=fire_x+42;
    if (crouch)
    fire_direction = 33;
    else
    fire_direction = 45;
    break;
    
    case 10:
    fire_y=fire_y-72;
    fire_x=fire_x-42;
    if (crouch)
    fire_direction = 147;
    else
    fire_direction = 135;    
    break;
    
    case 6:
    if (crouch)
    {
    fire_y=fire_y+78;
    fire_x=fire_x-1*image_xscale;
    }
    else
    {
    fire_y=fire_y+45;
    fire_x=fire_x-5*image_xscale;
    }  
    fire_direction = 270;  
    break;
    
    case 5:
    if (crouch)
    {
    fire_y=fire_y+38;
    fire_x=fire_x+88;
    }
    else
    {
    fire_y=fire_y+27;
    fire_x=fire_x+77;
    }
    fire_direction = 315;
    break;
    
    case 7:
    if (crouch)
    {
    fire_y=fire_y+38;
    fire_x=fire_x-88;
    }
    else
    {
    fire_y=fire_y+27;
    fire_x=fire_x-77;
    }
    fire_direction = 225;
    break;
}

if (crouch) 
    {
    fire_y+=45; //edit 10/28/15
    if (Key_Up) 
        {
        if !(Key_Left) &amp;&amp; !(Key_Right)
        fire_x+=15*image_xscale;
        }
    }

if (sprite_index!=spr_Old_Olivia_Jump_Shoot)
{   
if(!grounded)
{
with instance_create(fire_x+2*hsp,fire_y+vsp,obj_Homing) 
{direction=other.fire_direction; image_angle=other.fire_direction;wave=90;create_flare=true;}

with instance_create(fire_x+2*hsp,fire_y+vsp,obj_Homing) 
{direction=other.fire_direction; image_angle=other.fire_direction;wave=270;alarm[2]=4;}

}
else
{
with instance_create(fire_x+hsp,fire_y+vsp,obj_Homing) 
{direction=other.fire_direction; image_angle=other.fire_direction; wave=90;create_flare=true;}

with instance_create(fire_x+hsp,fire_y+vsp,obj_Homing) 
{direction=other.fire_direction; image_angle=other.fire_direction; wave=270;alarm[2]=4;}
}

audio_sound_pitch(snd_LaserSimple,1*global.game_speed);
audio_play_sound(snd_LaserSimple, 10, false);
gamepad_set_vibration(0, 0, 0);
 }
 else
 {    
    
     if(image_index&lt;=79)
    {
    fire_x=x+jump_shoot_x(round(image_index))*image_xscale+hsp;
    fire_y=y+jump_shoot_y(round(image_index))+vsp-25;
    
    with instance_create(fire_x,fire_y,obj_Homing) 
    {direction=other.fire_direction; image_angle=other.fire_direction; wave=90;create_flare=true;}

    with instance_create(fire_x,fire_y,obj_Homing) 
    {direction=other.fire_direction; image_angle=other.fire_direction; wave=270;alarm[2]=4;}
    
    audio_sound_pitch(snd_LaserSimple,1*global.game_speed);
    audio_play_sound(snd_LaserSimple, 10, false);
    gamepad_set_vibration(0, 0, 0);
    
    }//END IN JUMP FRAME RANGE
 }//END JUMP SHOOTING   



}//ENOUGH ENERGY
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//RECHARGE
if (warps &lt; 5) warps=warps+1;
if (shields &lt; 5) shields=shields+1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//END HIT RED FLASH or IF DEAD GO TO GAMEOVER
if (hp&lt;=0)
{
    room_goto(rm_GameOver);
    global.last_room=room;
}
else
{
    image_alpha = 1;
    color=c_white;
    blink_rate=360;
    red=255;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//REGULAR SHOT
if(energy&gt;.75)
{
energy=energy-.75;

fire_y=y-25;
fire_x=x;

if (sprite_index==spr_Old_Olivia_Shoot_Down_Split)
{      
    fire_x=x+5*image_xscale;
}

if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split)
{    
    fire_y=y-15;
    fire_x=x-40*image_xscale;
}

if (sprite_index==spr_Old_Olivia_Shoot_Up_Split)
{    
    fire_x=x+19*image_xscale;
    //fire_x=x+32*image_xscale;
    fire_y=y-37;    
}

if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split_Up)
{    
    fire_y=y-30;
    fire_x=x+22*image_xscale;
}

switch(look)
{
    case 12:
    fire_y=fire_y-100;
    fire_x=fire_x-20*image_xscale;
    fire_direction = 90;
    break;
    
    case 3:
    fire_y=fire_y-28;
    fire_x=fire_x+70;
    fire_direction = 0; 
    break;
    
    case 9:
    fire_y=fire_y-28;
    fire_x=fire_x-70;
    fire_direction = 180; 
    break;
    
    case 2:
    fire_y=fire_y-72;
    fire_x=fire_x+42;
    if (crouch)
    fire_direction = 33;
    else
    fire_direction = 45;
    break;
    
    case 10:
    fire_y=fire_y-72;
    fire_x=fire_x-42;
    
     if (crouch)
    fire_direction = 147;
    else
    fire_direction = 135;   
    break;
    
    case 6:
    if (crouch)
    {
    fire_y=fire_y+78;
    fire_x=fire_x-1*image_xscale;
    }
    else
    {
    fire_y=fire_y+45;
    fire_x=fire_x-5*image_xscale;
    }
    
    fire_direction = 270;    
    break;
    
    case 5:
    if (crouch)
    {
    fire_y=fire_y+38;
    fire_x=fire_x+88;
    }
    else
    {
    fire_y=fire_y+27;
    fire_x=fire_x+77;
    }
    fire_direction = 315;
    break;
    
    case 7:
    if (crouch)
    {
    fire_y=fire_y+38;
    fire_x=fire_x-88;
    }
    else
    {
    fire_y=fire_y+27;
    fire_x=fire_x-77;
    }
    fire_direction = 225;
    break;
}



if (crouch) 
    {
    fire_y+=45; //edit 10/28/15
    if (Key_Up) 
        {
        if !(Key_Left) &amp;&amp; !(Key_Right)
        fire_x+=15*image_xscale;
        }
    }

    
if (sprite_index!=spr_Old_Olivia_Jump_Shoot)
{
    
if(!grounded)
{
    with instance_create(fire_x+2*hsp,fire_y+vsp,obj_ShootA) 
    {direction=other.fire_direction; image_angle=other.fire_direction;}





}
else
{
    with instance_create(fire_x+hsp,fire_y+vsp,obj_ShootA) 
    {direction=other.fire_direction; image_angle=other.fire_direction;}

}

    audio_sound_pitch(snd_zapA,global.game_speed);
    audio_play_sound(snd_zapA, 10, false);
    gamepad_set_vibration(0, 0, 0);
} //END NOT JUMP SHOOT
 else
 {    
    
    if(image_index&lt;=79)
    {
    fire_x=x+jump_shoot_x(round(image_index))*image_xscale+hsp;
    fire_y=y+jump_shoot_y(round(image_index))+vsp-25;
    
    with instance_create(fire_x,fire_y,obj_ShootA) 
        {
        direction=other.fire_direction; 
        image_angle=other.fire_direction;
        }
    
    audio_sound_pitch(snd_zapA,global.game_speed);
    audio_play_sound(snd_zapA, 10, false);
    gamepad_set_vibration(0, 0, 0);
    
    }//END IN JUMP FRAME RANGE
 }//END JUMP SHOOTING   



}//ENOUGH ENERGY
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_camera_offset)
{
//FIX BAD FORCEFIELD TIMING
if !instance_exists(obj_ForceField) 
    {
        if (shieldup==false){
        if (shield==true){ 
        if (invinsible==true){
        if (alarm[11]==-1)
            {
            shield=false;
            invinsible=false;
            }
        }}}}
    



//START-----------------------------------------
depth=-2;
image_angle=0;
//angle=0;
trail=false;

//PS4 CONTROLLER COLOR
if (global.platform==3)
{
if instance_exists(obj_FuzzyTurtle_header)
{
if (irandom_range(1,2)==1)
gamepad_set_colour(0, c_fuchsia);
else
gamepad_set_colour(0, c_lime);
}
else if instance_exists(obj_GingerPup_header)
{
if (irandom_range(1,2)==1)
gamepad_set_colour(0, c_red);
else
gamepad_set_colour(0, c_purple);
}
else if instance_exists(obj_QuackerSquad_Header)
{
if (irandom_range(1,2)==1)
gamepad_set_colour(0, c_white);
else
gamepad_set_colour(0, c_aqua);
}
else if instance_exists(obj_MeowCat_header)
{
if (irandom_range(1,2)==1)
gamepad_set_colour(0, c_white);
else
gamepad_set_colour(0, c_gray);
}
else if instance_exists(obj_WeaselForce_Header)
{
if (irandom_range(1,2)==1)
gamepad_set_colour(0, c_white);
else
gamepad_set_colour(0, c_orange);
}
else if instance_exists(obj_Ray)
{
 gamepad_set_colour(0, obj_Ray.color_beam);
}
else if instance_exists(obj_Bomb)
{
 gamepad_set_colour(0, make_color_hsv(irandom_range(1,255),255,245));
}
else if instance_exists(obj_ForceField)
{

gamepad_set_colour(0, obj_ForceField.color);
}
else if (color==c_red)
{    
   
    if (irandom_range(1,2)==1)
    gamepad_set_colour(0, c_blue);
    else
    gamepad_set_colour(0, c_red);
    /*
    if (sin(blink)&lt;0) &amp;&amp; (alarm[1]&lt;blink_cap)
    gamepad_set_colour(0, c_blue);
    else
    gamepad_set_colour(0, c_red);
    */
}
else
{
if (hp&lt;25)
    {
        gamepad_set_colour(0, c_red);
    }
    else
    {
        gamepad_set_colour(0, c_blue);
    }    
}
}

//Actiavete all in view
instance_activate_region(view_xview[0]-512,view_yview[0]-512,view_wview[0]+1024,view_hview[0]+1024,true);

if place_meeting(x,y,obj_Vertical_Shaft)
 mask_index=spr_Young_Olivia_Collide;
else
 mask_index=spr_Old_Olivia_Collide;
 
/*-----------------------------------------------
  _____             _   _     
 |  __ \           | | | |    
 | |  | | ___  __ _| |_| |__  
 | |  | |/ _ \/ _` | __| '_ \ 
 | |__| |  __/ (_| | |_| | | |
 |_____/ \___|\__,_|\__|_| |_|
                              
                              */
//DEATH ----------------------------------------

if(hp&lt;=0)
{


if(!death) //INITIALIZE DEATH ------------------
    {      
    if (grounded) //DECLARE IF DIED ON GROUND OR AIR ----
    {
        sprite_index=spr_Old_Olivia_Die;
        air_Death=false;   
        depth=-2;
        with instance_create(x,y,obj_Screen_Darken)
        {max_dark=.2; inc=.1; hold=100; depth=2;}
       
    }
    else  
    {
        sprite_index=spr_Old_Olivia_Die_Air;
        depth=-30;
        //if !instance_exists(obj_AuraFlash)
        with instance_create(x,y,obj_AuraFlash){depth=other.depth+2;} 
        vsp=0;
        hsp=0;
        grav=0;
        air_Death=true;
    }
        image_index=0;
        image_speed=.5*global.game_speed;
        instance_create(x,y,obj_ScreenFlash);      
        global.CutScene=true;                  
    }//---------------------------------------------------

death=true;      //DEATH MODE ENABLED
invinsible=true; //TAKE NO DAMAGE
ladder=false;    //LOCK OFF LADDER
warping=false;   //edit
jumpkick=false;  //edit
Melee=false;     //edit
jump_Swing=0;    //edit 10/26/15

if instance_exists(obj_ForceField) 
 {
 with (obj_ForceField){die=true;hp=0;}
 }


for (a=0;a&lt;=global.rows;a+=1) //CHECK INVENTORY FOR RESSURECTION----
{
    for (b=0;b&lt;=global.columns;b+=1)
    {
        if (global.Inventory[a,b]==12)
            {
            audio_sound_pitch(snd_Harp_A,random_range(.7,1)*global.game_speed); //IF SO MAKE A FAIRY
            audio_sound_pitch(snd_Harp_B,random_range(.7,1)*global.game_speed); //IF SO MAKE A FAIRY
            switch(irandom(1))
            {
            case 0: audio_play_sound(snd_Harp_A,10,false); break;
            case 1: audio_play_sound(snd_Harp_B,10,false); break;
            }
            
            global.Inventory[a,b]=0;
            hp=20;
            with instance_create(x,y-y_shoot_offset,obj_Baby_Fairy_Res){depth=depth-1;}
            instance_create(x,y-y_shoot_offset,obj_Powerup_A_FULL);            
            color = c_white;
            image_blend=c_white;
            }
    if(hp&gt;0) break;
    }
 if(hp&gt;0) break;
}

if (air_Death==false) //SET THE SPRITE TO AIR DEATH OR GROUND DEATH
            {
            grav = .6;
            sprite_index=spr_Old_Olivia_Die;
            image_speed=.5*global.game_speed;
            depth=-2;
            }
            else
            {
            grav=0;
            vsp=0;
            sprite_index=spr_Old_Olivia_Die_Air
            image_speed=.5*global.game_speed;
            depth=-30;
            } 
            


            if(hp&lt;=0) //FOLLOW OUT DEATH IF NO RES
            {
                    if (global.ranked) &amp;&amp; (ranked_die_save==false)
                    {
                    ranked_die_save=true;
                    hp=0;
                    //global.Points;
                    global.SavedHP=0;
                    scr_savegame();  //SAVE OUT THE FINAL DATA
                    }
                            
            if (image_index==3) 
                {
                if (grav==0) 
                { 
                //with instance_create(x,y,obj_AuraFlash){depth=other.depth+1;} 
                }
                else
                instance_create(x,y,obj_ScreenFlash);
                }   
           
            if (round(image_index)==7) 
                {
                audio_sound_pitch(snd_die,global.game_speed);
                if !audio_is_playing(snd_die)
                audio_play_sound(snd_die,10,false); //DIE   
                }
                
                if (sprite_index==spr_Old_Olivia_Die)
                {
                    if (image_index&gt;=sprite_get_number(sprite_index)-3) color=c_red;
                    
                    if(image_index&gt;=23)//sprite_get_number(spr_Old_Olivia_Die)-1)//23)
                    {
                        image_speed=0;
                        image_alpha-=.02;
                        color=c_red;
                        image_blend=c_red;
                    }
                    else
                    {
                        alarm[1]=50;
                        color=c_white;
                        image_blend=c_white;                    
                    }
                    
                }
                
                if (sprite_index==spr_Old_Olivia_Die_Air)
                {
                    
                    if(image_index==14)
                    {
                     instance_create(x,y,obj_ScreenFlash)
                    }
                    
                    if(image_index&gt;=(sprite_get_number(spr_Old_Olivia_Die_Air)-1)) 
                    {
                    image_alpha=0;
                    image_speed=0;
                    color=c_white;
                    image_blend=c_white;
                    }
                    else
                    {
                    alarm[1]=50;
                    color=c_white;
                    image_blend=c_white;
                    }
                    
                }
            }
            

}//END HP&lt;0
/*----------------------------------------------------------------------
   _____            _             _   _____                   _       
  / ____|          | |           | | |_   _|                 | |      
 | |     ___  _ __ | |_ _ __ ___ | |   | |  _ __  _ __  _   _| |_ ___ 
 | |    / _ \| '_ \| __| '__/ _ \| |   | | | '_ \| '_ \| | | | __/ __|
 | |___| (_) | | | | |_| | | (_) | |  _| |_| | | | |_) | |_| | |_\__ \
  \_____\___/|_| |_|\__|_|  \___/|_| |_____|_| |_| .__/ \__,_|\__|___/
                                                 | |                  
                                                 |_|                  */
//CONTROL INPUTS -------------------------------------------------------


//Gamepad inputs
if(hp&gt;0)
{

Key_Pet_L=0;
Key_Pet_R=0; 

Key_Left = gamepad_button_check(0,global.gp_D_Left);     
Key_Right = gamepad_button_check(0,global.gp_D_Right);
Key_Up = gamepad_button_check(0,global.gp_D_Up);
Key_Down = gamepad_button_check(0,global.gp_D_Down);

Key_Jump = gamepad_button_check_pressed(0,global.gp_Jump);
Key_Melee = gamepad_button_check_pressed(0,global.gp_Melee);
Key_Fire = gamepad_button_check_pressed(0,global.gp_Fire);
Key_Firing = gamepad_button_check(0,global.gp_Fire); 
Key_Weapon = gamepad_button_check_pressed(0,global.gp_Weapon);

Key_Pause = gamepad_button_check_pressed(0,global.gp_Pause); 
Key_Select = gamepad_button_check_pressed(0,global.gp_Select); 
Key_Left_Shoulder = gamepad_button_check_pressed(0,global.gp_Left_Shoulder);
Key_Right_Shoulder = gamepad_button_check_pressed(0,global.gp_Right_Shoulder);
Key_Left_Trigger = gamepad_button_check_pressed(0,global.gp_Left_Trigger);
Key_Right_Trigger = gamepad_button_check_pressed(0,global.gp_Right_Trigger); 

Key_Left_Stick=gamepad_button_check_pressed(0,global.gp_Pet_L);
Key_Right_Stick=gamepad_button_check_pressed(0,global.gp_Pet_R);


if keyboard_check_pressed(global.kb_Pet_L) {Key_Pet_L = true; if !audio_is_playing(snd_TickA) &amp;&amp; (no_pets==false) audio_play_sound(snd_TickA,16,false);}
if keyboard_check_pressed(global.kb_Pet_R) {Key_Pet_R = true; if !audio_is_playing(snd_TickA) &amp;&amp; (no_pets==false) audio_play_sound(snd_TickA,16,false);}

if (gamepad_axis_value(0, gp_axislv)&lt;-.5) Key_Up = 1;  
if (gamepad_axis_value(0, gp_axislv)&gt;.5) Key_Down = 1;
if (gamepad_axis_value(0, gp_axislh)&lt;-.5) Key_Left = 1;
if (gamepad_axis_value(0, gp_axislh)&gt;.5) Key_Right = 1;

if (gamepad_axis_value(0, gp_axislh)==0) {Key_Left = 0; Key_Right = 0;}
if (gamepad_axis_value(0, gp_axislv)==0) {Key_Up = 0; Key_Down=0;}


if keyboard_check_direct(global.kb_Left) Key_Left = true;
if keyboard_check_direct(global.kb_Right) Key_Right = true; 
if keyboard_check_direct(global.kb_Up) Key_Up = true;
if keyboard_check_direct(global.kb_Down) Key_Down = true;

if keyboard_check_pressed(global.kb_Jump) Key_Jump = true;
if keyboard_check_pressed(global.kb_Melee) Key_Melee = true;
if keyboard_check_pressed(global.kb_Fire) Key_Fire = true;
if keyboard_check_direct(global.kb_Fire)  Key_Firing = true;
if keyboard_check_pressed(global.kb_Weapon) Key_Weapon = true;
if keyboard_check_pressed(global.kb_Pause) Key_Pause = true;

if keyboard_check_pressed(global.kb_Left_Shoulder) Key_Left_Shoulder = true;
if keyboard_check_pressed(global.kb_Right_Shoulder) Key_Right_Shoulder = true;
if keyboard_check_pressed(global.kb_Select) Key_Select = true;

if keyboard_check_pressed(global.kb_Left_Shoulder) Key_Left_Trigger = true;
if keyboard_check_pressed(global.kb_Right_Trigger) Key_Right_Trigger = true;


//PET SELECT
if (R_stick_rest&lt;=0)
{
    if (gamepad_axis_value(0, gp_axisrh)&lt;-.5) {Key_Pet_L = 1; R_stick_rest=10; audio_play_sound(snd_TickA,16,false);}
    if (gamepad_axis_value(0, gp_axisrh)&gt;.5) {Key_Pet_R = 1; R_stick_rest=10;audio_play_sound(snd_TickA,16,false);}   
}
else
{
    if (R_stick_rest&gt;0) R_stick_rest-=1;
}

}//END IF HP IS GREATER THAN 0



/*--------------------------------------------------------
   ____                 _     _           
  / __ \               (_)   | |          
 | |  | |_   _____ _ __ _  __| | ___  ___ 
 | |  | \ \ / / _ \ '__| |/ _` |/ _ \/ __|
 | |__| |\ V /  __/ |  | | (_| |  __/\__ \
  \____/  \_/ \___|_|  |_|\__,_|\___||___/
                                          
                                          */
//CONTROL OVERIDES ---------------------------------------

if (global.CutScene==true) //DISABLE CONTROLS
{
Key_Fire =false;
Key_Firing=false;
Key_Jump =false;
Key_Melee=false;
Key_Left_Shoulder=false;
if !instance_exists(obj_Dragoon) Key_Right_Shoulder=false; //edit 022616
Key_Right_Trigger=false;
Key_Left_Trigger=false;
Key_Left =false;
Key_Right =false;
Key_Up=false;
Key_Down =false; 
Key_Select =false;
}


if instance_exists(obj_Tube) //DISABLE WARP AT CREATION
{
Key_Left_Trigger=false;
Key_Right_Trigger=false;
}

if (lock_movement==true) //DISABLE MOVEMENT ONLY
{
Key_Left =false;
Key_Right =false;
}

//SWAPING WEAPONS
if (tank_hold) || place_meeting(x,y,obj_WeaponTank)
{              
Key_Weapon=false;
}

if (can_Melee==false) Key_Melee=false;

if (image_alpha==0)    
    {
    Key_Fire=false;
    Key_Firing=false;
    firing=false;
    }
//Global Set Overides ------------

Key_Run=true;
if (global.fullhealth==true) {hp=100; global.fullhealth=false;money=money+100;} //cheat

if (Key_Fire) || (Key_Firing) 
    {firing=true; wallpush=0;} 
    else 
    {firing=false;} 

if instance_exists(obj_PearStore_inside) || instance_exists(obj_Store) || instance_exists(obj_DolphinStore)
    {
    firing=false;
    }
    
    
if (climbledge) 
    {
    Key_Jump = false; //DISABLE JUMP   
    wallbounce = false //DISABLE WALLBOUNCE
    }
if(weapontype==6) //NO SLIDING AFTER BOMB
{ 
if !instance_exists(obj_Bomb)
    {
if (firing)
    {
    if (energy&lt;15) 
        {
        firing=false;
        Key_Fire=false;
        Key_Firing=false;
        
        if (global.auto_swap) Key_Weapon=true; //edit 12/22/15
        
        Key_Up=false;
            
            audio_sound_pitch(snd_ammo_out,global.game_speed);
            if !audio_is_playing(snd_ammo_out)
            audio_play_sound(snd_ammo_out,10,false);
        }
    }
    }
    else
    {
        if (finish_fire) //DISABLE IS BOMB DETONATED
        {
        firing=false;
        Key_Fire=false;
        }
    }
}

if (shieldup) Key_Jump =false;

if (firing) fire_count+=1; else fire_count=0; //edit 10/30/15
if (firing==false) &amp;&amp; (Key_Down==false) crouch=false; //edit 10/30/15

if (crouch==false) crouch_axis=false;

if instance_exists(par_Activate)
{
Key_Kire=false;
Key_Firing=false;
firing=false;
}
//if (crouch) Key_Down=true;

/*---------------------------------------------------------------
   _____            _ _          _____                    
  / ____|          (_) |        / ____|                   
 | (___  _ __  _ __ _| |_ ___  | (_____      ____ _ _ __  
  \___ \| '_ \| '__| | __/ _ \  \___ \ \ /\ / / _` | '_ \ 
  ____) | |_) | |  | | ||  __/  ____) \ V  V / (_| | |_) |
 |_____/| .__/|_|  |_|\__\___| |_____/ \_/\_/ \__,_| .__/ 
        | |                                        | |    
        |_|                                        |_|         */        
//------------------------- Grounded Sprites --------------------

if (float) || (sleeping) || (respawn)// IF FLOAT OR SLEEP
{
    if (float)
    {
    sprite_index=spr_Old_Olivia_Float;
            
            if (floatup)
                {image_speed=.5*global.game_speed;}
                else
                {image_speed=.5*global.game_speed;}
    }

    if (sleeping)
    {    
        if instance_exists(obj_Bed_Save)
        {
        sprite_index=spr_Old_Olivia_Die;
        image_speed=.5*global.game_speed;
        if (image_index&gt;=24) image_speed=0;
        }
        else
        {
        sprite_index=spr_Old_Olivia_Die;
        image_speed=-.5*global.game_speed;
        if (image_index&lt;=1) sleeping=false;
        }
    }   
    
    if (respawn)
    {
        image_alpha=1;
        invinsible=false;
        color=c_white;
        
        if !instance_exists(obj_Screen_Darken)
            {
            with instance_create(x,y,obj_Screen_Darken)
                {
                image_alpha=.75;
                active=false;
                }                                
                audio_play_sound(snd_droid_takeoff,11,false);
                audio_play_sound(snd_DairChoir,12,false);
            }

        global.CutScene=true;
        sprite_index=spr_Old_Olivia_Die_Air;
        image_speed=0;
        respawn_frame-=.5*global.game_speed;
        image_index=respawn_frame;
        
        if (respawn_frame&lt;=1)
            {
            respawn=false;
            global.CutScene=false;
            image_speed=.5*global.game_speed;
            }
    }
} //END IF FLOAT OR SLEEP OR RESPAWN
else
{
//START IF NOT FLOAT
/*----------------------------------------------------------
  _____    _ _         _____            _ _            
 |_   _|  | | |       / ____|          (_) |           
   | |  __| | | ___  | (___  _ __  _ __ _| |_ ___  ___ 
   | | / _` | |/ _ \  \___ \| '_ \| '__| | __/ _ \/ __|
  _| || (_| | |  __/  ____) | |_) | |  | | ||  __/\__ \
 |_____\__,_|_|\___| |_____/| .__/|_|  |_|\__\___||___/
                            | |                        
                            |_|                           */
//----------------------------------------------------------

if (grounded) &amp;&amp; (!warping) &amp;&amp; (!climbledge) &amp;&amp; (!Melee)
{
    //Idle Sprite --------------    
    if (!firing) //START IDLE SPRITES
        {
        
        if (land)
            {
            wallpush=0;//edit
            accel=0; 
            sprite_index=spr_Old_Olivia_Land;
            image_speed=.5*global.game_speed;
            if (image_index&gt;=2) {land=false;}
            }
            else
            {

        if (idle&lt;8)
            {
            sprite_index = spr_Old_Olivia_Idle;
            image_speed=1*global.game_speed;
            if (image_index&gt;=49) 
                {
                idle=idle+1;
                if (idle==8){if(!hit) image_index=0;} 
                }
            }
        if (idle&gt;=8)
            {
            
            switch(idle_choice)
            {
            case 1:
            sprite_index=spr_Old_Olivia_Juice_Box;
            image_speed=.4*global.game_speed;
            if (image_index&gt;=69) 
                {
                idle=0;
                idle_choice=irandom_range(1,3);
                }
            break;
            
            case 2:
            sprite_index=spr_Old_Olivia_Touch_Neck;
            image_speed=.5*global.game_speed;
            
            if (image_index&gt;=36) 
                {  
                image_speed=-.5*global.game_speed;
                //image_index=12;
                idle+=1;
                }
                 
                if (image_index&lt;=12) 
                {  
                image_speed=.5*global.game_speed;
                //image_index=12;
                //idle+=1;
                }
                     
                if (idle&gt;=12)
                {
                image_speed=-.5*global.game_speed;
                
                if (image_index&lt;=0)
                    {
                    idle=0;
                    idle_choice=irandom_range(1,3);
                    }
                } 
            break;
            
            case 3:
            sprite_index=spr_Old_Olivia_Kick_Dust
            image_speed=.4*global.game_speed;
            if (image_index&gt;=29) 
                {
                idle=0;
                idle_choice=irandom_range(1,3);
                }
            break;
            
            case 4: //Think
            /*
            sprite_index=spr_Old_Olivia_Think;
            image_speed=.5*global.game_speed;
            
            if (image_index&gt;=37) 
                {  
                image_index=15;
                idle+=1;
                }
                if (idle&gt;=12)
                {
                image_speed=-.5*global.game_speed;
                if (image_index&lt;=0)
                    {
                    idle=0;
                    idle_choice=irandom_range(1,3);
                    }
                } 
            */
            break;
            
            }//END IDLE CHOICE
            
            
            }//END IDLEING 
            }//END NOT LAND
        
        if (west_east = 0) look = 9; else look = 3;
        
        }//END IDLE
               
    
    //Change Weapon Sprite -----------------
    
        if (Change_weapon) 
        {
         
         sprite_index=spr_Old_Olivia_Tap_Gun;
         skid=false;
         
         if(rewind==false)
         {
         image_speed=.5*global.game_speed;
         if (image_index&gt;=sprite_get_number(spr_Old_Olivia_Tap_Gun)-3) 
            {
            rewind=true;
            //instance_create(x,y-y_shoot_offset,obj_Powerup_A_FULL);
            }
         }
         else
         {
         image_speed=-.5*global.game_speed;
         if (image_index&lt;=1) Change_weapon=false;
         }
         
        } //End Change Weapon or Stand Shield
        if (Summon_Pet)
        {
         sprite_index=spr_Old_Olivia_Change_Weapon;
         image_speed=.7*global.game_speed;
         
         if (image_index &gt;= 13 ) 
            {
                Summon_Pet=false;
                instance_create(x,y-y_shoot_offset,obj_Powerup_A_FULL);
            }
         }//End Summon Pet
        
        
        if (shieldstand==true)
        {
            sprite_index=spr_Old_Olivia_Shield_Block;
            image_speed=.5*global.game_speed;
        if (image_index&gt;=12) shieldstand=false;
        }//END SHIELD STAND
    
    
//LOOK UP and CROUCH SPRITES ----------------------------------------------------
/*
  _                 _      _    _                  _____                      
 | |               | |    | |  | |         ___    |  __ \                     
 | |     ___   ___ | | __ | |  | |_ __    ( _ )   | |  | | _____      ___ __  
 | |    / _ \ / _ \| |/ / | |  | | '_ \   / _ \/\ | |  | |/ _ \ \ /\ / / '_ \ 
 | |___| (_) | (_) |   &lt;  | |__| | |_) | | (_&gt;  &lt; | |__| | (_) \ V  V /| | | |
 |______\___/ \___/|_|\_\  \____/| .__/   \___/\/ |_____/ \___/ \_/\_/ |_| |_|
                                 | |                                          
                                 |_|                                          */ 
//-------------------------------------------------------------------------------

   if (!Key_Right) 
    {
        if(!Key_Left)
        {
        
            if (grounded) &amp;&amp; (!climbledge)  &amp;&amp; (!Melee) &amp;&amp; !instance_exists(obj_Bomb) &amp;&amp; (!hit)
            {
                
                if (fire_count&lt;5) //edit 10/30/15 //was 20
                {
                if (Key_Down)   {    
                                                
                                if (abs(hsp)&lt;1)  //IF SLOW ENOUGHH
                                    { 
                                    sprite_index = spr_Old_Olivia_Crouch;
                                    mask_index=spr_Olivia_Collide_duck; 
                                              
                                    
                                    if (crouch_count&gt;30) obj_camera_offset.Look_DOWN=true; 
                                    
        
                                    //if (crouch_count&lt;0) image_index=0; //initialize duck sprite
                                    
                                    crouch_count+=1;
                                    crouch=true;
                                    
                                   
                                    if (image_index &gt;= 9) //was 9
                                        {
                                        image_index=8;
                                        } 
                                                                                                           
                                    image_speed=1*global.game_speed; 
                                    land=false;
                                    idle=0;
                                    skid=false;
                                    }
                                }
                                else
                                {
                                if (firing==false) crouch=false; //edit 10/28/15
                                crouch_count=0;
                                }                                                                                                                                                                                                     
                                
             }  
                
            if (!firing) //edit 10/30/15
            {
            
                   if (Key_Up)     {
                                    if (abs(hsp)&lt;1)  //IF SLOW ENOUGHH
                                    { 
                                    sprite_index = spr_Old_Olivia_Look_Up;
                                    obj_camera_offset.Look_UP=true;
                                    
                                    //if (obj_camera_offset.offset_y&gt;0) image_index=0;
                                    
                                    image_speed=.75*global.game_speed;
                                    land=false;
                                    skid=false;
                                    idle=0;
                                     
                                    if (image_index &gt;= 8) 
                                        {image_index=6;} 
                                    }
                                }           
            }
            }
            
        }
    }
/*----------------------------------------------------------------------
  __  __            _                _____            _ _            
 |  \/  |          (_)              / ____|          (_) |           
 | \  / | _____   ___ _ __   __ _  | (___  _ __  _ __ _| |_ ___  ___ 
 | |\/| |/ _ \ \ / / | '_ \ / _` |  \___ \| '_ \| '__| | __/ _ \/ __|
 | |  | | (_) \ V /| | | | | (_| |  ____) | |_) | |  | | ||  __/\__ \
 |_|  |_|\___/ \_/ |_|_| |_|\__, | |_____/| .__/|_|  |_|\__\___||___/
                             __/ |        | |                        
                            |___/         |_|                        */   
//MOVE / RUN SPRITES ONLY -----------------------------------------------
    
    if (Key_Right) || (Key_Left)
    { 
    land=false;               
    idle=0;
    if (!firing)
    {
        
        if  (hsp==0) { if (wallpush&lt;=2)
        {
        sprite_index = spr_Old_Olivia_Run;
        image_index=1; 
        }}
        
        if (hsp!=0)
        {
            if (!turn)
            {
            sprite_index = spr_Old_Olivia_Run; 
            image_speed=(.6+abs(.1*accel))*global.game_speed;
            if (image_speed&gt;1) image_speed=1;
            if (image_index&gt;=sprite_get_number(sprite_index)-1) || (image_index&lt;1) image_index=6;
             
            }
            else //START TURN ---------------------------
            {
            sprite_index = spr_Old_Olivia_Turn; 
            accel=0;
            
            image_speed=.5*global.game_speed;
                  
            if (image_index&gt;=sprite_get_number(spr_Old_Olivia_Turn)-1) 
                {
                turn=false; 
                sprite_index = spr_Old_Olivia_Run; 
                image_index=6;
                image_speed=(.6+abs(.1*accel))*global.game_speed;
                }
            }
        }
    }
    
/*-------------------------------------------------
 __          __   _ _                 _     
 \ \        / /  | | |               | |    
  \ \  /\  / /_ _| | |_ __  _   _ ___| |__  
   \ \/  \/ / _` | | | '_ \| | | / __| '_ \ 
    \  /\  / (_| | | | |_) | |_| \__ \ | | |
     \/  \/ \__,_|_|_| .__/ \__,_|___/_| |_|
                     | |                    
                     |_|                    */
//-------------------------------------------------    
 
    if (wallpush&gt;2) {
                    if(!climbledge)
                    {
                    if(grounded)
                    {
                    if position_meeting(x+30*image_xscale,y-10,par_wall)
                    sprite_index = spr_Old_Olivia_Push;
                    else
                    sprite_index = spr_Old_Olivia_Push_Low; 
                    
                    if(image_index&gt;=sprite_get_number(spr_Old_Olivia_Push)-1)
                        { 
                        image_speed=0*global.game_speed;
                        image_index=sprite_get_number(spr_Old_Olivia_Push)-1;
                        }
                        else
                        image_speed=1*global.game_speed;   
                        }
                    accel=0;                                      
                    }
                  }
        }//END KEY RIGHT OR LEFT
    
    
//FIRING SPRITES ------------------------------------------------  
/*
  ______ _      _                _____            _ _            
 |  ____(_)    (_)              / ____|          (_) |           
 | |__   _ _ __ _ _ __   __ _  | (___  _ __  _ __ _| |_ ___  ___ 
 |  __| | | '__| | '_ \ / _` |  \___ \| '_ \| '__| | __/ _ \/ __|
 | |    | | |  | | | | | (_| |  ____) | |_) | |  | | ||  __/\__ \
 |_|    |_|_|  |_|_| |_|\__, | |_____/| .__/|_|  |_|\__\___||___/
                         __/ |        | |                        
                        |___/         |_|                       */  
 //---------------------------------------------------------------
  
if(weapontype!=6)
{   
  if (firing) //FIRING ANGLE
  {  
        land=false;
        idle=0;
        hit=false;
        skid=0;
        
       if(crouch)
       {  
                sprite_index=spr_Old_Olivia_Crouch_Shoot; 
                image_speed=1*global.game_speed;
                mask_index=spr_Olivia_Collide_duck;
                if (west_east = 0) look = 9; else look = 3;     //edit 10/28/15  
                
                
                if  (Key_Up)
                { 
                sprite_index = spr_Old_Olivia_Crouch_Shoot_Up; 
                image_speed=1*global.game_speed; 
                look=12;   
                
            if  (Key_Left) || (Key_Right) 
                { 
                crouch_axis=true;
                sprite_index = spr_Old_Olivia_Crouch_Shoot_Straight_Up; 
                image_speed=1*global.game_speed;  
                if (Key_Left) look = 10; else look = 2; 
                }         
                } //END KEY UP
                
                if  (Key_Down) &amp;&amp; (crouch_axis==true)
                {                          
                    if (Key_Left) || (Key_Right)
                        { 
                        sprite_index = spr_Old_Olivia_Crouch_Shoot_Straight_Down;
                        image_speed=1*global.game_speed;
                        if (Key_Left) look = 7; else look = 5; 
                        }
                        else
                        {
                            sprite_index = spr_Old_Olivia_Crouch_Shoot_Down; 
                            image_speed=1*global.game_speed;
                            look = 6; 
                        }                                 
                }
                
       } //END NOT CROUCH
       else
       {  
                sprite_index = spr_Old_Olivia_Shoot_Straight; 
                image_speed=1*global.game_speed; 
                if (west_east = 0) look = 9; else look = 3;        
               
            if  (Key_Up)
                { 
                sprite_index = spr_Old_Olivia_Shoot_Up; 
                image_speed=1*global.game_speed; 
                look=12;   
                
            if  (Key_Left) || (Key_Right)
                { 
                sprite_index = spr_Old_Olivia_Shoot_Straight_Up; 
                image_speed=1*global.game_speed;  
                if (Key_Left) look = 10; else look = 2; 
                }         
                } //END KEY UP
                 
            if  (Key_Down) 
                {                          
                    if (Key_Left) || (Key_Right)
                        { 
                        sprite_index = spr_Old_Olivia_Shoot_Straight_Down;
                        image_speed=1*global.game_speed;
                        crouch=false; //edit 10/30/2015 
                        if (Key_Left) look = 7; else look = 5; 
                        }
                        else
                        {
                            sprite_index = spr_Old_Olivia_Shoot_Down; 
                            image_speed=1*global.game_speed;
                            look = 6; 
                        }                                 
                }
       }//END NOT CROUCH
   
   
    if (image_index &gt;= 12)
        { 
        shoot_hold+=1;
        
        if(shoot_hold&gt;=5)
            {    
            shoot_hold=0;
            image_index=6;
            }
            else
            {
            image_index=11;
            }
        }
        Change_weapon=false;
    }
}//END NOT BOMB


 
 
//-------------------------------------------
/*
  _____                                    
 |  __ \                                   
 | |  | |_ __ __ _  __ _  ___   ___  _ __  
 | |  | | '__/ _` |/ _` |/ _ \ / _ \| '_ \ 
 | |__| | | | (_| | (_| | (_) | (_) | | | |
 |_____/|_|  \__,_|\__, |\___/ \___/|_| |_|
                    __/ |                  
                   |___/                   */
//-------------------------------------------
    if (weapontype==5) //Dragoon SHOT
    {    
    
    if instance_exists(obj_Dragoon) 
    {
    skid=0;
        if (turn)
        {
        sprite_index=spr_Old_Olivia_Dragoon_Turn;
        image_speed=1*global.game_speed;
        if (image_index&gt;=sprite_get_number(spr_Old_Olivia_Dragoon_Turn)-1) turn=false;
        }
        else
        {
        sprite_index=spr_Old_Olivia_Dragoon;
        image_speed=0*global.game_speed;
        image_index=obj_Dragoon.slope;
        }
           
        
        finish_fire=false;
        firing=false;
        hit=false;
    }
   
   if (finish_fire==false)
    {
    if instance_exists(obj_Dragoon_Blast)
        {  
                
                sprite_index = spr_Old_Olivia_Shoot_Straight; 
                image_speed=1*global.game_speed; 
                
                if (image_index &gt;= 12) 
                        {
                        sprite_index=spr_Old_Olivia_Idle; 
                        finish_fire=true
                        }
                if (abs(hsp)&gt;0) finish_fire=true
        }
    }
    
    }//End Dragoon SHOT
    
//-------------------------------------------    
/*
  ____                  _     
 |  _ \                | |    
 | |_) | ___  _ __ ___ | |__  
 |  _ &lt; / _ \| '_ ` _ \| '_ \ 
 | |_) | (_) | | | | | | |_) |
 |____/ \___/|_| |_| |_|_.__/ 
                              
                                           */
//-------------------------------------------
                                  
    if (weapontype==6) //BOMB START
    {
        if instance_exists(obj_Bomb) 
        {
              
        if (!obj_Bomb.detonate)
            {
            skid=0;
            finish_fire=false;
            sprite_index=spr_Old_Olivia_Touch_Neck;
            image_speed=0;
            neck_fire+=.5*global.game_speed;
            image_index=neck_fire;
            if (neck_fire&gt;=36) neck_fire=12;
            }
            else
            {
                if (!finish_fire)
                {
                sprite_index=spr_Old_Olivia_Bomb_Cast;
                Key_Left=false;
                Key_Right=false;
                //firing=false;
                hsp=0;
                skid=0;
                neck_fire+=.5*global.game_speed;
                image_index=neck_fire;
                     
                if (image_index&gt;=12) 
                            {
                            sprite_index=spr_Old_Olivia_Idle; 
                            finish_fire=true;
                            }
                }//END NOT FINISH FIRE (CASTED ANIAMTION)
                
                
                    
            }//END DETONATED
        }//END BOMB EXSISTS
        
        
        
        
    }//END BOMB    
    
} //END GROUNDED SPRITES -----

//----------------------------------------------------------------------------------------------

//------------------------- AirBorn Sprites ----------------------------------------------------
/*
       _                       _                _____            _ _            
      | |                     (_)              / ____|          (_) |           
      | |_   _ _ __ ___  _ __  _ _ __   __ _  | (___  _ __  _ __ _| |_ ___  ___ 
  _   | | | | | '_ ` _ \| '_ \| | '_ \ / _` |  \___ \| '_ \| '__| | __/ _ \/ __|
 | |__| | |_| | | | | | | |_) | | | | | (_| |  ____) | |_) | |  | | ||  __/\__ \
  \____/ \__,_|_| |_| |_| .__/|_|_| |_|\__, | |_____/| .__/|_|  |_|\__\___||___/
                        | |             __/ |        | |                        
                        |_|            |___/         |_|                                     */
//Ladder Sprite --------------------------------------------------------------------------------
if(!climbledge)
{

//REMOVED LADDER SPRITES
//Jumping Sprites ------------------------------

if (vsp&lt;0) //MOVING UP IN AIR ONLY
{
    land=false;
    crouch=false; //edit 10/28/15
    skid=0;
    accel*=.97; //AIR RESISTENCE DAMPEN ACCEL
    
    if (!warping) &amp;&amp; (!wallbounce) &amp;&amp; (!ladder) &amp;&amp; (!climbledge)//and not climb ledge
    {
    if(firing) 
        {
        if(Key_Down) //JUMP SHOOT DOWN
            { 
            if(Key_Left) || (Key_Right)
                {     
                   sprite_index = spr_Old_Olivia_Diagnal_Shoot_Split;
                   image_speed=.5*global.game_speed;
                   
                   
                   if (look!=7)
                        {
                        if(look!=5)
                            {image_index=0;}
                        }
                   
                   if(Key_Left) look=7;
                   if(Key_Right) look=5;
                   
                   if (image_index&gt;12) {image_index=7;}   
                }
            else
            {
                  
                sprite_index=spr_Old_Olivia_Shoot_Down_Split;
                image_speed=.5*global.game_speed;
                look=6;
                
                if (image_index&gt;12) {image_index=7;}  
            }
            }//End Key_Down
            else if(Key_Up)
            {
             if(Key_Left) || (Key_Right)
                {     
                   sprite_index = spr_Old_Olivia_Diagnal_Shoot_Split_Up;
                   image_speed=.5*global.game_speed;
                   
                   
                   if (look!=10)
                        {
                        if(look!=2)
                            {image_index=0;}
                        }
                   
                   if(Key_Left) look=10;
                   if(Key_Right) look=2;
                   
                   if (image_index&gt;12) {image_index=7;}   
                }
            else
            {
                  
                sprite_index=spr_Old_Olivia_Shoot_Up_Split;
                image_speed=.5*global.game_speed;
                look=12;
                
                if (image_index&gt;12) {image_index=7;}  
            }                                               
            }
            else //UP DOWN NEUTRAL
            {
           
             
            if (sprite_index!=spr_Old_Olivia_Jump_Shoot)
                {
                index_swap=image_index;
                sprite_index=spr_Old_Olivia_Jump_Shoot;
                image_speed=1*global.game_speed;
                //image_index=index_swap; 
                //image_index=22;
                image_index=0;
                //if (image_index&lt;20) image_index=20 //SNAP TO SHOOTING FRAME
                if(west_east) look=3; else look=9;
                }
                else
                {
                sprite_index=spr_Old_Olivia_Jump_Shoot;
                image_speed=1*global.game_speed;
                //if (image_index&lt;20) image_index=20 //SNAP TO SHOOTING FRAME
                
                }
            
            }        
        }
        
        
        if(!firing) 
        {
            if instance_exists(obj_Dragoon) 
                {
                    sprite_index=spr_Old_Olivia_Jump_Shoot;
                    image_speed=1*global.game_speed;
                   
                }
                else
                {
            if (!Melee)
            {
            if(djump==0)
            sprite_index=spr_Old_Olivia_Jump_A;
            if(djump==1)   
            sprite_index=spr_Old_Olivia_Jump_B;  
             
            image_speed=2*global.game_speed; 
            }
            
            
            if (jumpkick)
            {
            if (sprite_index!=spr_Old_Olivia_Jump_Kick) //Init Jump Kick
                {
                index_swap=image_index;
                sprite_index=spr_Old_Olivia_Jump_Kick;
                image_index=9;
                }
            
            if (image_index&lt;9) image_index=9;        
            sprite_index=spr_Old_Olivia_Jump_Kick;
            
            if (image_index&lt;13)
            image_speed=.5*global.game_speed;
            else
            image_speed=.25*global.game_speed;
            
            }//END jump kick
            
            
            if (jump_Swing!=0) //edit 10/26/15
            {      
            sprite_index=spr_Old_Olivia_JumpSwing;
            image_speed=1*global.game_speed;
            
            if (jump_Swing==1)
                {
                if image_index&gt;=25 Melee=false;
                }
                
             if (jump_Swing==2)
                {
                if (image_index&gt;=sprite_get_number(sprite_index)-1) Melee=false;
                }
            
            }//END jump swing
            
        
                }
        }//End NOT firing
        }
    
    
} //End (VSP &lt; 0)


//Warping Sprite--------------------------------------
if (warping)
{
    sprite_index= spr_Old_Olivia_Warp;
    image_speed=.5*global.game_speed;
}

//-----------------------------------------
/*
  _______    _          _    _ _ _   
 |__   __|  | |        | |  | (_) |  
    | | __ _| | _____  | |__| |_| |_ 
    | |/ _` | |/ / _ \ |  __  | | __|
    | | (_| |   &lt;  __/ | |  | | | |_ 
    |_|\__,_|_|\_\___| |_|  |_|_|\__|
                                     
                                     */
//Hit Sprite -----------------------------

if(hit) &amp;&amp; (!Melee) //edit !Melee
{
    skid=false;
    if (grounded) 
    sprite_index=spr_Old_Olivia_Hit;
    image_speed=1*global.game_speed;
    image_index=hit_index;
    hit_index+=image_speed;
    
                
                alarm[8]=10/global.game_speed; //Can_Melee CLOCK
    
    if(image_index&gt;=sprite_get_number(sprite_index)-1) 
        {
        hit=false;
        //can_Melee=true; //Instant Comeback edit 10/23/15
        sprite_index=spr_Old_Olivia_Idle;
        }

}
/* ---------------------------------------------------------
  __  __      _             ______          
 |  \/  |    | |           |  ____|         
 | \  / | ___| | ___  ___  | |__  __  _____ 
 | |\/| |/ _ \ |/ _ \/ _ \ |  __| \ \/ / _ \
 | |  | |  __/ |  __/  __/ | |____ &gt;  &lt;  __/
 |_|  |_|\___|_|\___|\___| |______/_/\_\___|
                                            
                                            */
//MELEE-----------------------------------------------------

if (Melee) 
       {
       Change_weapon=false;
       skid=0;
       turn=false;
       hit=false;//edit
       
       
            if (can_Melee) &amp;&amp; (jumpkick==false) &amp;&amp; (jump_Swing==0) //edit 10/26/15
            {            
            if (Swing==3) //START SPIN ATTACK
            {
            sprite_index=spr_Old_Olivia_Spin_Attack;
            image_speed=.5*global.game_speed;
            hsp*=.98; //was.98 //edit 10/26/15
            if (abs(hsp)&lt;1) hsp=0;
            
            if (round(image_index)==10)  
            {
            if (sound_count==0)
            {
            sound_count=1;
            audio_sound_pitch(snd_Mega_Sword,global.game_speed+random_range(.9,1.1));
            audio_play_sound(snd_Mega_Sword,10,false);
            }
            }
            if (round(image_index)==30)  
            {
            if (sound_count==1)
            {
            sound_count=2;
            audio_sound_pitch(snd_Mega_Sword,global.game_speed+random_range(.9,1.1));
            audio_play_sound(snd_Mega_Sword,10,false);
            }
            }
            
            
            //NOTE: 41 FRAMES TOTAL
            //if (image_index&gt;23) //was
            if (grounded)
            {
            if (image_index&gt;25)
                {
                accel=0; 
                Melee=false;
                can_Melee=false; 
                alarm[8]=20/global.game_speed;
                Swing=irandom_range(1,2);
                } 
             }
             else
             {
             if (image_index&gt;40)
                {
                accel=0; 
                Melee=false;
                can_Melee=false; 
                alarm[8]=20/global.game_speed;
                Swing=irandom_range(1,2);
                }
             }   
                
                
            } //END SPIN ATTACK ---
            else if (slide) //Slide Attack
            {
            sprite_index=spr_Old_Olivia_Slide;
            mask_index=spr_Olivia_Collide_duck;
            
            image_speed=.75*global.game_speed;
            hsp=18*image_xscale;
            //hsp=15*image_xscale;
             
            if (image_index&gt;=18) || (image_index&lt;1)
                {
                accel=0; 
                Melee=false;
                slide=false;
                hsp=0;
                can_Melee=false; 
                alarm[8]=15/global.game_speed; //was 20
                sprite_index=spr_Old_Olivia_Idle;
                image_index=0;
                }
            }
            else  //NORMAL MELEE
            {
            sprite_index=spr_Old_Olivia_Melee;
            image_speed=1*global.game_speed;
            tract=.72+(abs(accel)*.02);
            hsp*=tract;
            if (abs(hsp)&lt;1) hsp=0;
            vsp=0;

            if (swung_damage==false)//!instance_exists(obj_HERO_Melee)
            {
            if (round(image_index)&gt;=10) &amp;&amp; (round(image_index)&lt;=12) {with instance_create(x,y,obj_HERO_Melee){damage=12;} swung_damage=true;}  //edit 10/28/15
            if (round(image_index)&gt;=40) &amp;&amp; (round(image_index)&gt;=42) {with instance_create(x,y,obj_HERO_Melee){damage=12;} swung_damage=true;}   //edit 10/28/15
            }

            
            if  (Swing==1) //BACK HAND SWING --------------------------
            {    
              
                
                if (image_index&lt;14)
                {
                    image_speed=2*global.game_speed;
                }
                
                  if (image_index/*+image_speed*/&gt;=24) //edit round()
                    {
                    accel=0; 
                    Melee=false;
                    can_Melee=false; 
                    alarm[8]=2/global.game_speed; 
                    image_index=0;
                    }
                
                if (image_index&gt;=5) &amp;&amp; (swung==false) //edit deleted round(image_index)
                {
                audio_sound_pitch(snd_Mega_Sword,global.game_speed+random_range(.9,1.1));
                audio_play_sound(snd_Mega_Sword,10,false);
                swung=true;
                }
            }
            
            if (Swing==2) //FOREHAND HAND SWING --------------------------
            {
                                     
                if (image_index&lt;40)
                {
                    image_speed=2*global.game_speed;
                }  
                
                if (image_index/*+image_speed*/&gt;=54) || (image_index&lt;20) //edit round
                    {
                    accel=0; 
                    Melee=false;
                    can_Melee=false; 
                    alarm[8]=2/global.game_speed;
                    image_index=0;
                    }
                                                             
                if (image_index&gt;=35) &amp;&amp; (swung==false) //edit deleted round(image_index)
                {
                audio_sound_pitch(snd_Mega_Sword,global.game_speed+random_range(.9,1.1));
                audio_play_sound(snd_Mega_Sword,10,false);
                swung=true;
                }
            }
            
            
            if (image_index&gt;sprite_get_number(sprite_index)-1) || (image_index&lt;27) &amp;&amp; (image_index&gt;=24)
                {
                image_index=0;
                accel=0; 
                Melee=false;
                can_Melee=false; 
                alarm[8]=2/global.game_speed;
                }
            
            } //END NORMAL MELEE
            
            } //END NOT LANDING
            
            

            if (jumpkick==true) //JUMPKICKING -------------------------------
                {
                sprite_index=spr_Old_Olivia_Jump_Kick;
                image_speed=.5*global.game_speed;
                if (image_index&lt;9) image_index=9;
                
                wallpush=0;
                djump=0; //edit 031016
                
                    if (!instance_exists(obj_HERO_Melee)) &amp;&amp; (round(image_index)==12)
                    {
                        with instance_create(x,y,obj_HERO_Melee){damage=10;}
                    }
                    
                }
                else
                {
                        if (jump_Swing!=0) //JUMP SWINGING -------------------------------  //edit 10/26/15
                            {
                            sprite_index=spr_Old_Olivia_JumpSwing;
                            image_speed=1*global.game_speed; 
                                
                                   if (jump_Swing==1)
                                    {
                                    if image_index&gt;=25 Melee=false;
                                    }
                                    
                                 if (jump_Swing==2)
                                    {
                                    if (image_index&gt;=sprite_get_number(sprite_index)-1) Melee=false;
                                    }
                                    
                                    if (round(image_index)==5) || (round(image_index)==30) 
                                    {
                                    audio_sound_pitch(snd_Mega_Sword,global.game_speed+random_range(.9,1.1));
                                    audio_play_sound(snd_Mega_Sword,10,false);
                                    }
                                
                                if (round(image_index)==5) || (round(image_index)==30) 
                                {
                                    if (!instance_exists(obj_HERO_Melee)) 
                                    {
                                    with instance_create(x,y,obj_HERO_Melee){damage=10;}
                                    }
                                }
                                
                            }
                }
            
       }//END MELEE
/*  ------------------------------------------------------------- 
   _____                                       
  / ____|                                      
 | (___  _   _ _ __ ___  _ __ ___   ___  _ __  
  \___ \| | | | '_ ` _ \| '_ ` _ \ / _ \| '_ \ 
  ____) | |_| | | | | | | | | | | | (_) | | | |
 |_____/ \__,_|_| |_| |_|_| |_| |_|\___/|_| |_|
                                               
                                               */
//SUMMON PET -----------------------------------------------------

if (Key_Pet_R) || (Key_Pet_L)
{
if instance_exists(obj_warps) obj_warps.pet_alpha=.5;

   if (Key_Pet_R) 
     {    
     pet+=1;
     if(pet&gt;4) pet=0;  
         if (global.pets[pet]==0)
         {
            while (global.pets[pet]==0)
                {
                pet+=1;
                if(pet&gt;4) pet=0;
                }
         }
    } 
    
   if (Key_Pet_L) 
     {
     pet-=1;
     if(pet&lt;0) pet=4;  
         if (global.pets[pet]==0)
         {
            while (global.pets[pet]==0)
                {
                pet-=1;
                if(pet&lt;0) pet=4; 
                }
         }
    }    
}


if (Key_Left_Shoulder) // (Key_Right_Stick) - edit
{         
        if (no_pets) //CHECK AGAIN IF NOT PETS
        {
            for (i=0;i&lt;4;i+=1)
            {
                if (global.pets[i]!=0) no_pets=false;
            }
        }
        
    if (!no_pets) &amp;&amp; (money&gt;=5) &amp;&amp; (grounded)
    {
    Summon_Pet=true;
    Change_weapon=false
    
    sprite_index=spr_Old_Olivia_Change_Weapon;
    image_index=0;
    audio_play_sound(snd_gamestart, 10,false);
    
    //Pet Summon
    if(!summon)
    {
    instance_create(x-(42*image_xscale),y,obj_Pet_BEAM);
    }
    else
        {    
        with(obj_FuzzyTurtle){instance_destroy();}
        with(obj_GingerPup){instance_destroy();}
        with(obj_MeowCat){instance_destroy();}
        with(obj_Weasel){instance_destroy();}
        with(obj_Duck){instance_destroy();}
        summon=false;
        }
    }
    else
    {
    if (no_pets)|| (money&lt;5) 
        {
        if !audio_is_playing(snd_diggweed) audio_play_sound(snd_diggweed,15,false);
        }
    }
}  
    

/*  ------------------------------------------------------------------
   _____ _     _      _     _   ______          
  / ____| |   (_)    | |   | | |  ____|         
 | (___ | |__  _  ___| | __| | | |__  __  _____ 
  \___ \| '_ \| |/ _ \ |/ _` | |  __| \ \/ / _ \
  ____) | | | | |  __/ | (_| | | |____ &gt;  &lt;  __/
 |_____/|_| |_|_|\___|_|\__,_| |______/_/\_\___|
                                                
                                                */
//SHIELD -------------------------------------------------------------

if (Key_Right_Shoulder)
{
   
   if(not_grounded_count&gt;=5) //JUMP SHIELD -------------------- //was (!grounded) edit 12/13/15
   {
        if(!shield) &amp;&amp; !instance_exists(obj_ForceField)
        {
            if(shields&gt;=5) &amp;&amp; (sprite_index != spr_Old_Olivia_Ultimate) &amp;&amp; (shieldup==false)
            {
            shields-=5;
            alarm[5] = 800/global.game_speed;
            shield=true;
            shieldup=true;
            hit=false; //edit 812
            
            with instance_create(x,y,obj_Screen_Darken)
            {max_dark=.2; inc=.1; hold=100; depth=2;}
            
            instance_create(x,y-80-y_shoot_offset,obj_Sheild_header);
            sprite_index= spr_Old_Olivia_Ultimate;
            image_index=0;
            image_speed=.5*global.game_speed;    
            }
        }    
   }

/*-----------------------------------
  _____                      
 |  __ \                     
 | |__) |_ _ _ __ _ __ _   _ 
 |  ___/ _` | '__| '__| | | |
 | |  | (_| | |  | |  | |_| |
 |_|   \__,_|_|  |_|   \__, |
                        __/ |
                       |___/        */    
   //StandShield --------------------
   if (grounded) || (not_grounded_count&lt;5) //was (grounded) edit 12/13/15
   {
   if (shield==false) &amp;&amp; (shieldup==false) &amp;&amp; (shields&gt;=1) 
   {
   
   shield=true;  
   shields-=1;
   shieldstand=true;
   shieldup=false;
   
   //if (instance_exists(obj_ForceField)) with (obj_ForceField) {instance_destroy();}
   
   if !instance_exists(obj_ForceField)
   {
   with instance_create(x,y-y_shoot_offset,obj_ForceField)
   {
   image_index=14;
   type=1;
   hp=1;
   }
   }
   
   with (instance_create(x,y-y_shoot_offset,obj_FireFlare))
    {    
    image_yscale = 3;
    
    if (other.image_xscale==1)
    {
    image_angle = 0;
    image_xscale = 3;
    y=y-15;
    x=x+40;
    }
    else
    {
    y=y-15;
    x=x-30;
    image_angle=0;
    image_xscale = -3;
    }
    
    
    }
   instance_create(x+10,y-y_shoot_offset,obj_Aura_Ripple_stat_short);
   invinsible=true;

   alarm[5] = 25/global.game_speed;//SHIELD BLOCK DURATION
   
   sprite_index=spr_Old_Olivia_Shield_Block;
   image_index=0;
   }
   }
}

    if(ladder) 
    {
        if (ladder_climb&lt;=0)
        {
            sprite_index = spr_Old_Olivia_Ladder;
        }
        else
        {
            sprite_index = spr_Old_Olivia_Ladder_Climb;
        }
    }
    
}//END NOT CLIMB LEDGE AIR BORN
}//END IF NOT FLOAT


//Music Track Shuffle -----------------------------

//if (Key_Left_Trigger) {obj_DJ.track-=1;}
//if (Key_Right_Trigger) {obj_DJ.track+=1;}


/*-------------------------------------------------
  _____                     
 |  __ \                    
 | |__) |_ _ _   _ ___  ___ 
 |  ___/ _` | | | / __|/ _ \
 | |  | (_| | |_| \__ \  __/
 |_|   \__,_|\__,_|___/\___|            */
//-------------------------------------------------

if (pause_cooldown&gt;0) pause_cooldown-=1;

if (pause_push==true)
{
x-=10*sign(image_xscale);
wallpush=0;
wallslide=0;
grounded=0;
pause_push=false;
}

if (pause_ladder==true)
{
pause_ladder=false;
ladder_count=10;
Key_Up=true;
y+=4;
}

                            
if (Key_Pause) || keyboard_check_pressed(vk_enter)
{
if (wallslide&gt;0) 
    {
    pause_push=true;
    }
    
if (ladder==true)
    {
    pause_ladder=true;
    }
    
instance_create(x,y,obj_Pause);
pause_cooldown=30;
}



//Inventory
if (Key_Select)
{
if(Inventory)
    {
        Inventory=false;
    }
    else    
    {
        Inventory=true;
        instance_create(x+irandom_range(50,100)*image_xscale,y-y_shoot_offset-irandom_range(100,200),obj_Inventory);
     
    }
} 

/*--------------------------------------------------------------------------------
   _____ _                             __          __                          
  / ____| |                            \ \        / /                          
 | |    | |__   __ _ _ __   __ _  ___   \ \  /\  / /__  __ _ _ __   ___  _ __  
 | |    | '_ \ / _` | '_ \ / _` |/ _ \   \ \/  \/ / _ \/ _` | '_ \ / _ \| '_ \ 
 | |____| | | | (_| | | | | (_| |  __/    \  /\  /  __/ (_| | |_) | (_) | | | |
  \_____|_| |_|\__,_|_| |_|\__, |\___|     \/  \/ \___|\__,_| .__/ \___/|_| |_|
                            __/ |                           | |                
                           |___/                            |_|                */    
//Change Weapons------------------------------------------------------------------

if (firing) 
{
if (energy&lt;2.1) &amp;&amp; (weapontype!=0) &amp;&amp; (!Key_Weapon) &amp;&amp; !instance_exists(obj_Ray) //CHECK IF NEED TO SWAP WEAPON
{
    if (weapon_A==0)&amp;&amp;(weapon_B==0)&amp;&amp;(weapon_C==0)&amp;&amp;(weapon_D==0) //CHECK IF NOT WEAPONS
    {
        Key_Weapon=false;
    }
    else
    {
        
        if(weapon_A_energy&lt;2.1)&amp;&amp;(weapon_B_energy&lt;2.1)&amp;&amp;(weapon_B_energy&lt;2.1)&amp;&amp;(weapon_B_energy&lt;2.1) //CHECK IF NOT AMMO
        {
            Key_Weapon=false;
        }
        else
        {
            if (global.auto_swap) //edit 12/22/15
            {
            Key_Weapon=true;
            Key_Up=false; 
            }
            else
            {
            gamepad_set_vibration(0, 0, 0);
            }
        }
            audio_sound_pitch(snd_ammo_out,global.game_speed);
            if !audio_is_playing(snd_ammo_out)
            audio_play_sound(snd_ammo_out,10,false);
    }

}
}

if (Key_Weapon) 
{

if(!Key_Up) //IF NOT BULLET TIME
    { 

        if (grounded){if (!Key_Down){ if(!Melee){ 
            {
            sprite_index=spr_Old_Olivia_Tap_Gun;
            if (Change_weapon==false)
            {
            image_index=0;
            Change_weapon=true;
            }
            rewind=false;
            }}}}
            
            if (!Key_Down)
            {
            if !instance_exists(obj_Powerup_A_FULL) instance_create(x,y-y_shoot_offset,obj_Powerup_A_FULL);
            }
            
            audio_sound_pitch(snd_droid_check,1.2*global.game_speed);
            if !audio_is_playing(snd_droid_check)
            audio_play_sound(snd_droid_check,10,false);
            
        switch(weaponslot) //UPDATE LAST WEAPON ENERGY
            {
            case 1:
            weapon_A_energy = energy;
            break;
            case 2: 
            weapon_B_energy = energy;
            break;
            case 3:
            weapon_C_energy = energy;
            break;
            case 4:
            weapon_D_energy = energy;
            break;           
            }
            
        weaponslot = weaponslot + 1;  //GO TO NEXT SLOT                          
        if (weaponslot&gt;4) weaponslot=1;
        
        switch(weaponslot) //SYNC NEW WEAPON &amp; ENERGY
            {
            case 1:
            weapontype = weapon_A;
            energy = weapon_A_energy;
            if (weapon_A==0) empty_slot=true; else empty_slot=false;
            break;
            
            case 2:
            weapontype = weapon_B;
            energy = weapon_B_energy;
            if (weapon_B==0) empty_slot=true; else empty_slot=false;
            break;
            
            case 3:
            weapontype = weapon_C;
            energy = weapon_C_energy;
            if (weapon_C==0) empty_slot=true; else empty_slot=false;
            break;
            
            case 4:
            weapontype = weapon_D;
            energy = weapon_D_energy;
            if (weapon_D==0) empty_slot=true; else empty_slot=false;
            break;            
            }
            
            
            if (weapontype==0) //CANT SWITCH TO NON EXISTING WEAPONS
            {
            if (weaponslot&gt;1)
                {
                while (weapontype==0)
                {
                weaponslot-=1;
                if (weaponslot&gt;4) weaponslot=1;
                if (weaponslot==1) break; 
                }
                switch(weaponslot) //SYNC NEW WEAPON &amp; ENERGY
                {
                case 1:
                weapontype = weapon_A;
                energy = weapon_A_energy;
                if (weapon_A==0) empty_slot=true; else empty_slot=false;
                break;
                
                case 2:
                weapontype = weapon_B;
                energy = weapon_B_energy;
                if (weapon_B==0) empty_slot=true; else empty_slot=false;
                break;
                
                case 3:
                weapontype = weapon_C;
                energy = weapon_C_energy;
                if (weapon_C==0) empty_slot=true; else empty_slot=false;
                break;
                
                case 4:
                weapontype = weapon_D;
                energy = weapon_D_energy;
                if (weapon_D==0) empty_slot=true; else empty_slot=false;
                break;            
                }
                }     
            }
            
           
    }    
    else
    {
/* -----------------------------------------------------
  ____        _ _      _     _______ _                
 |  _ \      | | |    | |   |__   __(_)               
 | |_) |_   _| | | ___| |_     | |   _ _ __ ___   ___ 
 |  _ &lt;| | | | | |/ _ \ __|    | |  | | '_ ` _ \ / _ \
 | |_) | |_| | | |  __/ |_     | |  | | | | | | |  __/
 |____/ \__,_|_|_|\___|\__|    |_|  |_|_| |_| |_|\___|
 
//----------BULLET TIME--------------------------------- */
                                                      
    if (Bullet_Time&gt;=5) &amp;&amp; !instance_exists(obj_SIN)
    {
        if(master.target_speed&gt;=1) //SLOW TIME
        {
        master.target_speed=.5;
        if (global.blur_fx==0)  
            {
                bloom = .3;
                var_radial_blur_offset = 0.00005;
                bloom_up=true;
                bloom_max=.55;
                bloom_min=.00;
                bloom_inc=.005;
                blur_up=true;
                blur_max=0.015;
                blur_min=-0.005;
                blur_inc=0.00005;
                master_inc=500;
              if !instance_exists(obj_Bloom) instance_create(x,y,obj_Bloom)
            }
        instance_create(x+10,y-y_shoot_offset,obj_Aura_Ripple);
        }
        else
        {
        master.target_speed=1;
        }
    } //END IF ENOUGH BULLET TIME
    /*
      if  (!TubeIN)
        { 
        TubeIN=true;
        idle=9;
        idle_choice=2;
        global.CutScene=true;                  
        invinsible=true
        instance_create (x,y, obj_TubeIN);
        }  
    */
    }
}

if (global.game_speed==.5)
{
    if !instance_exists(obj_Inventory)
    {
    Bullet_Time-=.16; //was .1
    if (Bullet_Time&lt;=0) //Ran Out of Bullet Time
    {
        Bullet_Time=0;
        master.draw_clock=true;
        master.target_speed=1;
    }
    }
}
/*---------------------------------------------------------------------
  __  __      _             _____       _ _   
 |  \/  |    | |           |_   _|     (_) |  
 | \  / | ___| | ___  ___    | |  _ __  _| |_ 
 | |\/| |/ _ \ |/ _ \/ _ \   | | | '_ \| | __|
 | |  | |  __/ |  __/  __/  _| |_| | | | | |_ 
 |_|  |_|\___|_|\___|\___| |_____|_| |_|_|\__|
                                              
                                                                     */
//------------------------ MELEE ATTACK INITIALIZE ---------------------


if(Key_Melee){ 
skid=0;
if(!firing){ if(!ladder){if(!climbledge){ 

            if (jump_Swing!=0) //edit 10/26/15
            {
            
            if (jump_Swing==1) 
            {
                if (image_index&gt;=10)
                {
                jump_Swing=2;
                image_index=23; 
                }
            }
            else 
            {
                if (image_index&gt;=33)
                {
                jump_Swing=1;
                image_index=0; 
                }
            }
            
            }

if(!Melee){if(can_Melee){ if(!shieldup){


    
if(not_grounded_count&lt;16) 
{



if (Key_Up)  //START SPIN ATTACK [BURN ATTACK] ------------- [DOESNT HAVE TO BEEN CURRENTLY GROUNDED] (hence grounded count)
{
Dash=0;
hsp*=.8;
if (abs(hsp)&lt;1) hsp=0;
wallpush=0;
        
Melee=true;
Swing=3;
sound_count=0;
jumpkick=false;
jump_Swing=0; //edit 10/26/15

with instance_create(x+24*image_xscale, y+55,obj_dust_trail){image_xscale=-2*other.image_xscale;image_yscale=2;}
with instance_create(x-40*image_xscale, y+55,obj_dust_trail){image_xscale=2*other.image_xscale;image_yscale=2;}

audio_sound_pitch(snd_SpinAttack,global.game_speed);
audio_play_sound(snd_SpinAttack, 10, false);

sprite_index=spr_Old_Olivia_Spin_Attack;
image_speed=.5*global.game_speed;     
image_index=0;    

if (instance_exists(obj_HERO_Melee)) with (obj_HERO_Melee) {instance_destroy();}
with instance_create(x,y,obj_HERO_Melee){damage=5;}
         
         
} //END SPIN -------------------
else if (Key_Down) &amp;&amp; (grounded) //SLIDE START --------------- [MUST BE GROUNDED]
{
sprite_index=spr_Old_Olivia_Slide;
image_speed=.5*global.game_speed;     
image_index=1; 
jumpkick=false
jump_Swing=0; //edit 10/26/15
Swing=0;
slide=true;
Melee=true;
hsp=8*image_xscale;
audio_sound_pitch(snd_JumpKick,global.game_speed);
audio_play_sound(snd_JumpKick,10,false);

with instance_create(x+24*image_xscale, y+55,obj_dust_trail)
            {
            image_xscale=3*other.image_xscale;
            image_yscale=3;
            depth=other.depth+1;
            }

if (instance_exists(obj_HERO_Melee)) with (obj_HERO_Melee) {instance_destroy();}
with instance_create(x,y,obj_HERO_Melee){damage=10;}

                   
}
else// SLIDE END ------------------------
{
 //REGULAR MELEE SWING
    if (grounded)
    {
    hsp*=.8;
    if (abs(hsp)&lt;1) hsp=0;
        
        wallpush=0;
        swung=false;    
        swung_damage=false;
        Melee=true;
        jumpkick=false;
        jump_Swing=0; //edit 10/26/15
         
    if (instance_exists(obj_HERO_Melee)) with (obj_HERO_Melee) {instance_destroy();}
    
    sprite_index=spr_Old_Olivia_Melee;        
        if (Swing==1) 
        {
            Swing=2;
            image_index=27;
            if (land) image_index=37; //edit 10/23/15
            audio_sound_pitch(snd_djump,1*global.game_speed);
            audio_play_sound(snd_djump, 10, false);
         }
         else   
         {   
            Swing=1;
            image_index=0;
            if (land) image_index=8; //edit 10/23/15
            audio_sound_pitch(snd_djump,.9*global.game_speed);
            audio_play_sound(snd_djump, 10, false);
         } 
         
    } //End Groudned
}  //End NOT DASH
} //End Grounded count


if(grounded==false) &amp;&amp; (!Key_Down) &amp;&amp; (!Key_Up)  
    { //Jump KICK if not Grounded        
    
       
       if (wallpush&lt;=0) || place_meeting(x,y,par_flux_plat) //place_meeting(x,y,obj_Side_Plat) //NOT WHILE WALL SLIDING
       {
        if (Key_Right) || (Key_Left) //JUMPKICKING
        {
            Melee=true;
            jumpkick=true;
            djump=0; //edit 031016
            
            if (global.rumble) //edit 11/16/15
                {
                gamepad_set_vibration(.5, .5, 0);
                alarm[11]=12;
                }
            
            jump_Swing=0; //edit 10/26/15
            contact=0;
            Swing=0;
            djump=0;
            audio_sound_pitch(snd_JumpKick,.9*global.game_speed);
            audio_play_sound(snd_JumpKick,10,false);
            sprite_index=spr_Old_Olivia_Jump_Kick;
            image_speed=.5*global.game_speed;
            image_index=8;
            if (instance_exists(obj_HERO_Melee)) with (obj_HERO_Melee) {instance_destroy();}
        }
        else //JUMP SWINGING edit 10/26/15
        {
        
            Melee=true;
            jumpkick=false;
            Swing=0;
            contact=0;
            
            if (jump_Swing==0)
            {
            jump_Swing=irandom_range(1,2); //edit 10/26/15
            }
            else
            {
            if (jump_Swing==1) jump_Swing=2; else jump_Swing=1;
            }
            
            if (jump_Swing==1) image_index=0; else image_index=23;
            
            audio_sound_pitch(snd_JumpKick,.9*global.game_speed);
            audio_play_sound(snd_JumpKick,10,false);
            sprite_index=spr_Old_Olivia_JumpSwing;
            image_speed=1*global.game_speed;
            if (instance_exists(obj_HERO_Melee)) with (obj_HERO_Melee) {instance_destroy();}
       
        }       
       }    
    }//END GROUNDED IS FALSE

    
}  //End can_Melee    
}}}}}}/*END MELEE NEST --------------------------------------------------*/
/*
  ______ _      _             
 |  ____(_)    (_)            
 | |__   _ _ __ _ _ __   __ _ 
 |  __| | | '__| | '_ \ / _` |
 | |    | | |  | | | | | (_| |
 |_|    |_|_|  |_|_| |_|\__, |
                         __/ |
                        |___/  */   
//--------------- FIRING WEAPONS ---------------------------------------

if instance_exists(par_Activate)
{
Key_Kire=false;
Key_Firing=false;
firing=false;
}

if (firing){ 

if (!grounded)
{
    if (jumpkick==false) Melee=false; //edit 030416
}

if(!Melee){ if(!ladder){ if(!climbledge){ if(!shieldup)
{
hsp=0;
wallpush=0;

    switch(weapontype)
    {
    
    case 0: //NO WEAPON
    if !audio_is_playing(snd_ammo_out)
    audio_play_sound(snd_ammo_out,10,false);
    break;
            
    case 1: //NORMAL
    if (alarm[0] = -1) alarm[0] = 3/global.game_speed;
        
        if (alarm[0]&gt;=2) //RUMBLE 
            {
            if (global.rumble) 
                {if(energy&gt;.75) gamepad_set_vibration(0, .5, .5);}
            }
            else
            {
            gamepad_set_vibration(0, 0, 0);
            }
    damage=1.5;
    break;
    
    case 2: //FLAME 
    if (alarm[7] = -1) alarm[7] = 3/global.game_speed;
    
    if (alarm[7]&gt;=2) //RUMBLE 
            {
            if (global.rumble) 
                {if(energy&gt;1) gamepad_set_vibration(0, .25, .25);}
            }
            else
            {
                gamepad_set_vibration(0, 0, 0);
            }
       
    if(energy&gt;0.5)
        {
        energy=energy-.3;
        damage=.07; //was .55 edit 022616
        
        fire_y=y-25;
        fire_x=x;
        
        if (sprite_index==spr_Old_Olivia_Shoot_Down_Split)
        {      
            fire_x=x+5*image_xscale;
            fire_y=y-35;
        }

        if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split)
        {    
            fire_y=y+15;
            fire_x=x-15*image_xscale;
        }
        
        if (sprite_index==spr_Old_Olivia_Jump_Shoot)
        {    
            fire_x=x-15*image_xscale;
            fire_y=fire_y-8-vsp;
        }
        
        if (sprite_index==spr_Old_Olivia_Shoot_Up_Split)
        {    
            fire_x=x+19*image_xscale;
            fire_y=y-37;    
        }
            
        if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split_Up)
        {    
            fire_y=y-30;
            fire_x=x+22*image_xscale;
        }


        switch(look)
        {
        case 12:
        fire_y=fire_y-70;
        fire_x=fire_x-20*image_xscale;
        fire_direction = 90;
        break;
        
        case 3:
        fire_y=fire_y-28;
        fire_x=fire_x+45;
        fire_direction = 0; 
        break;
        
        case 9:
        if (grounded)
        {
        if (crouch)
            {
            fire_y=fire_y-28;
            fire_x=fire_x-50;
            }
            else
            {
            fire_y=fire_y-28;
            fire_x=fire_x-45;
            }
        }
        else
        {
        fire_y=fire_y-28;
        fire_x=fire_x-45;
        }
        fire_direction = 180; 
        break;
        
        case 2:
        if (grounded)
        {
        if (crouch)
            {
            fire_y=fire_y-56;
            fire_x=fire_x+22;
            }
            else
            {
            fire_y=fire_y-54;
            fire_x=fire_x+22;
            }
        }
        else
        {
            fire_y=fire_y-52;
            fire_x=fire_x+22;        
        }
        
        if (crouch)
        fire_direction = 33;
        else
        fire_direction = 45;
        break;
        
        case 10:
        if (grounded)
        {
            if (crouch)
            {
            fire_y=fire_y-56;
            fire_x=fire_x-22;
            }
            else
            {
            fire_y=fire_y-54;
            fire_x=fire_x-22;
            }
        }
        else
        {
        fire_y=fire_y-52;
        fire_x=fire_x-22;
        }
        
         if (crouch)
        fire_direction = 147;
        else
        fire_direction = 135;    
        break;
        
        case 6:
        if (grounded)
        {
            if (crouch)
            {
            fire_y=fire_y+62;
            if (image_xscale==1) 
            fire_x=fire_x-3*image_xscale;
            else
            fire_x=fire_x-1*image_xscale;
            }
            else
            {
            fire_y=fire_y+35;
            if (image_xscale==1)
            fire_x=fire_x-5*image_xscale;
            else
            fire_x=fire_x-2*image_xscale;
            }  
        }
        else
        {
            fire_y=fire_y+45;
            fire_x=fire_x-5*image_xscale;
        }
        fire_direction = 270;  
        
    break;
    
    case 5:
    
        if (grounded)
        {
            if (crouch)
            {
            fire_y=fire_y+15;
            fire_x=fire_x+80;
            }
            else
            {
            fire_y=fire_y+2;
            fire_x=fire_x+65;        
            }
        }
        else
        {
            fire_y=fire_y+27;
            fire_x=fire_x+77;
        }
    
    fire_direction = 315;
    break;
    
    case 7:
    if (grounded)
    {
        if (crouch)
        {
        fire_y=fire_y+15;
        fire_x=fire_x-80;
        }
        else
        {
        fire_y=fire_y+2;
        fire_x=fire_x-65;
        }
    }
    else
    {
        fire_y=fire_y+27;
        fire_x=fire_x-77;
    }
    fire_direction = 225;
    break;
        }
        
        if (crouch) 
        {
        fire_y+=45; //edit 10/28/15
        if (Key_Up) 
            {
            if !(Key_Left) &amp;&amp; !(Key_Right)
            fire_x+=15*image_xscale;
            }
        }
        
        
        if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split) //COMPENSATE
        {    
            fire_y=y-20;
            fire_x=x+15*image_xscale;
        }
        
        
        if (sprite_index!=spr_Old_Olivia_Jump_Shoot)
        {
        if(!grounded)
        {
        repeat(2)
            {
            with instance_create(fire_x+hsp,fire_y+vsp,obj_Flame_02) 
            {direction=other.fire_direction; image_angle=other.fire_direction;}
            }
        }
        else
        {
        repeat(2)
            {
            with instance_create(fire_x+hsp,fire_y+vsp,obj_Flame_02) 
            {direction=other.fire_direction; image_angle=other.fire_direction;}
            }
        }
        }
        else //JUMP SHOOTING
        {
            if(image_index&lt;=79)
            {
            fire_x=x+jump_shoot_x(round(image_index))*image_xscale+hsp-20*image_xscale;
            fire_y=y+jump_shoot_y(round(image_index))+vsp-25;
            
 
            repeat(2)
            {
            with instance_create(fire_x,fire_y,obj_Flame_02) 
                {
                direction=other.fire_direction; 
                image_angle=other.fire_direction;
                }
            }
                        
            }//END IN JUMP FRAME RANGE
        }//END JUMP SHOOTING
        
        audio_sound_pitch(snd_flame_loop,global.game_speed);
            
        if !audio_is_playing(snd_flame_loop) 
            audio_play_sound(snd_flame_loop, 10, false );
        }
        
        
        
    break;
    
    case 3: //HOMING
    if (alarm[3] = -1) alarm[3] = 8/global.game_speed;//was 8
    
    if (alarm[3]&gt;=3) //RUMBLE 
            {
            if (global.rumble) gamepad_set_vibration(0, .25, .25);
            }
            else
            {
            gamepad_set_vibration(0, 0, 0);
            }
            
    damage=2; //was 1.5
    break;

    case 4: //TRIPLE    
    if (alarm[6] = -1) alarm[6] = 4/global.game_speed; 
    
    if (alarm[6]&gt;=2) //RUMBLE 
            {
            if (global.rumble) gamepad_set_vibration(0, .5, .5);
            }
            else
            {
            gamepad_set_vibration(0, 0, 0);
            }
            
    if (spread&lt;5) spread=spread+.1;
    damage=1;
    break;

    case 5: //Dragoon
    if !instance_exists(obj_Dragoon)
        {
            if !instance_exists(obj_Dragoon_Blast)
            instance_create(x,y-y_shoot_offset-10,obj_Dragoon);
        }
    damage=7;  
    break;
    
    case 6: //BOMB 
    if !instance_exists(obj_Bomb) 
        {
        if (energy&gt;15)
        {
        energy-=10;
        instance_create(x,y-y_shoot_offset,obj_Bomb);
        }
        
        sprite_index=spr_Old_Olivia_Touch_Neck;
        finish_fire=false;
        neck_fire=0;
        image_index=0;
        //damage=.01;    
        }
    break;
    
    case 7: //Ray GUN-------------------------------------------------------
    
                                       
        if !instance_exists(obj_Ray)
        {
        ray_look=look;
        ray_west_east=west_east;
        if(energy&gt;0.5) &amp;&amp; (grounded) 
            {
            instance_create(x,y,obj_Ray);
            energy=energy-.4;
            damage=1;
            }
        }
        else
        {
            if(obj_Ray.image_yscale&lt;1) //ENABLE AIM ADJUST
            {
            ray_look=look;
            ray_west_east=west_east;
            }
        if (grounded) 
            {
            if (obj_Ray.s_speed&lt;=0) energy=energy-.4;
            }
        damage=1;
        }

          
        
    break; //END RAY GUN ----------------------    
    
    }//END OF SWITCH
}}}}}//End FIRING NEST ----------------------------------------------------
/*-------------------------------------------------------------------------
  __  __            _             
 |  \/  |          (_)            
 | \  / | _____   ___ _ __   __ _ 
 | |\/| |/ _ \ \ / / | '_ \ / _` |
 | |  | | (_) \ V /| | | | | (_| |
 |_|  |_|\___/ \_/ |_|_| |_|\__, |
                             __/ |
                            |___/  */      
//MOVING LEFT AND RIGHT ---------------------------------------------------
/*-----------------------
  _           __ _   
 | |         / _| |  
 | |     ___| |_| |_ 
 | |    / _ \  _| __|
 | |___|  __/ | | |_ 
 |______\___|_|  \__|
------------------------*/
                     
if (wallbounce==false) &amp;&amp; (jumpkick==false) //edit 12/22/15
{
if (Key_Left) 
{
   skid=0;
   if(!Key_Down) &amp;&amp; (!Key_Up) look = 9;
   
   if (hsp==0) || (west_east==1)
        {
        if(grounded) 
            {
            if (!firing) &amp;&amp; (sprite_index != spr_Old_Olivia_Push) &amp;&amp; (sprite_index != spr_Old_Olivia_Push_Low) &amp;&amp; (!Melee) &amp;&amp; (!climbledge)
            {
            with instance_create(x+12, y+55,obj_dust_trail)
            {
            image_xscale=-2;
            image_yscale=2;
            }
            }
            }
        }
   
   if(!firing)
   {
       if(!Melee)
       {
       spread=0;
       
       if(grounded) 
        {
        if(hsp &gt; -12.5) 
            {
            if (accel&gt;0) accel=0;//edit
            accel=accel-.2;
            }
            else
            {
            if(hsp &gt; -14) accel=accel-.05;
            }
        }
            hsp=-8.5+accel-(angle*.25); 
          
       
       }
   }
   
    if(!climbledge) {if (sprite_index!=spr_Old_Olivia_Touch_Neck) image_xscale = -1;}
    
    if (west_east==1)
    {
        if (sprite_index==spr_Old_Olivia_Idle) ||  (sprite_index==spr_Old_Olivia_Run)  
        {
        if (grounded_count&gt;10)
            {  
            sprite_index=spr_Old_Olivia_Turn;
            if (turn==false) image_index=1; 
            turn=true;
            }
        }
        
     if place_meeting(x,y,par_wall)
        {
        if !place_meeting(x,y,par_flux_plat)
            {            
             x-=1;
            }
        }
        
        
    }
    
    west_east=0; //SET TO WEST
    
}

/* -------------------------------
  _____  _       _     _   
 |  __ \(_)     | |   | |  
 | |__) |_  __ _| |__ | |_ 
 |  _  /| |/ _` | '_ \| __|
 | | \ \| | (_| | | | | |_ 
 |_|  \_\_|\__, |_| |_|\__|
            __/ |          
           |___/           
 -------------------------------*/

if(Key_Right)
{
   skid=0;
   
   if(!Key_Down) &amp;&amp; (!Key_Up) look = 3;
   
   if (hsp==0) || (west_east==0)
        {
        if(grounded) 
            {
            if (!firing) &amp;&amp; (sprite_index != spr_Old_Olivia_Push) &amp;&amp; (sprite_index != spr_Old_Olivia_Push_Low) &amp;&amp; (!Melee) &amp;&amp; (!climbledge)
            {
            with instance_create(x-12, y+55,obj_dust_trail)
            {
            image_xscale=2;
            image_yscale=2;
            }
            }
            }
        }
   
    if(!firing) 
    {
        if(!Melee)
        {
        if(grounded) 
            {
                if(hsp &lt; 12.5)
                {
                if (accel&lt;0) accel=0;//edit
                accel=accel+.2;
                }
                else
                {
                if(hsp &lt; 14) accel=accel+.05;
                }
            }

            hsp=8.5+accel-(angle*.25);

        }
    }
    if(!climbledge) {if (sprite_index!=spr_Old_Olivia_Touch_Neck) image_xscale = 1;}
        
    if (west_east==0)
    {
        if (sprite_index==spr_Old_Olivia_Idle) ||  (sprite_index==spr_Old_Olivia_Run) 
        {
            if (grounded_count&gt;10)
            {  
            sprite_index=spr_Old_Olivia_Turn;
            if (turn==false) image_index=0; 
            turn=true;
            
            }
        }
        
    if place_meeting(x,y,par_wall)
        {
            if !place_meeting(x,y,par_flux_plat)
            {
                x+=1;                
            }
        }
    }
    
    west_east=1; //SET TO EAST
    
}

}//END NOT WALLBOUNCE
/* -----------------------------------------------------------------
  _   _            _             _   _____                   _   
 | \ | |          | |           | | |_   _|                 | |  
 |  \| | ___ _   _| |_ _ __ __ _| |   | |  _ __  _ __  _   _| |_ 
 | . ` |/ _ \ | | | __| '__/ _` | |   | | | '_ \| '_ \| | | | __|
 | |\  |  __/ |_| | |_| | | (_| | |  _| |_| | | | |_) | |_| | |_ 
 |_| \_|\___|\__,_|\__|_|  \__,_|_| |_____|_| |_| .__/ \__,_|\__|
                                                | |              
                                                |_|             */ 
//NEUTRAL INPUT ----------------------------------------------------

if ((Key_Right &amp;&amp; Key_Left) or (!Key_Right &amp;&amp; !Key_Left))
{
    wallpush=0;    
    if !instance_exists(obj_Dragoon) turn=false;
    if (!slide) 
        {
        if (abs(hsp)&gt;=8) &amp;&amp; (not_grounded_count&lt;16)  &amp;&amp; (vsp&gt;=0)// (grounded) was place_meeting(x,y+10,par_wall)
            {
            if (skid==0)
            {
                if(!climbledge)
                {
                with instance_create(x+24*image_xscale, y+55,obj_dust_trail)
                {
                image_xscale=3*other.image_xscale;
                image_yscale=3;
                depth=other.depth+1;
                }
                }
            }  

            tract=.72+(abs(accel)*.025);
            skid=1;  
            sprite_index = spr_Old_Olivia_Skid;
            image_index=1;
            image_speed=.5*global.game_speed;                        
            }
            else
            {
            //if(!skid) hsp=0;
            }
        }
       

    if (grounded)//ADD FRICTION  ------------
    {
    hsp*=tract;
    if (abs(hsp)&lt;1) {hsp=0; accel=0;}
    }
    else
    {
    hsp*=.75;
    }
}

if (skid&gt;0)
{
if (skid==1) sprite_index = spr_Old_Olivia_Skid;


image_speed=.75*global.game_speed;
if (image_index&gt;=sprite_get_number(sprite_index)-1) skid=0;
}

//----------------------------------------------------------
/*
 __          __   _ _   ____                             
 \ \        / /  | | | |  _ \                            
  \ \  /\  / /_ _| | | | |_) | ___  _   _ _ __   ___ ___ 
   \ \/  \/ / _` | | | |  _ &lt; / _ \| | | | '_ \ / __/ _ \
    \  /\  / (_| | | | | |_) | (_) | |_| | | | | (_|  __/
     \/  \/ \__,_|_|_| |____/ \___/ \__,_|_| |_|\___\___|
                                                         
                                                         */
//WALLBOUNCE -----------------------------------------------
if (wallbounce)
{ 
 sprite_index=spr_Old_Olivia_Wall_Bounce; //Change to Wallbounce Sprite
 image_speed=1*global.game_speed;
    
    if(image_index&gt;=9) //Switch back to Jump Sprite When Finished
    {
    obj_camera_offset.Seek=true;
    wallbounce=false;
    canbounce=false;//edit
    sprite_index = spr_Old_Olivia_Jump_B;
    image_index=40;
    image_speed=2*global.game_speed;
    wallpush=0; //edit
    if !place_meeting(x-45*image_xscale,y,par_wall) x-=45*image_xscale;
    }        
    hsp=-5*image_xscale;        
}
//FALLING -------------------------------------
/*
  ______    _ _ _             
 |  ____|  | | (_)            
 | |__ __ _| | |_ _ __   __ _ 
 |  __/ _` | | | | '_ \ / _` |
 | | | (_| | | | | | | | (_| |
 |_|  \__,_|_|_|_|_| |_|\__, |
                         __/ |
                        |___/  */
//---------------------------------------------                        
if(vsp&gt;0)
{
if !place_free(x,y+vsp+32) //IF THE THERE IS FLUX PLAT BELOW 
{
    grounded=1;
} 
else  //Else if moving up
{
    grounded=0;
    skid=false;
    accel*=.97; //AIR RESISTENCE DAMPEN ACCEL
    
    
    if(!ladder)
    {      
      if (Melee)
      {
       if (jumpkick) || (jump_Swing!=0) //edit 10/26/15
            {
            }//End JumpKick
            else
            {
            if (Swing!=3) Melee=false; //If not Spin Attacking Down
            if(slide==true)
                {
                can_Melee=false; 
                alarm[8]=20/global.game_speed; 
                slide=false;
                } 
            }
      }
      else
      {
        if(firing) 
        {
        if (Key_Down)
        {
         if(Key_Left) or (Key_Right)
                {
                   sprite_index = spr_Old_Olivia_Diagnal_Shoot_Split;
                   image_speed=.5*global.game_speed;
                   if(Key_Left) look=7;
                   if(Key_Right) look=5;
                   if (image_index&gt;11) {image_index=7;}   
                }
            else
            {
             sprite_index=spr_Old_Olivia_Shoot_Down_Split;
             look=6;
             if (image_index&gt;11) {image_index=7;} 
            }
        }
        else if(Key_Up)
        {
        if(Key_Left) or (Key_Right)
                {
                   sprite_index = spr_Old_Olivia_Diagnal_Shoot_Split_Up;
                   image_speed=.5*global.game_speed;
                   if(Key_Left) look=10;
                   if(Key_Right) look=2;
                   if (image_index&gt;11) {image_index=7;}   
                }
            else
            {
             sprite_index=spr_Old_Olivia_Shoot_Up_Split;
             look=12;
             if (image_index&gt;11) {image_index=7;} 
            }        
        }
        else
        {
        sprite_index = spr_Old_Olivia_Jump_Shoot;
        image_speed=1*global.game_speed;
        if (image_index&lt;20) image_index=20 //SNAP TO SHOOTING FRAME
        if(west_east) look=3; else look=9;
        
        }
        
        } //END FIRIRING
        else
        {
        if(djump==0)
        sprite_index = spr_Old_Olivia_Jump_A;
        if(djump==1)   
        sprite_index = spr_Old_Olivia_Jump_B;
        
        if instance_exists(obj_Dragoon)  
        sprite_index = spr_Old_Olivia_Jump_Shoot;
        //FALLING
        
        if (image_index&lt;50) image_index=50; //SYNC FALLING FRAMES
        }
    }// END NOT MELEE  
    
    if (jumpkick)
            {
            sprite_index=spr_Old_Olivia_Jump_Kick;
            
            if (image_index&gt;10)
                {              
                    if place_meeting(x,y,par_Enemy) //BASH IF ENEMY CONTACT
                    {                                        
                    var temp = instance_position(x, y, par_Enemy);
                    if (temp==noone) temp=instance_nearest(x, y, par_Enemy);
                    
                    if (temp.type==1)
                    {       
                    if (contact==0)
                        {
                        audio_sound_gain(snd_Bash,1,0);
                        audio_sound_pitch(snd_Bash,global.game_speed);
                        audio_play_sound(snd_Bash,16,false);
                        if !place_meeting(x-50*image_xscale,y,par_wall) obj_HERO.x-=50*image_xscale;
                        hsp=0;
                        }
                        
                    if (contact&lt;2)
                     {
                     hsp=0;
                     contact+=1;
                     }
                     else
                     {
                        if (abs(hsp)&lt;30) //SPEED BACK UP
                        hsp+=15*image_xscale;
                      }
                                                                                                                                   
                    }
                        else
                        {
                            hsp=30*image_xscale;
                        }
                    
                    }
                    else //IF NO ENEMY CONTACT
                    {
                    hsp=30*image_xscale;
                    }
                }
                        
            }//End JumpKick 
    }
}
} //END FALLING ---------------------------------------------------------------
 
// DOUBLE JUMP &amp; WALL BOUNCE -------------------------------------------------- 
//-----------------------------------------------------------------------------
/*
       _                       _               _____       _ _   
      | |                     (_)             |_   _|     (_) |  
      | |_   _ _ __ ___  _ __  _ _ __   __ _    | |  _ __  _| |_ 
  _   | | | | | '_ ` _ \| '_ \| | '_ \ / _` |   | | | '_ \| | __|
 | |__| | |_| | | | | | | |_) | | | | | (_| |  _| |_| | | | | |_ 
  \____/ \__,_|_| |_| |_| .__/|_|_| |_|\__, | |_____|_| |_|_|\__|
                        | |             __/ |                    
                        |_|            |___/                       */
//-----------------------------------------------------------------------------  

if (Key_Jump) &amp;&amp;  (wallbounce==false) &amp;&amp; (slide==false) &amp;&amp; (jumpkick==false) //jump kick edit 031016 //slide check edit 021816
{
    land=false;
    
    if (ladder==true)
    {
     if instance_exists(obj_camera_offset)
         {
         obj_camera_offset.Seek=true;
         obj_camera_offset.speed=1; 
         obj_camera_offset.inc=1;  
         }
    ladder_count=0;
    ladder_climb=-1;
    image_speed=1*global.game_speed;//edit
    image_index=0;//edit
    djump=true; //edit 2/19/16
    }
    
    ladder=false;
    idle=0;
    
    if (Key_Down) &amp;&amp; place_meeting(x,y+1,par_flux_plat)
    {
    //DO NOTHING
    }
    else
    {
    if(!climbledge) //CONFIRM NOT CLIMBLING AND NOT DROPPING
    {
    
    if(canbounce) &amp;&amp; (wallpush&gt;=1) &amp;&amp; (!wallbounce) //WALL BOUNCE------------------
            {  
                audio_sound_pitch(snd_hitground,global.game_speed);
                audio_play_sound(snd_hitground, 10, false);
                audio_sound_pitch(snd_djump,global.game_speed);
                audio_play_sound(snd_djump, 10, false);
                image_index=0; //Resets Jump Cycle
                vsp = - (max_jump);
                canbounce=0;
                
                //djump=0; //edit 021216 QA recomendation 
                
                wallbounce=true;  
                wallbounces=wallbounces+1;
                
                sprite_index=spr_Old_Olivia_Wall_Bounce;
                image_index=0;
                image_speed=1*global.game_speed;      
            }
            
    if (grounded) // SINGLE JUMP ---------------------------
    {
        if (sprite_index != spr_Old_Olivia_Wall_Slide)
        {
        audio_sound_pitch(snd_jump,global.game_speed);
        audio_play_sound(snd_jump, 10, false);
        
        if place_meeting(x,y+1,par_Track) //SUPPLIMENT ACCEL FROM TRACK WHEN TAKING OFF
            {
                var track 
                track = instance_position(x,y,par_Track);
                if (track ==noone)
                track = instance_nearest(x,y,par_Track);    
                accel+=(track.image_speed*1.57*track.image_xscale);
            }
            
        vsp = - (max_jump+1);
        }
    }
    else // DOUBLE JUMP --------------------
    {                                                                  
            
            if(djump) // Check if Double Jump
            { 
            
            if (jump_Swing!=0) &amp;&amp; (Melee==true) 
                {                
                Melee=false; //EDIT 022616
                jump_Swing=0;
                }
                
            audio_sound_pitch(snd_djump,global.game_speed);
            audio_play_sound(snd_djump, 10, false);
            sprite_index=spr_Old_Olivia_Jump_A;
            image_index=0; //Resets Jump Cycle
            vsp = - (max_jump+3);
            canbounce=0;
            
            if (wallbounce==false) djump=0;  //edit 021216 QA recomendation originally no check for wallbounce
                                                                   
            }
    }//END JUMPS --------------------------------------------------------
            
    }//End Not Climb Ledge
    }//End Not Key Down
}
/* ---------------------------------------------
 __          __   _ _    _____ _ _     _      
 \ \        / /  | | |  / ____| (_)   | |     
  \ \  /\  / /_ _| | | | (___ | |_  __| | ___ 
   \ \/  \/ / _` | | |  \___ \| | |/ _` |/ _ \
    \  /\  / (_| | | |  ____) | | | (_| |  __/
     \/  \/ \__,_|_|_| |_____/|_|_|\__,_|\___|
                                              
                                              */
// WALL SLIDE ----------------------------------

if (wallpush&gt;1)
{
    if (vsp&gt;0) &amp;&amp; (wallbounce==false) 
    { 
        if position_meeting(x+28*image_xscale,y-84,par_wall) 
        {
        sprite_index = spr_Old_Olivia_Wall_Slide;
        wallslide+=1;
        
        if(!climbledge)
        {
        if (alarm[9]==-1) alarm[9]=3;//CREATE DUST
        }
        
        if((wallpush-1)*.5&gt;=sprite_get_number(spr_Old_Olivia_Wall_Slide)-1)
        {
            image_speed=0*global.game_speed;
            image_index=sprite_get_number(spr_Old_Olivia_Wall_Slide)-1;
        }
        else
        {
            image_index=(wallpush-1)*.5;
            image_speed=0*global.game_speed; 
        }
        
        }else{wallslide=0;}//END IF MEETING CHECK
    }else{wallslide=0;}
}else{wallslide=0;}
/*---------------------------------------------------------------------
   _____                 _ _         
  / ____|               (_) |        
 | |  __ _ __ __ ___   ___| |_ _   _ 
 | | |_ | '__/ _` \ \ / / | __| | | |
 | |__| | | | (_| |\ V /| | |_| |_| |
  \_____|_|  \__,_| \_/ |_|\__|\__, |
                                __/ |
                               |___/  */
//ADD GRAVITY ---------------------------------------------------------


    if (sprite_index==spr_Old_Olivia_Shoot_Down_Split) || (sprite_index==spr_Old_Olivia_Shoot_Up_Split) || (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split) || (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split_Up) || (sprite_index==spr_Old_Olivia_Jump_Shoot) 
    {  
  
        if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split_Up) //SIDE SPLIT UP
            {
            
            if(energy&gt;1)
            {
            switch(weapontype)
             {
                case 0: //NONE
                //hsp = hsp - (2*image_xscale);
                vsp = vsp + (grav * 1)*global.game_speed;
                break;
                
                case 1: //NORMAL SHOT
                hsp = hsp - (2*image_xscale);
                if (alarm[0]==0) {hsp = hsp -4*image_xscale;}
                if (alarm[0]==2) {hsp = hsp +4*image_xscale;}                 
                vsp = vsp + (grav *  1)*global.game_speed;
                break;
                
                case 2: //FLAME
                hsp = hsp - (2.5*image_xscale);
                if (alarm[7]==0) {hsp = hsp -4*image_xscale;}
                if (alarm[7]==2) {hsp = hsp +4*image_xscale;} 
                vsp = vsp + (grav *  1)*global.game_speed;
                break;
                
                case 3: //Homing
                hsp = hsp - (2*image_xscale);
                if (alarm[3]==0) {hsp = hsp -4*image_xscale;} 
                if (alarm[3]==2) {hsp = hsp +4*image_xscale;}                 
                vsp = vsp + (grav *  1)*global.game_speed;
                break;
                
                case 4://Triple
                hsp = hsp - (2*image_xscale);
                if (alarm[6]==0) {hsp = hsp -4*image_xscale;}
                if (alarm[6]==2) {hsp = hsp +4*image_xscale;} 
                vsp = vsp + (grav *  1)*global.game_speed;
                break;
                
                case 5://Dragoon
                //hsp = hsp - (2*image_xscale);
                vsp = vsp + (grav * 1)*global.game_speed;
                break;
                
                case 6://Bomb
                //hsp = hsp - (2*image_xscale);
                vsp = vsp + (grav * 1)*global.game_speed;
                break;
                
                case 7: //Ray GUN
                //hsp = hsp - (2*image_xscale);
                vsp = vsp + (grav * 1)*global.game_speed;
                break;
                
             }
             }else{vsp = vsp + grav*global.game_speed;}             
            }
            
        if (sprite_index==spr_Old_Olivia_Diagnal_Shoot_Split) //SIDE SPLIT DOWN
            {
            
            if(energy&gt;1)
            {
            switch(weapontype)
             {
                case 0: //NONE
                //hsp = hsp - (2*image_xscale);
                vsp = vsp + (grav * 1)*global.game_speed;
                break;
                
                case 1: //NORMAL SHOT
                hsp = hsp - (2*image_xscale);
                if (alarm[0]==0) {hsp = hsp -4*image_xscale;}
                if (alarm[0]==2) {hsp = hsp +4*image_xscale;}                
                if (vsp&gt;0) {vsp = vsp + (grav * 0.4)*global.game_speed;} else {vsp = vsp + grav*global.game_speed;}
                break;
                
                case 2: //FLAME
                hsp = hsp - (2.5*image_xscale);
                if (alarm[7]==0) {hsp = hsp -4*image_xscale;}
                if (alarm[7]==2) {hsp = hsp +4*image_xscale;} 
                if (vsp&gt;0) {vsp = vsp + (grav * 0.4)*global.game_speed;} else {vsp = vsp + grav*global.game_speed;}
                break;
                
                case 3: //Homing
                hsp = hsp - (2*image_xscale);
                if (alarm[3]==0) {hsp = hsp -4*image_xscale;}
                if (alarm[3]==2) {hsp = hsp +4*image_xscale;} 
                
                if (vsp&gt;0) {vsp = vsp + (grav * 0.4)*global.game_speed;} else {vsp = vsp + grav*global.game_speed;}
                break;
                
                case 4://Triple
                hsp = hsp - (2*image_xscale);
                if (alarm[6]==0) {hsp = hsp -4*image_xscale;}
                if (alarm[6]==2) {hsp = hsp +4*image_xscale;}
                if (vsp&gt;0) {vsp = vsp + (grav * 0.4)*global.game_speed;} else {vsp = vsp + grav*global.game_speed;}
                break;
                
                case 5://Dragoon
                //hsp = hsp - (2*image_xscale);
                vsp = vsp + (grav * 1)*global.game_speed;
                break;
                
                case 6://Bomb
                //hsp = hsp - (2*image_xscale);
                vsp = vsp + (grav * 1)*global.game_speed;
                break;
                
                case 7: //Ray GUN
                //hsp = hsp - (2*image_xscale);
                vsp = vsp + (grav * 1)*global.game_speed;
                break;
                
             }
             }else{vsp = vsp + grav*global.game_speed;}             
            }
            
        if  (sprite_index==spr_Old_Olivia_Shoot_Up_Split)  //SHOOT UP ONLY ------------------
            {
            
            if(energy&gt;1)
            {
            switch(weapontype)
             {
                case 0: //NONE
                vsp = vsp + (grav)*global.game_speed;
                break;
                
                case 1: //NORMAL SHOT
                vsp = vsp + (grav*1.1)*global.game_speed;                
                if (alarm[0]==0) {vsp = vsp -4;} 
                if (alarm[0]==2) {vsp = vsp +4;} 
                break;
                
                case 2: //FLAME
                vsp = vsp + (grav*1.1)*global.game_speed;
                if (alarm[7]==0) {vsp = vsp -4;} 
                if (alarm[7]==2) {vsp = vsp +4;} 
                break;
                
                case 3: //Homing
                vsp = vsp + (grav*1.1)*global.game_speed;
                
                if (alarm[3]==0) {vsp = vsp -4;} 
                if (alarm[3]==2) {vsp = vsp +4;} 
                
                break;
                
                case 4://Triple
                vsp = vsp + (grav*1.1)*global.game_speed;
               
                if (alarm[6]==0) {vsp = vsp -4;} 
                if (alarm[6]==2) {vsp = vsp +4;}  
                break;
                
                case 5://Dragoon
                vsp = vsp + (grav)*global.game_speed;
                break;
                
                case 6://Bomb
                vsp = vsp + (grav)*global.game_speed;
                break;
                
                case 7: //Ray GUN
                vsp = vsp + (grav)*global.game_speed;
                break;
             }
             }else{vsp = vsp + (grav)*global.game_speed;}
             
            }
            
                
        if  (sprite_index==spr_Old_Olivia_Shoot_Down_Split)  //DOWN SPLIT ------------------
            {
            
            if(energy&gt;1)
            {
            switch(weapontype)
             {
                case 0: //NONE
                vsp = vsp + (grav*1)*global.game_speed;
                break;
                
                case 1: //NORMAL SHOT
                vsp = (vsp + grav)*0.5*global.game_speed;                
                if (alarm[0]==0) {vsp = vsp -4;} 
                if (alarm[0]==2) {vsp = vsp +4;} 
                break;
                
                case 2: //FLAME
                vsp = (vsp + grav)*0.4*global.game_speed;
                if (alarm[7]==0) {vsp = vsp -4;} 
                if (alarm[7]==2) {vsp = vsp +4;} 
                break;
                
                case 3: //Homing
                vsp = (vsp + grav)*0.54*global.game_speed;
                
                if (alarm[3]==0) {vsp = vsp -4;} 
                if (alarm[3]==2) {vsp = vsp +4;} 
                
                break;
                
                case 4://Triple
                vsp = (vsp + grav)*0.45*global.game_speed;
               
                if (alarm[6]==0) {vsp = vsp -4;} 
                if (alarm[6]==2) {vsp = vsp +4;}  
                break;
                
                case 5://Dragoon
                vsp = vsp + (grav*1)*global.game_speed;
                break;
                
                case 6://Bomb
                vsp = vsp + (grav*1)*global.game_speed;
                break;
                
                case 7: //Ray GUN
                vsp = vsp + (grav*1)*global.game_speed;
                break;
             }
             }else{vsp = vsp + grav*global.game_speed;}
             
            }
            
        if (sprite_index==spr_Old_Olivia_Jump_Shoot) //JUMP SHOOT -------------------------
            {
             if(energy&gt;1)  //edit 031616
             {
             switch(weapontype)
             {
                case 0: //NONE
                vsp = vsp + grav*global.game_speed;
                break;
                
                case 1: //NORMAL SHOT
                hsp = hsp - (1.5*abs(alarm[0])*image_xscale)*global.game_speed;
                if (vsp&gt;0) { vsp = vsp + (grav * 0.5)*global.game_speed;} else {vsp = vsp + grav*global.game_speed;}
                break;
                
                case 2: //FLAME
                hsp = hsp - (2*abs(alarm[7])*image_xscale)*global.game_speed;
                if (vsp&gt;0) {vsp = vsp + (grav * .45) *global.game_speed;} else {vsp = vsp + grav*global.game_speed;}
                break;
                
                case 3: //Homing
                hsp = hsp - (abs(alarm[3])*image_xscale)*global.game_speed;
                if (vsp&gt;0){ vsp = vsp + (grav * 0.5)*global.game_speed;} else {vsp = vsp + grav*global.game_speed;}
                break;
                
                case 4://Triple
                hsp = hsp - (1.5*abs(alarm[6])*image_xscale)*global.game_speed;
                if (vsp&gt;0) {vsp = vsp + (grav * 0.5)*global.game_speed;} else {vsp = vsp + grav*global.game_speed;}
                break;
                
                case 5://Dragoon
                vsp = vsp + grav*global.game_speed;
                break;
                
                case 6://Bomb
                vsp = vsp + grav*global.game_speed;
                break;
                
                case 7: //Ray Gun
                //hsp = hsp - (image_xscale);
                vsp = vsp + grav*global.game_speed;
                break;
             }
             }else{vsp = vsp + grav*global.game_speed;}
             
            }
                    
    }
    else
    {        
        
        if  (sprite_index==spr_Old_Olivia_Wall_Slide) &amp;&amp; (vsp&gt;0) //IF WALL SLIDING---------------------
        {
           //if (wallslide&lt;50)
           //vsp = vsp + .001*global.game_speed; //FIRST GRAB TRACTION
           //else
           vsp = vsp + .05*global.game_speed; //SLIDE TRACTION
        }
         else //NORMAL GRAVITY --------------------------------
        {
            if(vsp&lt;30) //edit
            vsp = vsp + grav*global.game_speed;       
        }
    }
   //if  (sprite_index!=spr_Old_Olivia_Wall_Slide)
   //{       
   if (vsp&lt;0){if (vsp&gt;-1.5) vsp=1.5;} 
   //}
//----------- FALL THROUGH PLATFORM--------------------------------------------------
/*
  ______    _ _   _______ _                           _     
 |  ____|  | | | |__   __| |                         | |    
 | |__ __ _| | |    | |  | |__  _ __ ___  _   _  __ _| |__  
 |  __/ _` | | |    | |  | '_ \| '__/ _ \| | | |/ _` | '_ \ 
 | | | (_| | | |    | |  | | | | | | (_) | |_| | (_| | | | |
 |_|  \__,_|_|_|    |_|  |_| |_|_|  \___/ \__,_|\__, |_| |_|
                                                 __/ |      
                                                |___/       */
//------------------------------------------------------------------------------------
                                                
if (Key_Jump) 
{
if (Key_Down)
 {
  if (grounded)
  {
  
  if place_meeting(x+hsp,y+vsp,par_flux_plat)
  {
   par_flux_plat.fall_through=true
   par_flux_plat.solid=0; 
  }
  
  
  }
 }
}
/*------------------------------------------------------------------
 __          __              _             
 \ \        / /             (_)            
  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _ 
   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
    \  /\  / (_| | |  | |_) | | | | | (_| |
     \/  \/ \__,_|_|  | .__/|_|_| |_|\__, |
                      | |             __/ |
                      |_|            |___/ */
//----------- WARP --------------------------------------------------
//WARPING WITH TRIGGERS
if (Key_Left_Trigger) || (Key_Right_Trigger) 
{
  if (warping == false) &amp;&amp; (!climbledge) &amp;&amp; (sprite_index != spr_Old_Olivia_Ultimate)//and not climb ledge
    {
    if (warps&gt;0)
    { 
    warping = true; 
    jumpkick=false;
    jump_Swing=0;
    warpdist = 10/global.game_speed;
    alarm[11] = 10/global.game_speed;
    warps=warps-1;
    audio_sound_pitch(snd_warp,global.game_speed);
    audio_play_sound(snd_warp, 10, false); 
    if (Key_Left_Trigger) {image_xscale = -1; west_east=0; aim=9;}
    if (Key_Right_Trigger) {image_xscale = 1; west_east=1; aim=3;}   
    }
    }
 }

//Recharge Warps

//if (alarm[2] = -1) alarm[2] = 320/global.game_speed;
warp_charge+=1;
shield_charge+=1;

if (warp_charge&gt;=360) //was 320
{
    if (warps &lt; 5) warps=warps+1;
    warp_charge=0;
}

if (shield_charge&gt;=360) //was 320
{
    if (shields &lt; 5) shields=shields+1;    
    shield_charge=0;
}


//Recharge Energey
if (alarm[4] = -1) alarm[4] = round(recharge*global.difficulty)/global.game_speed;

if(warping==true)
{
    
    
    invinsible=true;
    if !instance_exists(obj_WarpBlur) instance_create(x,y,obj_WarpBlur);
    if(west_east) hsp=64;
    if(!west_east)hsp=-64;
    
    if (global.rumble)  
        {
        if (sign(hsp)==1)
            gamepad_set_vibration(0, .25, 1);
            else
            gamepad_set_vibration(0, 1, .25);
        }
    
    warpdist=warpdist-1;
    vsp=0;
    Melee=false;

    if(warpdist&lt;0) 
    {
    warping=false;
    if(!shield) invinsible=false;
    if instance_exists(obj_WarpBlur) with(obj_WarpBlur){instance_destroy();}
    sprite_index=spr_Old_Olivia_Jump_B;
    image_speed=2*global.game_speed;
    image_index=50;
    gamepad_set_vibration(0, 0, 0);
    
    if (jumpkick)
    {
    sprite_index=spr_Old_Olivia_Jump_Kick;
    image_index=12;
    Melee=true;
    }
    
    
 
    }   
}

/* -------------------------------------------------------------------------------
  _               _     _           
 | |             | |   | |          
 | |     __ _  __| | __| | ___ _ __ 
 | |    / _` |/ _` |/ _` |/ _ \ '__|
 | |___| (_| | (_| | (_| |  __/ |   
 |______\__,_|\__,_|\__,_|\___|_|   
                                    
                                    */
//Ladder --------------------------------------------------------------------------



if (Key_Up || Key_Down) //INITIALIZE LADDER
{
if (!ladder) 
    {
    if (!warping) &amp;&amp; (!Melee)
    {
    
    if place_meeting(x,y,par_Ladder) &amp;&amp; (Key_Up)
    {
    ladder_count+=1*global.game_speed;
    }
    
    if position_meeting(x,bbox_top+20,par_Ladder) &amp;&amp; (Key_Up) 
    {
    if (ladder_count&gt;=10)
        {       
        ladder = true;
        posx = instance_place(x, y, par_Ladder).x;
        ladder_count=0;
        x = posx;   
        sprite_index=spr_Old_Olivia_Ladder;
        image_index=0;  
        }   
    }
    
     //IF GOING DOWN LADDER ---------------------------------------------------------------
    
        if place_meeting(x,y+10,par_Ladder) &amp;&amp; (Key_Down) &amp;&amp; (grounded) &amp;&amp; (hsp==0)
            {
            ladder_count+=1*global.game_speed;
            
            if (ladder_count&gt;=10)
                {
                ladder = true;
                posx = instance_place(x, y+10, par_Ladder).x;
                ladder_count=0;
                x = posx;
                ladder_climb=30;
                sprite_index=spr_Old_Olivia_Ladder_Climb;
                image_index=30;
                ladder_y=obj_camera_offset.y;
                y+=130;
                
                if instance_exists(obj_camera_offset) //OFFSET CAMERA ------------------------------
                    {
                        obj_camera_offset.Seek=false; //dont follow character
                        obj_camera_offset.offset_y=-130;
                        //obj_camera_offset.offset_x=x-obj_camera_offset.x;

                    }
                    
                }

            }//END PLACE MEETING LADDER ON BBOX BOTTOM
        
    }//END NOT WARPING OR MELEE
    }//END NOT LADDER
}//END KEY RIGHT or KEY LEFT
else
{
ladder_count=0;
}

if (ladder) //EXECUTE LADDER -----------------------------------------------------------------------
{
    vsp=0;
    hsp=0;
    x = posx;
    

    if (Key_Up)   
        {
        if position_meeting(x,bbox_top+20,par_Ladder)
            {
            vsp=-4; 
            image_speed=1*global.game_speed;
            }
        }
    else
    if (Key_Down) &amp;&amp; (ladder_climb&lt;0) 
        {
        vsp=4; 
        image_speed=-1*global.game_speed;
        }
    else 
        {
        image_speed=0;
        }

    
    
    
    if position_meeting(x,bbox_top+18/*+vsp*/,obj_platform_128x4) || position_meeting(x,bbox_top+21/*+vsp*/,obj_platform_128x4) //|| position_meeting(x,bbox_top+24/*+vsp*/,obj_platform_128x4)
        {
         if (Key_Up)  
            {
            //audio_play_sound(snd_die,10,false);
            if (ladder_climb&lt;30)
            { 
            
             if (ladder_climb&gt;-1)
             {
                 if instance_exists(obj_camera_offset)
                    {
                        {
                        obj_camera_offset.Seek=false;
                        obj_camera_offset.offset_y-=4.2;
                        }
                    }
             }
             }
             
             
             ladder_climb+=1;
             image_index=ladder_climb;
             vsp=0;
             
             if (ladder_climb&gt;=30)
                {
                while place_meeting(x,y,par_wall) y-=1;
                
                    if instance_exists(obj_camera_offset)
                    {
                        obj_camera_offset.Seek=true;
                        obj_camera_offset.speed=1; 
                        obj_camera_offset.inc=1;  
                        obj_camera_offset.offset_y+=130;
                    }
                
                if !place_meeting(x+15*(image_xscale),y,par_wall) x+=15*(image_xscale)
                sprite_index=spr_Old_Olivia_Idle;
                image_index=0;
                ladder=false;
                }            
                
            }
            
         if (Key_Down)
            {
                if(ladder_climb&gt;=0) 
                {
                ladder_climb-=1;
                image_index=ladder_climb;
                vsp=0;
                
                if (ladder_climb&lt;30)
                {
                if instance_exists(obj_camera_offset)
                        {
                            {
                            obj_camera_offset.Seek=false;
                            obj_camera_offset.offset_y+=4.2;
                            }
                        }                
                }
                }
                
                if (ladder_climb&lt;=-1)
                {
                    ladder_climb=-1;
                    sprite_index=spr_Old_Olivia_Ladder;
                    image_speed=-1*global.game_speed;
                    vsp=4;
                }
                
            }
        }
        
   
    if (Key_Jump) ||  !place_meeting(x,y,par_Ladder) //IF NOT ON OR JUMP OFF LADDER
        {
        ladder = false;
        ladder_count=0;
        image_speed=1*global.game_speed;//edit
        image_index=0;//edit
        
         if instance_exists(obj_camera_offset)
         {
         obj_camera_offset.Seek=true;
         obj_camera_offset.speed=1; 
         obj_camera_offset.inc=1;  
         }
        }
        
    if place_meeting(bbox_left,y+10,par_wall)// || position_meeting(bbox_right,y+4,par_wall) //IF COMING INTO CONTACT WITH GROUND
        {
             if (ladder_climb&lt;=-1)&amp;&amp; (vsp&gt;=0)// &amp;&amp;(Key_Down) //&amp;&amp; (vsp&gt;0)
             {
             if !place_meeting(bbox_left,y+10,par_flux_plat)
             {
             ladder = false;
             vsp=0;
             ladder_count=0;
            
            
             if instance_exists(obj_camera_offset)
             {
             obj_camera_offset.Seek=true;
             obj_camera_offset.speed=1; 
             obj_camera_offset.inc=1;  
             }
            } 
            }
        }
}
else
{
    ladder_climb=-1;
}



/*---------------------------------------------------------
   _____ _     _      _     _ 
  / ____| |   (_)    | |   | |
 | (___ | |__  _  ___| | __| |
  \___ \| '_ \| |/ _ \ |/ _` |
  ____) | | | | |  __/ | (_| |
 |_____/|_| |_|_|\___|_|\__,_|
                              */
                              
//SHIELD ULTIMATE ------------------------------------------
if (shieldup)
{    
    sprite_index=spr_Old_Olivia_Ultimate;
    image_speed=.5*global.game_speed;
    //invinsible=true; 
    hsp=0; vsp=0;
    hit=false;//edit 812
    
    if (round(image_index)&gt;=10) 
        {                
        //if (instance_exists(obj_ForceField)) with (obj_ForceField) {instance_destroy();}                
        if !instance_exists(obj_ForceField)
            {
            with instance_create(x,y-y_shoot_offset,obj_ForceField){hp=5; type=2;}
            image_index=11;
            }
        }
        
    if (round(image_index)==18) 
        {
            if !instance_exists(obj_Aura_Ripple_stat)
            instance_create(x+10,y,obj_Aura_Ripple_stat);          
        }
        
    if (image_index&gt;=30) shieldup=false;
}

/*--------------------------------------------------------------------------------------
   _____ _ _           _       _              _            
  / ____| (_)         | |     | |            | |           
 | |    | |_ _ __ ___ | |__   | |     ___  __| | __ _  ___ 
 | |    | | | '_ ` _ \| '_ \  | |    / _ \/ _` |/ _` |/ _ \
 | |____| | | | | | | | |_) | | |___|  __/ (_| | (_| |  __/
  \_____|_|_|_| |_| |_|_.__/  |______\___|\__,_|\__, |\___|
                                                 __/ |     
                                                |___/      */ 
//CLIMB LEDGE ----------------------------------------------------------------------------

if(wallpush&gt;=1)  //CHECK &amp; INTIALIZE LEDGE CLIMB
{    
    if(!climbledge)
    {
    if !place_meeting(x+(image_xscale*10),bbox_top, par_wall)
        { 
        if place_meeting(x+(image_xscale*10),bbox_top+8, par_wall) 
        {
        if !place_meeting(x+(image_xscale*20),bbox_top, par_wall) //Extra Check
        {
        if(!grounded) &amp;&amp; (!ladder) &amp;&amp; !place_meeting(x+(image_xscale*10),y,par_Track)
        {
        
        if !instance_exists(obj_PearStore_inside)
        {
        obj_camera_offset.Focus=true; //edit 12/28/15 
        last_cam_x=obj_camera_offset.x;
        last_cam_y=obj_camera_offset.y;
        }
        
        x=x+(image_xscale*10);
        while (!place_meeting(x+image_xscale*10,bbox_top-25,par_wall)) y=y+1;   
         
        if !instance_exists(obj_PearStore_inside)
        {
        obj_camera_offset.x=last_cam_x;      
        obj_camera_offset.y=last_cam_y; 
        
        obj_camera_offset.Focus_x=x+(43)*image_xscale;
        obj_camera_offset.Focus_y=y-110;   
        }                 
            
        ledge_x=x;
        ledge_y=y;
        
            sprite_index = spr_Old_Olivia_Climb; 
            image_speed=.65*global.game_speed;
            image_index=0;
                       
            climbledge=true;  
              
        }
        }
        } 
        }
    } //End Not Climb Ledge
}//End Wallpush Check



if(climbledge) //EXECUTE LEDGE CLIMB
{
    sprite_index = spr_Old_Olivia_Climb;
    image_speed=.65*global.game_speed;
    vsp=0;
    hsp=0;

    if instance_exists(obj_camera_offset)
    {
     if !instance_exists(obj_PearStore_inside)
        {
        obj_camera_offset.Seek=false; 
        obj_camera_offset.Focus=true;   
        }
    }
    
    if (image_index&lt;19)
    ledge_y-=3*global.game_speed;
    else
    ledge_y-=1*global.game_speed;
        
    ledge_x+=image_xscale*.8*global.game_speed;    


if(image_index&gt;=sprite_get_number(sprite_index)-1)
    {  
    
    if instance_exists(obj_camera_offset)
    {
        if !instance_exists(obj_PearStore_inside)
        {
        obj_camera_offset.Seek=true;
        obj_camera_offset.Focus=false;
        obj_camera_offset.speed=1; 
        obj_camera_offset.inc=1; 
        } 
    }    
    
    
    x=x+(40*image_xscale);
    y=y-80;
    climbledge=false;
    sprite_index=spr_Old_Olivia_Idle;
    if place_meeting(x,y,par_wall)
        {
        while (place_meeting(x,y,par_wall)) y=y-1;
        }
        else
        {
        while (!place_meeting(x,y,par_wall)) y=y+1;
        }    
    }
    
    wallpush=0;
}//END CLIMB LEDGE

/*-------------------------------------------------------------------------------------------
  _    _            _                _        _    _____      _ _ _     _                 
 | |  | |          (_)              | |      | |  / ____|    | | (_)   (_)                
 | |__| | ___  _ __ _ _______  _ __ | |_ __ _| | | |     ___ | | |_ ___ _  ___  _ __  ___ 
 |  __  |/ _ \| '__| |_  / _ \| '_ \| __/ _` | | | |    / _ \| | | / __| |/ _ \| '_ \/ __|
 | |  | | (_) | |  | |/ / (_) | | | | || (_| | | | |___| (_) | | | \__ \ | (_) | | | \__ \
 |_|  |_|\___/|_|  |_/___\___/|_| |_|\__\__,_|_|  \_____\___/|_|_|_|___/_|\___/|_| |_|___/
                                                                                          
                                                                                          */
//HORIZONTAL COLLISIONS ----------------------------------------------------------------------

if place_meeting(x+hsp,y,par_wall){ 
if !place_free(x+hsp,y)
{


    yplus = 0;   
    while (place_meeting(x+hsp,y-yplus,par_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus+= 1;
    
    if place_meeting(x+hsp,y-yplus,par_wall)
    {
        while (!place_meeting(x+sign(hsp),y,par_wall)) x+=sign(hsp);
       
        hsp =0;
        
        if (wallbounces&lt;1)//Enable Wallbounce  
            {
                canbounce=1;
            }
            else
            {
                if (wallpush&gt;40) canbounce=1;
            }
            
                   
        if (jumpkick) // Stop JumpKick/Melee When Going into Wall
        { 
        Melee=false; 
        if (jumpkick) angle=0;
        jumpkick=false;
        jump_Swing=0; //edit 10/26/15
        can_Melee=false; 
        slide=false;
        alarm[8]=20/global.game_speed; 
        }
        
              
    }
    else
    {
        y=y-yplus;
    }

}//END PLACE FREE FOR WALL PUSH
//WALL PUSH COUNT -------------------------------------------------------------------------------
    if (hsp==0)
    {
        if (!climbledge) &amp;&amp; (!hit) wallpush=wallpush+1*global.game_speed;    //edit 
    }
    else
    {  
        wallpush=0;
    }

}//END IF COLLIDING

//Commit to Horizontal movement -------------

if (abs(hsp)&gt;0) wallpush=0; //RESET WALL PUSH

if(!death) &amp;&amp; (!respawn)
x += hsp*global.game_speed;

//SET JUMP and FALL IMAGE SPEED --------------------------------------

    if (sprite_index==spr_Old_Olivia_Jump_B)
        {
            if(image_index&gt;50) image_speed=.5*global.game_speed;
            if(image_index&gt;=100) image_speed=0;
        }
     
     if (sprite_index==spr_Old_Olivia_Jump_A)
        {        
            if(image_index&gt;50) image_speed=.5*global.game_speed;
            if(image_index&gt;=98) image_speed=0;
        }

//VERTICAL COLLISIONS ------------------------------------------------------------
/*
 __      __       _   _           _    _____      _ _ _     _                 
 \ \    / /      | | (_)         | |  / ____|    | | (_)   (_)                
  \ \  / /__ _ __| |_ _  ___ __ _| | | |     ___ | | |_ ___ _  ___  _ __  ___ 
   \ \/ / _ \ '__| __| |/ __/ _` | | | |    / _ \| | | / __| |/ _ \| '_ \/ __|
    \  /  __/ |  | |_| | (_| (_| | | | |___| (_) | | | \__ \ | (_) | | | \__ \
     \/ \___|_|   \__|_|\___\__,_|_|  \_____\___/|_|_|_|___/_|\___/|_| |_|___/
                                                                              
                                                                              */
//--------------------------------------------------------------------------------                                                                              
if place_meeting(x,y+vsp,par_wall) &amp;&amp; !place_free(x,y+vsp) &amp;&amp; (!ladder)
{
     
    if(sprite_index==spr_Old_Olivia_Jump_B) || (sprite_index==spr_Old_Olivia_Jump_A) || (sprite_index == spr_Old_Olivia_Jump_Kick) || (sprite_index == spr_Old_Olivia_JumpSwing) 
    {
           
    if (jumpkick) || (jump_Swing!=0) //edit 10/26/15 // Stop JumpKick/Melee When Going into Wall
    { 
        Melee=false;
        if (jumpkick) angle=0; 
        jumpkick=false;
        jump_Swing=0; //edit 10/26/15
        can_Melee=false; 
        slide=false;
        alarm[8]=20/global.game_speed; 
    }
     
         
    if (vsp&gt;0)
    {
            if (land==false)
            {
            sprite_index=spr_Old_Olivia_Land;
            image_index=0;
            land=true;
            
            
            can_Melee=true; //edit 10/19/15
            Melee=false; //was commented out //edit 030316
            }

            audio_sound_pitch(snd_Land,global.game_speed);
            audio_play_sound(snd_Land,9,false);
            sprite_index=spr_Old_Olivia_Land;
            image_speed=.5*global.game_speed;
            
    }
    else
    {
        
        audio_sound_pitch(snd_hitground,global.game_speed);
        audio_play_sound(snd_hitground, 10, false);
    }
    
    
    }
   
    if place_meeting(x,bbox_top+vsp,par_wall)
        { 
        headstuck=headstuck+1;
        wallbounce=false;//edit 030916
        }
        
    if place_meeting(x,bbox_bottom+vsp,par_wall)    
        headstuck=0;
    
    
            
    while (!place_meeting(x,y+sign(vsp),par_wall)) y=y+sign(vsp);
         
    if (sign(vsp) == 1)
    {       
        
        if (vsp&gt;15)
            {
            with instance_create(x+24*image_xscale, y+55,obj_dust_trail){image_xscale=-2*other.image_xscale;image_yscale=2;i_image_speed=2;}
            with instance_create(x-40*image_xscale, y+55,obj_dust_trail){image_xscale=2*other.image_xscale;image_yscale=2;i_image_speed=2;}
    
            } 
        if (vsp&gt;5) //ADD RUMBLE SHOCK TO LAND
        {
            
            alarm[11]=vsp*.25;
            if (alarm[11]&gt;12) alarm[11]=12;
            var vibration=alarm[11]*.5; //was .4
                if (vibration&gt;1) vibration=1;
            if (global.rumble) gamepad_set_vibration(0, vibration, vibration);
        }
        grounded = 1; //Enable First Jump
        if (jumpkick) angle=0;
        jumpkick=false;
        jump_Swing=0; //edit 10/26/15
        djump = 1; //Enable Double Jump
        canbounce = 0; //Disable Double Jump
        wallbounce=false; //Turn Off Wallbounce
        wallbounces=0; //wallbounce count set to 0
        angle=0; //edit 030416
                
    }
    vsp = 0;   
       
}
else
{
                grounded = 0;
   
                if (slide) &amp;&amp; (image_index&lt;1)
                {
                Melee=false;
                if (jumpkick) angle=0;
                jumpkick=false;
                jump_Swing=0; //edit 10/26/15
                slide=false;
                hsp=0;
                can_Melee=false; 
                alarm[8]=20/global.game_speed; 
                sprite_index=spr_Old_Olivia_Crouch;
                image_index=9;
                }
                
                if (image_index&gt;=2) land=false;
}



if (headstuck&gt;=3) //Head Collide is STUCK
    {
        y=y+5;
        x=x-hsp*global.game_speed;
        headstuck=0;
    }
    


//Commit to Verical movement -----------------------
if (respawn) vsp=0;


y += vsp*global.game_speed;


/*----------------------------------------------------------
  _____                ____                 _     _      
 |  __ \              / __ \               (_)   | |     
 | |__) |__ _ _   _  | |  | |_   _____ _ __ _  __| | ___ 
 |  _  // _` | | | | | |  | \ \ / / _ \ '__| |/ _` |/ _ \
 | | \ \ (_| | |_| | | |__| |\ V /  __/ |  | | (_| |  __/
 |_|  \_\__,_|\__, |  \____/  \_/ \___|_|  |_|\__,_|\___|
               __/ |                                     
              |___/                                  
-----------------------------------------------------------*/
 
if instance_exists(obj_Ray) //RESET TO INTIAL RAY AIM
{
    if (obj_Ray.s_speed&lt;=0)
    {   
    
    switch(ray_look)
    {
    case 12:
    if (crouch)
    sprite_index = spr_Old_Olivia_Crouch_Shoot_Up; 
    else 
    sprite_index = spr_Old_Olivia_Shoot_Up; 
    break;
    
    case 5: 
    if (crouch)
    sprite_index = spr_Old_Olivia_Crouch_Shoot_Straight_Down; 
    else
    sprite_index = spr_Old_Olivia_Shoot_Straight_Down; 
    image_xscale=1; 
    break;
    
    case 7: 
    if (crouch)
    sprite_index = spr_Old_Olivia_Crouch_Shoot_Straight_Down; 
    else
    sprite_index = spr_Old_Olivia_Shoot_Straight_Down; 
    image_xscale=-1; 
    break;
    
    case 6: 
    if (crouch)
    sprite_index = spr_Old_Olivia_Crouch_Shoot_Down;
    else
    sprite_index = spr_Old_Olivia_Shoot_Down; 
    break;
    
    case 9:
    if (crouch) 
    sprite_index = spr_Old_Olivia_Crouch_Shoot;
    else
    sprite_index = spr_Old_Olivia_Shoot_Straight; 
    image_xscale=-1; 
    break;
    
    case 3: 
    if (crouch) 
    sprite_index = spr_Old_Olivia_Crouch_Shoot;
    else
    sprite_index = spr_Old_Olivia_Shoot_Straight; 
    image_xscale=1; 
    break;
    
    case 2: 
    if (crouch) 
    sprite_index = spr_Old_Olivia_Crouch_Shoot_Straight_Up; 
    else
    sprite_index = spr_Old_Olivia_Shoot_Straight_Up; 
    image_xscale=1;  
    break;
    
    case 10:
    if (crouch) 
    sprite_index = spr_Old_Olivia_Crouch_Shoot_Straight_Up; 
    else 
    sprite_index = spr_Old_Olivia_Shoot_Straight_Up; 
    image_xscale=-1; 
    break;    
    }
    
    if (crouch)     
        {
        //sprite_index=spr_Old_Olivia_Crouch_Shoot; 
        mask_index=spr_Olivia_Collide_duck;
        }//edit 10/25/15
        
    /*
    if (ray_west_east==0)  
        {
        west_east=0;
        image_xscale=-1;
        }
        else
        {
        west_east=1;
        image_xscale=1;
        }    
    */
    }
}// END RAY AIM OVERIDE

//INITIALIZE DEATH TYPE-------------------------------------------
/*
  _____             _   _       _____       _ _   
 |  __ \           | | | |     |_   _|     (_) |  
 | |  | | ___  __ _| |_| |__     | |  _ __  _| |_ 
 | |  | |/ _ \/ _` | __| '_ \    | | | '_ \| | __|
 | |__| |  __/ (_| | |_| | | |  _| |_| | | | | |_ 
 |_____/ \___|\__,_|\__|_| |_| |_____|_| |_|_|\__|
                                                  
                                                  */
//----------------------------------------------------------------
if (death) 
    {      
        if (grav==0) 
        {
        sprite_index=spr_Old_Olivia_Die_Air;
            if(image_index&gt;=(sprite_get_number(spr_Old_Olivia_Die_Air)-1)) 
            {
            dead=true;
            image_speed=0;
            } 
        }
        else
        {
        sprite_index=spr_Old_Olivia_Die;
        
            if(image_index&gt;=23) 
            {
            dead=true;
            image_speed=0;
            }            
            
        }
        
        if instance_exists(obj_Baby_Fairy_Res) //edit 1/20/2016
                {
                if (obj_Baby_Fairy_Res.quiting==true)
                    {
                    image_speed=-.5*global.game_speed;
                    }
                
                }
    }
    
//OUTSIDE ROOM ---------------------------------------------

if(y&gt;room_height+200)
{
      
   if !instance_exists(obj_Mozaic_Flash)
   {  
    if (death_count&lt;=0) 
    {   
    global.CutScene=true; 
    fall_x=x;
    death_count=80;
    //if(!death)
    
    if instance_exists (obj_Waves)
    {
       audio_sound_pitch(snd_splash_light, random_range(1,1.2));
       audio_play_sound(snd_splash_light,10,false);
       with  instance_create(x,room_height,obj_Splash) {depth=other.depth;}
    }
    
    audio_play_sound(snd_die, 10,false);
    }
    
    death_count-=1;
   
    
    if (death_count==70)
    {
    audio_sound_pitch(snd_Fall,random_range(.95,1.05)*global.game_speed);
    audio_play_sound(snd_Fall, 16,false);
    hsp=0;
    }
    
    if (death_count&lt;=1)
    {
    vsp=0;
    hsp=0;
    hp=hp-25;
    jumpkick=false;
    Melee=false;
    x=restart_x;
    y=restart_y;
    //master.skip_flush=true;
    global.gamestart=false;
    
    death=false;
    
    if instance_exists(obj_CheckPoint_Boss) &amp;&amp; (hp&gt;0)
    {
        if (obj_CheckPoint_Boss.stored_vars==true)
        {
        hp=obj_CheckPoint_Boss.last_hp;
        money=obj_CheckPoint_Boss.last_money;
        energy=obj_CheckPoint_Boss.last_energy;
        
        weapon_A=obj_CheckPoint_Boss.last_weapon_A;
        weapon_B=obj_CheckPoint_Boss.last_weapon_B;
        weapon_C=obj_CheckPoint_Boss.last_weapon_C;
        weapon_D=obj_CheckPoint_Boss.last_weapon_D;
        
        weapon_A_energy=obj_CheckPoint_Boss.weapon_A_energy;
        weapon_B_energy=obj_CheckPoint_Boss.weapon_B_energy;
        weapon_C_energy=obj_CheckPoint_Boss.weapon_C_energy;
        weapon_D_energy=obj_CheckPoint_Boss.weapon_D_energy;
        
        var ia;
        var ib;
        for(ia=0; ia&lt;=2; ia+=1)
            {
                for (ib=0;ib&lt;=3;ib+=1)
                {           
                 global.Inventory[ia,ib]=obj_CheckPoint_Boss.last_Inventory[ia,ib];
                }                   
            }
        }
    } //END LOAD IN LAST VARS BEFORE FALLING
    
    if instance_exists(obj_Weapon_Boost){with(obj_Weapon_Boost){instance_destroy();}}
    if instance_exists(obj_Shield_Buff){with(obj_Shield_Buff){instance_destroy();}} 
    if instance_exists(obj_Warp_Boost){with(obj_Warp_Boost){instance_destroy();}} 
    if instance_exists(obj_Regeneration){with(obj_Regeneration){instance_destroy();}} 
    if instance_exists(obj_Time_Buff){with(obj_Time_Buff){instance_destroy();}}     
        
    room_restart()
    death_count=0;
    global.CutScene=false; 
        
        if (hp&gt;0)
        {
        respawn=true;
        sprite_index=spr_Old_Olivia_Die_Air;
        image_index=18;
        respawn_frame=18;
        image_speed=0*global.game_speed;
        global.game_speed=1;
        master.target_speed=1;
        }    
    }
    else
    {
     x=fall_x;
    }
    
    
   }
}

/*----------------------------
  _______        _ _ 
 |__   __|      (_) |
    | |_ __ __ _ _| |
    | | '__/ _` | | |
    | | | | (_| | | |
    |_|_|  \__,_|_|_|
                     
                     */    
//TRAIL ----------------------

for (a=8;a&gt;0;a-=1)
    {
    trail_x[a]=trail_x[a-1];
    trail_y[a]=trail_y[a-1];
    }
    trail_x[0]=x;
    trail_y[0]=y;
    


//GROUNDED COUNT / TURN CORRECT
if (grounded) 
    {
    grounded_count+=1;
    not_grounded_count=0;
    } 
    else 
    {
    if (sprite_index==spr_Old_Olivia_Turn)
    {
        sprite_index = spr_Old_Olivia_Run; 
        //image_index=0;
        image_index=6;
        image_speed=(.6+abs(.1*accel))*global.game_speed;
    }
    not_grounded_count+=1;
    grounded_count=0;
    turn=false
    }
if (sprite_index==spr_Old_Olivia_Run) 
    {
        if (image_index&lt;1) image_index=6;
    }
//END LOOP -------------------------------------------------------

//LSD CONTROL
if instance_exists(obj_LSD)
{
 if !instance_exists(obj_GooeyDragon)
    {
    if place_meeting(x,y,obj_LS_Door)
    {
        obj_LSD.control=true;
        var wave_inc=(obj_LSD.var_wave_distortion)*.1;
        if (obj_LSD.var_wave_distortion&gt;20) obj_LSD.var_wave_distortion-=wave_inc;//was -2 //double check inc was half
        if (obj_LSD.evolution &lt; .08) obj_LSD.evolution+=.002; //double check inc was half
        if (obj_LSD.frame_pull&lt;1.1) obj_LSD.frame_pull+=.01; //double check inc was half
    }
    else
    {
        obj_LSD.control=true;
        if (obj_LSD.var_wave_distortion&lt;50) obj_LSD.var_wave_distortion+=.5;
        if (obj_LSD.evolution &gt; .04) obj_LSD.evolution-=.001;
        if (obj_LSD.frame_pull&gt;1.02) obj_LSD.frame_pull-=.005;
    }  
    }
}

if (!hit) hit_index=0;
 if(sprite_index==spr_Old_Olivia_JumpSwing)|| (sprite_index==spr_Old_Olivia_Jump_Kick) depth=-5; //edit 11/18/15
 
//LAZER BARRIER SOUND -------------------------------
if instance_exists(obj_Barrier_Lazer)
{
var nearest 
var nearest_dist
 nearest=instance_nearest(x,y,obj_Barrier_Lazer);
 nearest_dist=point_distance(x, y, nearest.x, nearest.y);
   
 if (nearest.active==true)
 {
    if (nearest_dist &lt; 1000)
    {
    if !audio_is_playing(snd_Lazer_wall) 
    audio_play_sound(snd_Lazer_wall,20,false);
    
    audio_sound_gain(snd_Lazer_wall,((1000-nearest_dist)/1000)*.25,0);
    audio_sound_pitch(snd_Lazer_wall,global.game_speed);
    }
    else
    {
    if audio_is_playing(snd_Lazer_wall)
    audio_stop_sound(snd_Lazer_wall);
    }
 }   
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//----------------------------------------------------------------------------
//ENEMY COLLIDE
//---------------------------------------------------------------------------- 
if !instance_exists(obj_PearStore_inside)
{

//CHECK IF NOT DEAD AND NOT SHIELDED
if (hp&gt;0) &amp;&amp; !instance_exists(obj_ForceField) &amp;&amp; (!shieldup)
{

//CHECK IF THE ENEMY EXISTS
enemy = instance_place(x, y, par_Enemy);
if (enemy==noone)
enemy = instance_nearest(x, y, par_Enemy);

//COLLIDING WITH FLAME FIRE
if place_meeting(x,y,par_Enemy_Fire)
{
if (burn==false)
    {
    burn=true;
    burn_count=100;
    }
}

//CHECK IF NOT NOT MELEE ATTACKING
if(sprite_index!=spr_Old_Olivia_Jump_Kick) &amp;&amp; (sprite_index!=spr_Old_Olivia_Slide) &amp;&amp; (sprite_index!=spr_Old_Olivia_Spin_Attack)
{
    //IF NOT INVINSIBLE COOL DOWN OR ENEMY HAS NOT DAMAGE
    if (!invinsible) &amp;&amp; (enemy.damage&gt;0) 
    {
    
    //if !audio_is_playing(snd_die)
    //audio_play_sound(snd_die,10,false);
    
    
    //SET RUMBLE
    if (global.rumble) gamepad_set_vibration(0, 1, 1);
    
    //SET INVINSIBLE CLOCK
    if (alarm[11]&lt;50/global.game_speed) alarm[11] = 50/global.game_speed; //REST FROM HIT (INVINSIBLE)
    
    
    audio_play_sound(snd_hit_A, 10, false);
    audio_play_sound(snd_take_damage, 10, false);
    
    
    if(!climbledge)
    {   
    if (grounded) &amp;&amp; (!Melee) || (sprite_index==spr_Old_Olivia_Idle)
        {
        sprite_index=spr_Old_Olivia_Hit;
        if !instance_exists(obj_Bomb) image_index=0; 
        image_speed=1;
        Change_Weapon=false;
        hit=true;
        hit_index=0; //edit
        accel=0; //edit
        hsp=0; //edit
        }
    }
    
    color=c_red;
    
    //SET RED COLOR CLOCK
    if (hp-enemy.damage&gt;0)
    {
        if (enemy.damage&gt;10)
        {
        alarm[1] = 50; //was 18//was 8
        blink_cap=40;
        }
        else
        {
        alarm[1] = 30;//was 12 // was 8
        blink_cap=20;
        }                
    }
    
    if (enemy.damage&gt;=5) || (abs(hsp)&gt;0)
    {
        hitbounce=50;
        }
        else
        {
        hitbounce=40;
    }
    
    if (enemy.damage&gt;=100) hitbounce=0;
    
    hp=hp-enemy.damage;
    
    if(!climbledge)
    {
        image_alpha = .7;
        if (enemy.damage&gt;10)
        {
        if !place_meeting(x,y-hitbounce*.5,par_wall)
            y-=hitbounce*.25;
        }
    
    
    if (x &gt; enemy.x) 
    {
        
        var temp
        for (temp=0; temp&lt;hitbounce; temp+=5)
        {
            if !place_meeting(x+5,y,par_wall)
            {           
                    x = x + 5;   
            }
        }
    }    
    
    if (x &lt; enemy.x)
    {
        var temp
        for (temp=0; temp&lt;abs(hitbounce); temp+=5)
        {
        if !place_meeting(x-5,y,par_wall)
            {      
                    x = x - 5;
            }
        }
    }
    
    }
    
    invinsible=true;
    hitbounce =64;
    } //End Not Invinsible
}//End Not JumpKick
}//END HP GREATER THAN 0
}//no store

//----------------------------------------------------------------------------
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.VParallax=false;
global.CutScene=false; 

gamepad_set_vibration(0, 0, 0);
//SET BLOOM TO NORMAL
bloom_max=.55;

//OTHER STUFF
if !audio_is_playing(snd_droid_activate)
audio_sound_pitch(snd_droid_activate,1);

if (global.platform==1) || (global.platform==3)
{
global.debug=false;
if instance_exists(obj_debug){with (obj_debug){instance_destroy();}}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//FOR RECHARGE WEAPON

for (a=0;a&lt;=global.rows;a+=1)
{
    
    for (b=0;b&lt;=global.columns;b+=1)
    {
        if (global.Inventory[a,b]==10)
            {        
            recharge=100;       
            }
    }
}

for (a=0;a&lt;=global.rows;a+=1)
{
    
    for (b=0;b&lt;=global.columns;b+=1)
    {
        if (global.Inventory[a,b]==11)
            {        
            recharge=50;       
            }
    }
}

global.weapon_A=weapon_A;
global.weapon_B=weapon_B;
global.weapon_C=weapon_C;
global.weapon_D=weapon_D;

vsp=0;
hsp=0;
tank_hold=false;

if (image_index&gt;40)
image_index=40;

if !instance_exists(obj_camera_offset) instance_create(x,y,obj_camera_offset)

global.gamestart=true;
death=false;

if(sprite_index==spr_Old_Olivia_Jump_A) || (sprite_index==spr_Old_Olivia_Jump_B)
    image_index=50; //SYNC FALL ANIMATION
    
if !instance_exists(obj_HERO_dropShadow) //Create Shadow
    instance_create(x,y,obj_HERO_dropShadow);


if !instance_exists(obj_Tube)
global.CutScene=false;
  
//LOAD BUFF Sprites ----------------------------------
if(master.Shield==0)
{
master.num+=1;
master.Shield=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\Shield.png",21,0,0,124,48);
}
 
//LOAD PET Sprites -----------------------------------
if (global.pets[1]&gt;0) //GINGER PUP HEADER
{
if(master.GingerPup_header==0)
{
master.num+=1;
master.GingerPup_header=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\GingerPup_header.png",30,1,1,148,277);
}
}
if(master.FuzzyTurtle==0)
{
master.num+=1;
master.FuzzyTurtle=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\FuzzyTurtle.png",21,0,0,254,46);
}

if(master.TallBlast==0)
{
master.num+=1;
master.TallBlast=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Imports\spr_Tall_Blast.png",30,0,1,71,526);
}

draw_sprite(spr_FuzzyTurtle_Idle_A,0,-100,-100);

//LOAD RES SPRITES -------------------------------------------------

for (a=0;a&lt;=global.rows;a+=1) //CHECK INVENTORY FOR RESSURECTION----
{
    for (b=0;b&lt;=global.columns;b+=1)
    {
        if (global.Inventory[a,b]==12)
        
        //LOAD RES Sprites
        if(master.spr_Baby_Fairy_CAST==0)
        {
        master.num+=1;
        master.spr_Baby_Fairy_CAST=master.num;
        global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Baby_Fairy_CAST.png",13,0,1,51,67);
        }
        
        if(master.spr_Baby_Fairy_FLY==0)
        {
        master.num+=1;
        master.spr_Baby_Fairy_FLY=master.num;
        global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Baby_Fairy_FLY.png",25,0,1,42,61);
        }
        
        if(master.spr_Baby_Fairy_SUMMON==0)
        {
        master.num+=1;
        master.spr_Baby_Fairy_SUMMON=master.num;
        global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Baby_Fairy_SUMMON.png",8,0,1,37,69);
        }
        
        if(master.Resurrection==0)
        {
        master.num+=1;
        master.Resurrection=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\Imports\Resurrection.png",18,0,0,227,75);
        }
        
        if(master.FatBlast==0)
        {
        master.num+=1;
        master.FatBlast=master.num;
        global.sprite[master.num]= sprite_add(working_directory+"\Imports\spr_Fat_Blast.png",25,0,1,201,232);
        }
    }
}
visible=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if(sprite_index==spr_Old_Olivia_JumpSwing) depth=-5; //edit 11/18/15
//ANGLE ---------------------------------

if(land) last_y=y;

if place_meeting(x,y+10,par_wall)  //&amp;&amp;(not_grounded_count&lt;12) 
{

 if (abs(hsp)&gt;0)
 {  
 if (image_xscale==1)
    {
    if (last_y&lt;y) angle-=(y-last_y)*.2; //Going UP RIGHT
    if (last_y&gt;y) angle+=(last_y-y)*.5; //Going DOWN RIGHT
    if (abs(last_y-y)&lt;=1.5) angle*=.9; //was 97
    }
 
 if (image_xscale==-1)
    {
    if (last_y&lt;y) angle+=(y-last_y)*.5; //Going DOWN LEFT
    if (last_y&gt;y) angle-=(last_y-y)*.2; //Going UP LEFT
    if (abs(last_y-y)&lt;=1.5) angle*=.9; //was 97
    }
 }
 else
 {
 //angle*=.99;
 //if (abs(angle)&lt;.5) angle=0;
 }

    
    if (angle&gt;10) angle=10;
    if (angle&lt;-10) angle=-10;

}//END WALL
else
{
    if (jumpkick==false) || (jump_Swing==0) //edit
        {
        angle*=.99;
        if (abs(angle)&lt;.5) angle=0;
        }            
}

    last_y=y;

        if(sprite_index==spr_Old_Olivia_Jump_A) || (sprite_index==spr_Old_Olivia_Jump_B)
        {
            if (vsp&lt;0)
            {
            //angle*=.25; 
            //if (abs(angle)&lt;1) 
            angle=0;
            }
            
            if place_meeting(x,y,par_flux_plat) angle=0;
        }

        if(firing) 
        {
        angle*=.75;
        if (abs(angle)&lt;1) angle=0;
        }
        
        if (warping) angle=0;
        
if instance_exists(obj_Tunnel_Cliff_E_Elevator)
{
if place_meeting(x,y,obj_Tunnel_Cliff_E_Elevator) angle=0;
}        
if place_meeting(x,y+10,par_V_moving_platform) angle=0;

if (land) || (ladder) || (sprite_index==spr_Old_Olivia_Ultimate) || (sprite_index==spr_Old_Olivia_JumpSwing) {angle=0}


//---------------------------------------
if (burn)
    {
    burn_count-=1; 
      
    if (burn_count&gt;=99)||(burn_count==80)||(burn_count==60)||(burn_count==40)||(burn_count==20)
    {
        burn_x = random_range(-.25,.25)*sprite_width*abs(image_xscale);
        burn_y = random_range(-.25,.25)*sprite_height*image_yscale;
        color=c_red;
        image_blend=c_red;
        alarm[11]=8;
        if (hp&gt;2) &amp;&amp; (!shield) hp-=2;
    }
    else
    {
    repeat(2)
    {
    with instance_create(x+burn_x,y+burn_y,obj_burn) //BURN View
        {
            image_xscale=other.image_yscale;
            image_yscale=other.image_yscale;
        }
    }
    }
    
    if (burn_count&lt;=0) burn=false;
    }
//END BURN -----

//TRAIL
if(trail) || (jumpkick) || (slide) || (sprite_index==spr_Old_Olivia_Wall_Bounce) || (vsp&gt;20)
{
var fade 
if (jumpkick) 
{angle=(-10*image_xscale); fade=1;}
else   if (sprite_index==spr_Old_Olivia_Wall_Bounce) || (slide)
{fade=.25;}
else if (vsp&gt;20)
{
fade=(vsp-20)*.1;
}

if instance_exists(obj_Tube) fade=0;
for (a=8;a&gt;0;a-=2)
    {
    draw_sprite_ext(sprite_index, image_index-a, trail_x[a], trail_y[a]-25, image_xscale, image_yscale, angle+360, color, (.5-(.05*a))*fade);
    }
}

     
    if(color==c_white) &amp;&amp; (image_alpha&gt;=1)
    {
        shader_set(shd_bright_contrast);
        shader_set_uniform_f(global.brightness_amount , brightness);
        shader_set_uniform_f(global.contrast_amount, contrast);    
        draw_sprite_ext(sprite_index, image_index, x, y-25,image_xscale, image_yscale, angle+360, color, image_alpha);
        shader_reset();
    }
    else
    {
        if (color==c_red) //IF HIT
        {
        move+=0.04;
        blink_rate=40;
        blink+=blink_rate;
                      
            if (sin(blink)&lt;0) &amp;&amp; (alarm[1]&lt;blink_cap)
            {
                draw_sprite_ext(sprite_index, image_index, x, y-25, image_xscale, image_yscale, angle+360, c_white, image_alpha);
                
                if(blink_cap==20)
                red=round(red*.7);
                else
                red=round(red*.95);
                
            }
            else
            {        
                    var Stripes = shader_get_uniform(shdr_Hologram,"Stripes");
                    var Filter = shader_get_uniform(shdr_Hologram,"Filter");
                    var Phase = shader_get_uniform(shdr_Hologram,"Phase");
                    
                    shader_set(shdr_Hologram);
                    shader_set_uniform_f(Stripes,1200.0);
                    shader_set_uniform_f(Filter,0.98,0.98,0.98,1.0); //rgba diffuse color
                    shader_set_uniform_f(Phase,move);       
                    draw_sprite_ext(sprite_index, image_index, x, y-25, image_xscale, image_yscale, angle+360, make_color_hsv(0,255,255), image_alpha); //was c_red
                    shader_reset();
            }                          
        }
        else
        {
        draw_sprite_ext(sprite_index, image_index, x, y-25, image_xscale, image_yscale, angle+360, color, image_alpha);
        }
    }

if (respawn)
{
draw_set_blend_mode(bm_add);
draw_sprite_ext(spr_wisp_A,image_index,x,y,12,12,0,c_white,.25);
draw_sprite_ext(spr_Static,image_index,x,y,1,1,330*image_xscale,c_white,.25);
draw_set_blend_mode(bm_normal);
}


//DRAW FORCE FIELD ---------------------------------------------------------------------   
/*
if instance_exists(obj_ForceField)
{
 
if (obj_ForceField.parry_hit==true)
    {
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(spr_wisp_A,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,12,12,0,make_color_hsv(irandom_range(1,255),255,255),.4);
    draw_sprite_ext(spr_Static,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,1,1,330*obj_ForceField.image_xscale,make_color_hsv(irandom_range(1,255),255,255),.5);
    draw_set_blend_mode(bm_normal);
    }

if (obj_ForceField.die)
{
   
    obj_ForceField.move+=random_range(0.02,0.08);
    obj_ForceField.image_blend=c_white;
    
    draw_set_blend_mode(bm_add);
       
    if (obj_ForceField.type==1) obj_ForceField.image_alpha=obj_ForceField.image_alpha-.02; //JUMP SHIELD
    if (obj_ForceField.type==2) obj_ForceField.image_alpha=obj_ForceField.image_alpha-.02; //STAND SHIELD
    
    var Stripes_A = shader_get_uniform(shdr_Hologram,"Stripes");
    var Filter_A = shader_get_uniform(shdr_Hologram,"Filter");
    var Phase_A = shader_get_uniform(shdr_Hologram,"Phase");
    
    draw_sprite_ext(obj_ForceField.sprite_index,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,obj_ForceField.image_xscale,obj_ForceField.image_yscale,obj_ForceField.image_angle,obj_ForceField.image_blend,obj_ForceField.image_alpha);

    shader_set(shdr_Hologram);
    shader_set_uniform_f(Stripes_A,255.0);
    shader_set_uniform_f(Filter_A,0.98,0.98,0.98,1.0);//rgba diffuse color
    shader_set_uniform_f(Phase_A,obj_ForceField.move);
        
    draw_sprite_ext(obj_ForceField.sprite_index,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,obj_ForceField.image_xscale,obj_ForceField.image_yscale,obj_ForceField.image_angle,obj_ForceField.image_blend,obj_ForceField.image_alpha);

    shader_reset();
    draw_set_blend_mode(bm_normal);
    
}
else
{   
draw_set_blend_mode(bm_add);

 if (obj_ForceField.type==1) //PARRY FORCE FIELD
        {
        if (obj_ForceField.sprite_index==Force_Field_B_Hit)
            draw_sprite_ext(spr_wisp_A,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,14,14,0,make_color_hsv(46-obj_ForceField.image_index,255,255),.25); //was .2
            else
            draw_sprite_ext(spr_wisp_A,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,12,12,0,make_color_hsv(46-obj_ForceField.image_index,255,255),.25); //was .2
        }
        else //REGULAR FORCE FIELD            
        {
        if (obj_ForceField.sprite_index==Force_Field_B_Hit)
            draw_sprite_ext(spr_wisp_A,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,14,14,0,make_color_hsv(145,80,255),.25);
            else
            draw_sprite_ext(spr_wisp_A,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,12,12,0,make_color_hsv(145,80,255),.25);
        } 
}
        
draw_sprite_ext(obj_ForceField.sprite_index,obj_ForceField.image_index,obj_ForceField.x,obj_ForceField.y,obj_ForceField.image_xscale,obj_ForceField.image_yscale,obj_ForceField.image_angle,obj_ForceField.image_blend,obj_ForceField.image_alpha);
draw_set_blend_mode(bm_normal);
}
*/
//---------------------------- [END DRAW FORCE FIELD] 










if instance_exists(obj_debug)
{
draw_set_alpha(.5);
draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,true);
draw_set_alpha(.1);

if (grounded)
draw_sprite_ext(spr_Old_Olivia_Collide, image_index, x, y, image_xscale, image_yscale, 0, c_white, .1 );
else
draw_sprite_ext(spr_Old_Olivia_Collide, image_index, x, y, image_xscale, image_yscale, 0, c_ltgray, .1 );
draw_set_alpha(1);


draw_line_colour(bbox_left,bbox_top+8,bbox_left-10,bbox_top+8,c_yellow,c_yellow);
draw_line_colour(bbox_right,bbox_top+8,bbox_right+10,bbox_top+8,c_yellow,c_yellow);


draw_line_colour(bbox_left,bbox_top,bbox_left-10,bbox_top,c_blue,c_blue);
draw_line_colour(bbox_right,bbox_top,bbox_right+10,bbox_top,c_blue,c_blue);


draw_line_colour(bbox_right+20,bbox_top,bbox_right+21,bbox_top,c_green,c_green);
draw_line_colour(bbox_left-20,bbox_top,bbox_left-21,bbox_top,c_green,c_green);

draw_line_colour(bbox_left,bbox_top,bbox_left,bbox_bottom,c_green,c_green);
draw_line_colour(bbox_right,bbox_top,bbox_right,bbox_bottom,c_blue,c_blue);
}  



/*

draw_text(x+100,y-20,"global.world_clear[0]: " +string(global.world_clear[0]));
draw_text(x+100,y,"global.world_clear[1]: " +string(global.world_clear[1]));
draw_text(x+100,y+20,"global.world_clear[2]: " +string(global.world_clear[2]));
draw_text(x+100,y+40,"global.world_clear[3]: " +string(global.world_clear[3]));

/*
if instance_exists(obj_camera_offset) &amp;&amp; instance_exists(obj_camera_offset_dummy)
{
draw_set_alpha(1);
draw_set_color(c_white);
draw_set_font(fnt_Arial);

draw_sprite_ext(spr_Crosshair,0,obj_camera_offset_dummy.x,obj_camera_offset_dummy.y,1,1,0,c_yellow,1);
draw_set_color(c_white);


draw_text(x+200,y+40,"X_shift: "+string(obj_camera_offset_dummy.shift_x));
draw_text(x+200,y+60,"Y_shift: "+string(obj_camera_offset_dummy.shift_y));

draw_text(x+200,y+80,"X_acel: "+string(obj_camera_offset_dummy.acel_x));
draw_text(x+200,y+100,"Y_acel: "+string(obj_camera_offset_dummy.acel_y));

draw_text(x+200,y+130,"Seek: "+string(obj_camera_offset.Seek));
draw_text(x+200,y+150,"Focus: "+string(obj_camera_offset.Focus));
draw_text(x+200,y+170,"Speed "+string(obj_camera_offset.speed));
draw_text(x+200,y+190,"offset_y "+string(obj_camera_offset.offset_y));

draw_sprite_ext(spr_Crosshair,0,obj_camera_offset.x,obj_camera_offset.y,1,1,0,c_white,1);
}


/*
draw_text(x,bbox_top-60,string(ladder_climb));
draw_text(x,bbox_top-45,string(image_index));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x-100,y,obj_WeaponTank);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>money+=100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
global.CutScene=false;
global.game_speed=1; 
room_goto_next();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (global.debug==true)
{
global.debug=false;
if instance_exists(obj_debug){with (obj_debug){instance_destroy();}}
}
else
{
global.debug=true;
instance_create(x,y,obj_debug);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
