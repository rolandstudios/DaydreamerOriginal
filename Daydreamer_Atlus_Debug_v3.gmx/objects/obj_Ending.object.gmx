<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>BossTrigger</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Sequence=1;
hit=true;
parting=100;
start_x=100;
scroll=.5;
prompt=true;

if instance_exists(obj_TextPromt_LG)      
with(obj_TextPromt_LG){instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if audio_is_playing(amb_windstorm)
    audio_stop_sound(amb_windstorm);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//stuff
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
room_goto(rm_Credits);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Sequence=Sequence+1;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,10,false);
        
    switch(Sequence)
    {      
        case 1: //GateKeeper         
        if (prompt)
        {
        if !instance_exists(obj_TextPromt_LG)        
        txt = instance_create(x,y-300,obj_TextPromt_LG);
        
        with (txt)
        {
        promt = "There is little time for explanations, # but I will attempt to tell you what you need to know.";
        hold=10; //last hold
        copystring_pos = 0;
        copystring = "";
        next_letter=true;
        header="Gate Keeper: "
        x_tilt=100;
        }
        
        prompt=false;
        }
        /*
        if !instance_exists(obj_TextPromt)
        {
        global.promt = " There is little time for explanations, # but I will attempt to tell you what you need to know. "

        with instance_create(200,200,obj_TextPromt)
            {
            hold=900;
            header=true;
            header_tag="Gate Keeper"
            gotit=true;
            }
        }
        */     
        break;

        case 2: //GateKeeper    
        if (prompt)
        {  
        if !instance_exists(obj_TextPromt_LG)        
        txt = instance_create(x,y-300,obj_TextPromt_LG);
        
        with (txt)
        {
        promt = "You see, a new hope for this world # began with a dream...";
        hold=10;
        copystring_pos = 0;
        copystring = "";
        next_letter=true
        header="Gate Keeper: "
        x_tilt=100;
        }
        
        prompt=false;
        }
       /* 
        if !instance_exists(obj_TextPromt)
        {
        global.promt = " You see, a new hope for this world # began with a dream... "

        with instance_create(200,200,obj_TextPromt)
            {
            hold=900;
            header=true;
            header_tag="Gate Keeper"
            gotit=true;
            }
        } */
            
        break;

        case 3:
        if instance_exists(obj_TextPromt_LG) obj_TextPromt_LG.close=true;
        break;
    }//End SWITCH
    
//INPUTS----------------------
if (master.paused==false)
{
if instance_exists(obj_EndGame_Mountains)
{
    if (abs(obj_EndGame_Mountains.move)&lt;4)
    {
    if (gamepad_button_check_pressed(global.playing_index, gp_face1)) || keyboard_check_pressed(vk_anykey)
        {    
        if instance_exists(obj_TextPromt)
            {
                with (obj_TextPromt) { instance_destroy();}
            }
             
        Sequence=Sequence+1;
        if (alarm[2]==-1) {prompt=true; alarm[2]=30;}
        
        //audio_play_sound(snd_selectA,10,false);
        
        if (Sequence&lt;3)
        {
        audio_sound_pitch(snd_droid_check,1.2*global.game_speed);
        audio_play_sound(snd_droid_check,10,false);
        
         
         if instance_exists(obj_TextPromt_LG)
            {
            obj_TextPromt_LG.red=true;
            obj_TextPromt_LG.alarm[2]=5;
            }
        }        
        }
    }
}
}

if(Sequence&gt;=2) &amp;&amp; (obj_EndGame_Spire.y&gt;=800)
{
if (alarm[1]==-1) alarm[1]=400;
    
   if (Sequence&gt;=4)
   { 
    if (alarm[1]&gt;0) &amp;&amp; (alarm[1]&lt;100) 
    {
    if !instance_exists(obj_Fader)
        {
        with instance_create(x,y,obj_Fader)
            {
            inc=.1;
            active=true;
            }
        }
    }
    }
}

if instance_exists(obj_TextPromt_LG) 
     {
     obj_TextPromt_LG.opac=0;
     //obj_TextPromt_LG.y_factor=920;
     obj_TextPromt_LG.grow_y_max=100;
     } 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
