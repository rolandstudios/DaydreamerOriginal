<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_PearStore_inside==0)
{
master.num+=1;
master.SWAP_spr_PearStore_inside=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_inside.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}
sprite_index=global.sprite[master.SWAP_spr_PearStore_inside];

if(master.SWAP_spr_PearStore_inside_collide==0)
{
master.num+=1;
master.SWAP_spr_PearStore_inside_collide=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_inside_collide.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num],  1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.SWAP_spr_PearStore_inside_top==0)
{
master.num+=1;
master.SWAP_spr_PearStore_inside_top=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_inside_top.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}


if instance_exists(obj_camera_offset_dummy) 
{
    y_offset=obj_camera_offset_dummy.y_offset;
}
else
{
    y_offset=0;
}
    
if instance_exists(par_HERO)
{
    hero_x=par_HERO.x;
    hero_y=par_HERO.y;
}

//HIDE SOME OBJECTS
if instance_exists(obj_Explosion_A) {with (obj_Explosion_A)instance_destroy();}
if instance_exists(obj_Explosion_B) {with (obj_Explosion_B)instance_destroy();}
if instance_exists(obj_Explosion_C) {with (obj_Explosion_C)instance_destroy();}
if instance_exists(obj_Explosion_B_mute) {with (obj_Explosion_B_mute)instance_destroy();}

if instance_exists(obj_GrassyHill_17) obj_GrassyHill_17.visible=false;
if instance_exists(obj_Ladder_long)   obj_Ladder_long.visible=false;



instance_deactivate_all(true);
//if instance_exists(master) 
instance_activate_object(master);
//if instance_exists(par_HERO) 
instance_activate_object(par_HERO);
//if instance_exists(obj_RedEnergyBar)  
instance_activate_object(obj_RedEnergyBar);
//if instance_exists(obj_Yellow_Energy) 
instance_activate_object(obj_Yellow_Energy);
//if instance_exists(obj_Weapon_Type) 
instance_activate_object(obj_Weapon_Type);
//if instance_exists(obj_warps) 
instance_activate_object(obj_warps);
//if instance_exists(obj_debug) instance_activate_object(obj_debug);
//if instance_exists(obj_camera_offset) 
instance_activate_object(obj_camera_offset);

//if instance_exists(obj_camera_offset_dummy) 
//instance_activate_object(obj_camera_offset_dummy);

snap = instance_create(x,y-y_offset,obj_camera_snap_to);

if instance_exists(snap)
{
    with(snap)
    {
        inc=25;
        image_xscale=20;
        image_yscale=20;
    }
}

//if instance_exists(obj_Orb) 
instance_activate_object(obj_Orb);
//if instance_exists(obj_Orb_Check) 
instance_activate_object(obj_Orb_Check);
//if instance_exists(obj_EnemyCheck)     
     //{
     instance_activate_object(obj_EnemyCheck); 
     if instance_exists(obj_EnemyCheck) obj_EnemyCheck.active=false;
     //}

if instance_exists(par_Top) par_Top.visible=false;

    with (instance_create(x,y,obj_PearStore_inside_collide))
    {
    sprite_index = global.sprite[master.SWAP_spr_PearStore_inside_collide];
    image_xscale = other.image_xscale*2;
    image_yscale = other.image_yscale*2;
    image_angle = other.image_angle;
    }
    
    with (instance_create(x,y,obj_PearStore_inside_top))
    {
    sprite_index = global.sprite[master.SWAP_spr_PearStore_inside_top];
    image_xscale = other.image_xscale;
    image_yscale = other.image_yscale;
    image_angle = other.image_angle;
    image_blend = other.image_blend;
    }

if instance_exists(par_HERO)
{    
par_HERO.x=x+200;
par_HERO.y=y+100;
}

instance_create(x-220,y+40,obj_Burgerman);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(par_Top) par_Top.visible=true;
/*
obj_RedEnergy.visible=true;
obj_YellowEnergy.visible=true;
obj_WeaponTank.visible=true;
obj_Monies_Single.visible=true;
obj_Monies_small.visible=true;
obj_Monies_Stack.visible=true;
*/

if instance_exists(obj_TextPromt) with(obj_TextPromt){instance_destroy();}

if instance_exists(snap) with (snap){instance_destroy();}
//UNHIDE SOME OBJECTS
if instance_exists(obj_GrassyHill_17) {obj_GrassyHill_17.visible=true;}



if instance_exists(par_Ladder)   
{
with(par_Ladder)
    {
    visible=true;
    }
}

if instance_exists(obj_RedEnergy)
{
with(obj_RedEnergy)
    {
    visible=true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

instance_deactivate_object(obj_WeaponTank);
instance_deactivate_object(obj_Monies_Single);
instance_deactivate_object(obj_Monies_small);
instance_deactivate_object(obj_Monies_Stack);
instance_deactivate_object(obj_MegaLoot);

if instance_exists(par_Top) par_Top.visible=false;
if instance_exists(obj_PearStore_inside_top) obj_PearStore_inside_top.visible=true;


if(par_HERO.x&gt;=x+400)
    {
    instance_activate_all();
    par_HERO.x=hero_x;
    par_HERO.y=hero_y;
    
    with (obj_PearStore_inside_collide){instance_destroy();}
    with (obj_PearStore_inside_top){instance_destroy();}
    with (obj_Burgerman){instance_destroy();}
    instance_create(x,y,obj_Curtain_short); //short curtain to avoid cliping
    instance_destroy();
    }
    else
    {
        instance_deactivate_object(par_Enemy);    
        instance_deactivate_object(par_Enemy_Body); 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_color(make_color_rgb(0,0,0));
draw_rectangle(0,0,x-400,view_yview+720, false); //left
draw_rectangle(0,0,view_xview+1280,y-241, false); //top
draw_rectangle(x+400,0,view_xview+1280,view_yview+720, false); //right
draw_rectangle(0,y+79,view_xview+1280,view_yview+720, false); //bottom

if sprite_exists(sprite_index)
{
    draw_self();
}
draw_set_color(c_white);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>600,291</point>
    <point>600,600</point>
  </PhysicsShapePoints>
</object>
