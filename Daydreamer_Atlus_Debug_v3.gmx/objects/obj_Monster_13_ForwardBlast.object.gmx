<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wisp_A</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(irandom_range(1,2))
{
case 1:
audio_sound_pitch(snd_monster13_Zap_A, random_range(.9,1.1)*global.game_speed);
audio_play_sound(snd_monster13_Zap_A,10,false);
break

case 2:
audio_sound_pitch(snd_monster13_Zap_B, random_range(.9,1.1*global.game_speed));
audio_play_sound(snd_monster13_Zap_B,10,false);
break;
}

if instance_exists(obj_Monster_13)
{ 
 with (instance_create(x,y,obj_FireFlare))
    {
    image_xscale =3*-obj_Monster_13.image_xscale;
    image_yscale =3;
    }
}

type=2;
hsp=0;

bounce=false;
damage=5*global.difficulty;
speedinc=20;
vsp=-0;

        last_x_A=x;
        last_y_A=y;
        last_angle_A=image_angle;
        
        last_x_B=x;
        last_y_B=y;
        last_angle_B=image_angle;
        
        last_x_C=x;
        last_y_C=y;
        last_angle_C=image_angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if place_meeting(x+hsp,y+vsp,par_wall) &amp;&amp; (bounce==false)
{
if !place_meeting(x+hsp,y+vsp,obj_platform_128x4)
{
with instance_create(x,y,obj_Monster_13_Frag)
{
    vsp=other.hsp;
    hsp=other.hsp*-1;
}
with instance_create(x,y,obj_Monster_13_Frag)
{
    vsp=other.hsp*.5;
    hsp=other.hsp*-1;
}
with instance_create(x,y,obj_Monster_13_Frag)
{
    vsp=-other.hsp*.5;
    hsp=other.hsp*-1;
}
with instance_create(x,y,obj_Monster_13_Frag)
{
    vsp=-other.hsp;
    hsp=other.hsp*-1;
}

instance_destroy();
}
}
image_speed=1*global.game_speed;

x+=hsp*global.game_speed;
y+=vsp*global.game_speed;

        last_x_C=last_x_B;
        last_y_C=last_y_B;
        
        
        last_x_B=last_x_A;
        last_y_B=last_y_A;
        
        
        last_x_A=x;
        last_y_A=y;
        

if (y&gt;room_height) || (y&lt;0) instance_destroy();
if (x&gt;room_width) || (x&lt;0) instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_HERO">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
shader_set(shdr_blackandwhite);
draw_sprite_ext(sprite_index, image_index-3,last_x_C, last_y_C, image_xscale, image_yscale, last_angle_C, c_white, .25 );
draw_sprite_ext(sprite_index, image_index-2,last_x_B, last_y_B, image_xscale, image_yscale, last_angle_B, c_white, .5 );
draw_sprite_ext(sprite_index, image_index-1,last_x_A, last_y_A, image_xscale, image_yscale, last_angle_A, c_white, .75 );
draw_set_blend_mode(bm_add);
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, c_white, 1 );
draw_set_blend_mode(bm_normal);
shader_reset();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,10</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
