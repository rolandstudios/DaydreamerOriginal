<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.spr_Rabbit_Egg_A==0)
{
master.num+=1;
master.spr_Rabbit_Egg_A=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Rabbit_Egg_A.png",12,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.spr_Rabbit_Egg_B==0)
{
master.num+=1;
master.spr_Rabbit_Egg_B=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Rabbit_Egg_B.png",12,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.spr_Rabbit_Egg_C==0)
{
master.num+=1;
master.spr_Rabbit_Egg_C=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Rabbit_Egg_C.png",12,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}


switch(irandom_range(1,3))
{
case 1:
sprite_index=global.sprite[master.spr_Rabbit_Egg_A];
break;

case 2:
sprite_index=global.sprite[master.spr_Rabbit_Egg_B];
break;

case 3:
sprite_index=global.sprite[master.spr_Rabbit_Egg_C];
break;
}

 switch(irandom_range(1,12))
    {
    
    case 1: color = make_color_rgb(242,100,0); break;
    case 2: color = make_color_rgb(247,138,0); break;
    case 3: color = make_color_rgb(235,230,0); break;
    case 4: color = make_color_rgb(0,224,16); break;
    
    case 5: color = make_color_rgb(25,225,255); break;
    case 6: color = make_color_rgb(0,131,220); break;
    case 7: color = make_color_rgb(223,0,196); break;
    case 8: color = make_color_rgb(249,13,195); break;
    case 9: color = make_color_rgb(161,0,170); break;
    
    case 10: color = make_color_rgb(254,0,4); break;
    case 11: color = make_color_rgb(254,0,4); break;
    case 12: color = make_color_rgb(254,0,4); break;
    }
color = make_color_hsv(colour_get_hue(color),colour_get_saturation(color)*.5,colour_get_value(color));
    
      
//while place_meeting(x,y,par_wall) y-=1;
image_speed=.5*global.game_speed;

grav=.6;
hsp=0;
vsp=0;
image_blend=color;
xplode=5;
xpos=x;
ypos=y;

alarm[0]=irandom_range(200,500)/global.game_speed;
rate=round(alarm[0]*.5);
alarm[1]=rate;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend=color;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_pitch(snd_lockON,global.game_speed);
audio_play_sound(snd_lockON,10,false);
rate=rate*.5;
image_blend=c_red;
alarm[2]=2/global.game_speed;
alarm[1]=rate;
vsp=irandom_range(-8,-4);
hsp=irandom_range(-4,4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_Aura_Ripple);

/*
if !instance_exists(obj_AuraFlash)
    instance_create(x,y,obj_AuraFlash); 
*/
    
repeat(xplode)
{
with instance_create(x,y,obj_Egg_Detonation)
    {
    image_xscale=random_range(.5,1.5);
    image_yscale=image_xscale;
    image_angle=random_range(0,360);   
    }
instance_create(x,y,obj_Smoke_A);
x=xpos+random_range(-128, 128);
y=ypos+random_range(-128, 128);
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp +=grav*global.game_speed;

if place_meeting(x,y+vsp,par_wall) 
{ 
    while (!place_meeting(x,y+vsp,par_wall)) y=y-1;
     
    if (sign(vsp) == 1)
    {
        grounded = 1; //Enable First Jump
        
    }
    vsp = 0;   
}

if(vsp!=0) 
    {
    image_angle+=hsp*global.game_speed;
    }
    else
    {
    hsp=0;
    }
    
if !place_meeting(x-hsp,y,par_wall) x-=hsp;    
    
y+=vsp*global.game_speed;

image_speed=.5*global.game_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend=color;
draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
