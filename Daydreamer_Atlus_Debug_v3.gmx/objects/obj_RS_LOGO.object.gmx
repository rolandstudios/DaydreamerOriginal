<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>801</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_cursor</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>-1</sprite>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.platform==3)
{
if !instance_exists(obj_DJ) instance_create(0,0,obj_DJ);
with (obj_DJ){audio_sound_gain(music_track, global.mus,0);audio_master_gain(global.vol);}
if  audio_is_playing(msc_Title_Intro) audio_stop_sound(msc_Title_Intro);
audio_sound_gain(msc_Title_Intro, global.mus,0) //was set to half
audio_sound_pitch(msc_Title_Intro,1)
audio_play_sound(msc_Title_Intro,10,true);
audio_play_sound(amb_birds,9,true);    
global.sprite[0]= sprite_add(working_directory+"\Imports\bg_empty.png",0,0,0,0,0);
global.background[0]= background_add(working_directory+"\Imports\bg_empty.png",false,true);
}

//----------------------TITLE SCREEN
if(master.SWAP_spr_gamepad_0==0)
{
master.num+=1;
master.SWAP_spr_gamepad_0=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Sprites\spr_gamepad_0.png",1,0,0,1,1);
}

if(master.spr_Cover_Olivia==0)
{
master.num+=1;
master.spr_Cover_Olivia=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Cover_Olivia.png",30,0,1,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.spr_Cover_Collector==0)
{
master.num+=1;
master.spr_Cover_Collector=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Cover_Collector.png",30,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.spr_Daydreamer_LOGO==0)
{
master.num+=1;
master.spr_Daydreamer_LOGO=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Daydreamer_LOGO.png",48,0,1,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.spr_Awakened==0)
{
master.num+=1;
master.spr_Awakened=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Awakened.png",48,0,1,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.75, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.spr_Cover_BG==0)
{
master.num+=1;
master.spr_Cover_BG=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Cover_BG.png",1,0,0,0,0);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_Cover_top==0)
{
master.num+=1;
master.spr_Cover_top=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Cover_top.png",1,0,0,0,0);
}

//---------------------INTRO
if(master.spr_Horizon==0)
{
master.num+=1;
master.spr_Horizon=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Horizon.png",12,0,0,640,238);
}

if(master.RS_LOGO ==0)
{
master.num+=1;
master.RS_LOGO=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\RS_LOGO_strip.png",50,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.spr_Atlus_Logo==0)
{
master.num+=1;
master.spr_Atlus_Logo=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Atlus_Logo.png",1,0,1,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

sprite_index=global.sprite[master.spr_Atlus_Logo];


if !instance_exists(obj_DJ) instance_create(0,0,obj_DJ)

Altus_hold=200;
Atlus_fade=0;

RS_fade=0;
RS_index=0;

RS_index_A=RS_index;
RS_index_B=RS_index;
RS_index_C=RS_index;

RS_shift_x=-30; 

year=9999;
image_index=0;
image_speed=.5;
float=0;
move=0;
text_alpha=0;
text_y=720;
finish=false;
load=false;

year_yscale=.1;
year_xscale=.1;

grow_y=false;
count_start=false;
year_hold=true;
count_alpha=.5;
curtain=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.load_config=true; //DONT LOAD THIS OBJECT AGAIN FROM MASTER
room_goto_next();
//OTHER STUFF -----
audio_sound_gain(snd_confirm_tab_B,1,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>year_hold=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count_start=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alarm[5]==-1)
{
alarm[5]=3;
curtain=true;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_pitch(snd_Points_D,.8);
audio_sound_gain(snd_Points_D,.2,0);
audio_play_sound(snd_Points_D,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_Star_ctl) with (obj_Star_ctl){instance_destroy();}
if instance_exists(obj_Star) with (obj_Star){instance_destroy();}
instance_create(x,y,obj_Intialize_Game);

if (alarm[5]==-1)
{
alarm[5]=3;
curtain=true;
}
//instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (Altus_hold&lt;=0) //RS PART
{
    if (alarm[0]==-1) alarm[0]=1450; //was 900
    sprite_index=global.sprite[master.RS_LOGO];        
    
}
else //ATLUS PART
{
    RS_fade=0;
    
    if (Altus_hold&gt;50)
    {
     if (Atlus_fade&lt;1) Atlus_fade+=.02;
    }
    else
    {
     if (Atlus_fade&gt;0) Atlus_fade-=.02;
    }

    Altus_hold-=1;
    

    if (Altus_hold&lt;=0) 
    {
    RS_fade=1;
    RS_index=0;
         
    sprite_index=global.sprite[master.RS_LOGO];
    

     if !instance_exists(obj_Horizon)
        {
        with instance_create(640,720,obj_Horizon){image_alpha=0;inc=.005} //was .002
        }
        
   
               
      
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if window_get_fullscreen()
{
offset=1.5;
x=640;
y=360;
}
else
{
offset=1;
x=640;
y=360;
}

if (Altus_hold&lt;=0) //END OF ATLUS HOLD
{
    image_xscale=1;
    image_yscale=1;
    
    //DRAW RS LOGO -------------   
    last_frame=sprite_get_number(sprite_index)-1;
    
    if sprite_exists(sprite_index) 
    {
       if instance_exists(obj_Horizon)
       { 
                                      
           if (obj_Horizon.image_alpha&gt;=.4)
            { 
            if (RS_index_C&gt;=0) &amp;&amp; (RS_index_C&lt;=last_frame)  draw_sprite_ext(sprite_index,RS_index_C,(x+RS_shift_x)*offset,y*offset,offset,offset,0,c_white,RS_fade*.25);
            if (RS_index_B&gt;=0) &amp;&amp; (RS_index_B&lt;=last_frame)  draw_sprite_ext(sprite_index,RS_index_B,(x+RS_shift_x)*offset,y*offset,offset,offset,0,c_white,RS_fade*.5);
            if (RS_index_A&gt;=0) &amp;&amp; (RS_index_A&lt;=last_frame)  draw_sprite_ext(sprite_index,RS_index_A,(x+RS_shift_x)*offset,y*offset,offset,offset,0,c_white,RS_fade*.75);
                    
            if(RS_fade!=0)
            { 
            draw_sprite_ext(sprite_index,RS_index,(x+RS_shift_x)*offset,y*offset,offset,offset,0,c_white,RS_fade);
            draw_set_blend_mode(bm_add);
            draw_sprite_ext(sprite_index,RS_index,(x+RS_shift_x)*offset,y*offset,offset,offset,0,c_white,RS_fade);
            draw_set_blend_mode(bm_normal);
            }   
            
            RS_index+=.5;
            
            if(RS_index&gt;=last_frame) 
            {
            RS_index=last_frame;
            if (RS_fade&gt;0) RS_fade-=.1;
             
            if (RS_fade==.9) &amp;&amp; !audio_is_playing(snd_confirm_tab_B) 
                {
                audio_sound_gain(snd_confirm_tab_B,.1,0);
                audio_play_sound(snd_confirm_tab_B,10,false);
                }
            }
            
            
            RS_index_A = RS_index-2;
            RS_index_B = RS_index-4;
            RS_index_C = RS_index-6;
            
            RS_shift_x+=.4;
            
            }
            else
            {
             if (obj_Horizon.image_alpha&gt;=.35) &amp;&amp; (RS_index&lt;49) //was  (obj_Horizon.image_alpha&gt;=.35)
                {
                if !audio_is_playing(snd_RS_LOGO) audio_play_sound(snd_RS_LOGO,10,false);
                }
            }
        }
    }
    
    //END DRAW RS LOGO -------------
    
    
    if(RS_index&gt;=49) &amp;&amp; !audio_is_playing(snd_confirm_tab_B) //PROLOGUE TIME ---------
    {
          
            if (alarm[0]&gt;100)
            draw_set_alpha(1); 
            else
            draw_set_alpha(text_alpha);
            
                 
            draw_set_valign(fa_center);
            draw_set_halign(fa_center);
            
            draw_set_colour(c_yellow);
            draw_set_font(fnt_Score);
            
            text_x=200;
            text_y=380;
                    
            
            if (year_xscale&lt;1) &amp;&amp; (grow_y==false)
                {
                    year_xscale*=2;
                    year_yscale=.1;           
                
                    if (year_xscale&gt;1) grow_y=true; 
                }
                
                if (grow_y==true)
                {
                    if (year_yscale&lt;.5) year_yscale*=2;  
                    if (year_xscale&gt;.5) year_xscale*=.5;                   
                    if (year_xscale&lt;.5) year_xscale=.5;                 
                }                
                
                if (year_yscale&gt;=.5) 
                    {
                    year_yscale=.5;
                    if (alarm[3]==-1) alarm[3]=20; //PAUSE BEFORE COUNTDOWN
                    }
                    
                if (count_alpha&lt;1) count_alpha+=.05;
                    
            draw_set_alpha(count_alpha)
            draw_set_blend_mode(bm_add);
            //original
            //draw_text_transformed((text_x+90)*offset,(text_y-160)*offset,"Year: " + string(year),year_xscale*offset,year_yscale*offset,0);
            //centered
            
            if (year_hold==true)
            draw_text_transformed((640)*offset,(360)*offset,"Year: " + string(year),1.1*year_xscale*offset,1.1*year_yscale*offset,0);
            draw_set_blend_mode(bm_normal);
            draw_set_alpha(1);
            
            if (year&gt;2184) &amp;&amp; (count_start==true) //COUNT DOWN
                {
                year-=irandom_range(100,150);
                if (alarm[1]==-1)
                alarm[1]=2;
                }
                
            if (year&lt;2184) //FINISH COUNTING DOWN
                {
                audio_play_sound(snd_droid_check,10,false);
                year=2184;
                if (alarm[4]==-1) alarm[4]=30;
                }
            
            draw_set_alpha(text_alpha); 
            draw_set_colour(c_white);
            draw_set_halign(fa_left);
            draw_set_valign(fa_center);
            draw_set_font(fnt_Orbitron);
                
            draw_text_transformed(text_x*offset,text_y+  0*offset,"Long ago, an advanced interstellar race descended upon our planet in search of resources and a new",.9*offset,.9*offset,0);
            draw_text_transformed(text_x*offset,text_y+ 15*offset,"home. Our civilizations clashed, but in the end they were too powerful and annexed our world." ,.9*offset,.9*offset,0); 
            draw_text_transformed(text_x*offset,text_y+ 30*offset,"However, a new renaissance is soon to begin.",.9*offset,.9*offset,0); 
            
            draw_text_transformed(text_x*offset,text_y+ 60*offset,"Recently, a civil war has broken out between two major factions of aliens. One faction believes in",.9*offset,.9*offset,0); 
            draw_text_transformed(text_x*offset,text_y+ 75*offset,"coexisting with humans. The other seeks to control all life. This dark force and its thirst for power has",.9*offset,.9*offset,0); 
            draw_text_transformed(text_x*offset,text_y+ 90*offset,"spawned an army of genetically modified monsters that have swept over the planet and consumed",.9*offset,.9*offset,0);
            draw_text_transformed(text_x*offset,text_y+105*offset,"nearly all life.",offset,offset,0); 
                
            draw_text_transformed(text_x*offset,text_y+135*offset,"The surviving benevolent life forms have been imprisoned deep under the Earth's surface, forced into a",.9*offset,.9*offset,0); 
            draw_text_transformed(text_x*offset,text_y+150*offset,"sleepless state, an eternal purgatory. The Empress of those imprisoned, often referred to as the "+chr(34)+"Gate",.9*offset,.9*offset,0); 
            draw_text_transformed(text_x*offset,text_y+165*offset,"Keeper"+chr(34)+", is reaching out to the last surviving human held captive in stasis.",.9*offset,.9*offset,0); 
            
            draw_text_transformed(text_x*offset,text_y+195*offset,"A Daydreamer deep in sleep, the last hope for a dying world.",.9*offset,.9*offset,0); 
            draw_set_alpha(1);
        
                            
                if keyboard_check_pressed(vk_anykey)  {load=true; if (alarm[2]==-1) alarm[2]=1;}
                if gamepad_button_check_pressed(global.playing_index, gp_face1)  {load=true; if (alarm[2]==-1) alarm[2]=1;}
                if gamepad_button_check_pressed(global.playing_index, gp_face2)  {load=true; if (alarm[2]==-1) alarm[2]=1;}
                if gamepad_button_check_pressed(global.playing_index, gp_face3)  {load=true; if (alarm[2]==-1) alarm[2]=1;}
                if gamepad_button_check_pressed(global.playing_index, gp_face4)  {load=true; if (alarm[2]==-1) alarm[2]=1;}
                if gamepad_button_check_pressed(global.playing_index, gp_start)   {load=true; if (alarm[2]==-1) alarm[2]=1;}
                
                if (finish)
                {
                if instance_exists(obj_Star_ctl) with (obj_Star_ctl){instance_destroy();}
                if instance_exists(obj_Star) with (obj_Star){instance_destroy();}
                instance_create(x,y,obj_Intialize_Game);       
                load=true; 
                if (alarm[2]==-1) alarm[2]=1;
                }
                else
                {
                  if !instance_exists(obj_Star_ctl) instance_create(x,y,obj_Star_ctl);                                                                            
                }
        
        if (alarm[0]&lt;100) //COMING TO CLOSE LAST 100 FRAMES FADE OUT ALL
        {    
            obj_Star.fade=false;
            obj_Star.fade_down=true;  
            
            if (text_alpha&gt;0) text_alpha-=.01;
            if (text_alpha&lt;=.01) load=true;   
            
            if instance_exists(obj_Horizon) obj_Horizon.image_alpha=text_alpha;            
        }
        else //FADE IN TEXT AND STARS
        {
            obj_Star.fade=true;  
              
            if (year&lt;=2184)&amp;&amp;(alarm[0]&lt;1350) &amp;&amp; (year_hold==false)//was 800
            {
            if (text_alpha&lt;1) text_alpha+=.01; 
            }
        }   
        
            if (load) //LOADING CURTAIN
            {
            draw_set_color(c_black);
            draw_set_alpha(1);
            draw_rectangle(0,0, 1280*offset,720*offset, false);
            draw_set_color(c_white);
            draw_set_halign(fa_center);
            draw_set_valign(fa_center);
            draw_set_font(fnt_Astron);
            draw_text(1180*offset,680*offset,"- Loading");
            draw_set_alpha(1);
            }
    
    }//END PROLOGUE TIME
}
else //ATLUS LOGO 
{
    if sprite_exists(sprite_index)
        draw_sprite_ext(sprite_index,0,640*offset,360*offset,.65*offset,.65*offset,0,c_white,Atlus_fade);
}

if (curtain)
{
        draw_set_alpha(1);       
        draw_rectangle_colour(0,0,1280*offset,720*offset,c_black,c_black,c_black,c_black,false);
        draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
