<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target_count=5;

target_A=false;
target_B=false;
target_C=false;
target_D=false;
target_E=false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_pitch(snd_lockON,global.game_speed);

switch(target_count)
  {
    case 1:
    audio_play_sound(snd_lockON,10,false);
    A_x=par_HERO.x+irandom_range(-32,32);
    A_y=par_HERO.y+irandom_range(-32,32);
    A_alpha=0;
    target_A=true;
    break;
    
    case 2:
    audio_play_sound(snd_lockON,10,false);
    B_x=par_HERO.x+irandom_range(-32,32);
    B_y=par_HERO.y+irandom_range(-32,32);
    B_alpha=0;
    target_B=true;
    break;
    
    case 3:
    audio_play_sound(snd_lockON,10,false);
    C_x=par_HERO.x+irandom_range(-32,32);
    C_y=par_HERO.y+irandom_range(-32,32);
    C_alpha=0;
    target_C=true;
    break;
    
    case 4:
    audio_play_sound(snd_lockON,10,false);
    D_x=par_HERO.x+irandom_range(-32,32);
    D_y=par_HERO.y+irandom_range(-32,32);
    D_alpha=0;
    target_D=true;
    break;
    
    case 5:
    audio_play_sound(snd_lockON,10,false);
    E_x=par_HERO.x+irandom_range(-32,32);
    E_y=par_HERO.y+irandom_range(-32,32);
    E_alpha=0;
    target_E=true;
    break;

    
  }//END SWITCH

  target_count-=1;
  

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_HERO) ||  !instance_exists(obj_MegaBot) instance_destroy();
else
{


if (alarm[1]=-1) alarm[1]=irandom_range(2,3)/global.game_speed;

//if(target_count==0)
if(obj_MegaBot_view.image_index&gt;13)
{
audio_sound_pitch(snd_Laser_Cannon_A,global.game_speed);
audio_play_sound(snd_Laser_Cannon_A,10,false);

if (target_A) 
    {
    
    with instance_create(x,y,obj_MegaBot_Blast)
        {
        speed=random_range(1,4);
        image_xscale=random_range(.25,1);
        target_x=other.A_x;
        target_y=other.A_y;
        }
    }
if (target_B) 
    {
    
    with instance_create(x,y,obj_MegaBot_Blast)
        {
        speed=random_range(1,4);
        image_xscale=random_range(.25,1);
        target_x=other.B_x;
        target_y=other.B_y;
        }
    }
if (target_C) 
    {
    
    with instance_create(x,y,obj_MegaBot_Blast)
        {
        speed=random_range(1,4);
        image_xscale=random_range(.25,1);
        target_x=other.C_x;
        target_y=other.C_y;
        }
    }
if (target_D) 
    {
    
    with instance_create(x,y,obj_MegaBot_Blast)
        {
        speed=random_range(1,4);
        image_xscale=random_range(.25,1);
        target_x=other.D_x;
        target_y=other.D_y;
        }
    }
if (target_E) 
    {
    
    with instance_create(x,y,obj_MegaBot_Blast)
        {
        speed=random_range(1,4);
        image_xscale=random_range(.25,1);
        target_x=other.E_x;
        target_y=other.E_y;
        }
    }   

instance_destroy();
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (target_A) 
    {
    if (A_alpha&lt;1) A_alpha=A_alpha+.1*global.game_speed;
    
    draw_sprite_ext(spr_LockON,0,A_x,A_y,2-A_alpha,2-A_alpha,360-(360*A_alpha),c_white,A_alpha);
    }
if (target_B) 
    {
    if (B_alpha&lt;1) B_alpha=B_alpha+.1*global.game_speed;
    
    draw_sprite_ext(spr_LockON,0,B_x,B_y,2-B_alpha,2-B_alpha,360-(360*B_alpha),c_white,B_alpha);
    }
if (target_C) 
    {
    if (C_alpha&lt;1) C_alpha=C_alpha+.1*global.game_speed;
    
    draw_sprite_ext(spr_LockON,0,C_x,C_y,2-C_alpha,2-C_alpha,360-(360*C_alpha),c_white,C_alpha);
    }
if (target_D) 
    {
    if (D_alpha&lt;1) D_alpha=D_alpha+.1*global.game_speed;
    
    draw_sprite_ext(spr_LockON,0,D_x,D_y,2-D_alpha,2-D_alpha,360-(360*D_alpha),c_white,D_alpha);
    }
if (target_E) 
    {
    if (E_alpha&lt;1) E_alpha=E_alpha+.1*global.game_speed;
    
    draw_sprite_ext(spr_LockON,0,E_x,E_y,2-E_alpha,2-E_alpha,360-(360*E_alpha),c_white,E_alpha);
    }
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
