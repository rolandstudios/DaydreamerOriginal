<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_explosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


xpos=x; //original x and y
ypos=y;

loot=true;
mute=false;

size=irandom_range(1,1)

tempo=true;
tear=true;
boom=true;

can_tempo=true;

switch(size)
{
case 1: //small
xplode=6;
flash=false;
range=32;
rate=5;
scale=.8;
break;

case 2: //medium
xplode=12;
flash=false;
range=64;
rate=5;
scale=1;
break;

case 3: //large
xplode=24;
flash=true;
range=128;
rate=2;
scale=1.2;
break;
}

tempo_rate=2; 
tear_rate=21;
boom_rate=50;
bomb_rate=200;


temp_min_depth=-2;
temp_max_depth=-4;

//NORMALY ON
instance_create(x,y,obj_Aura_Ripple_stat);

    



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

var cycle
if (size==1) cycle=1; else cycle=2;

repeat(cycle)
{
x=xpos+random_range(-range,range)*image_yscale;
y=ypos+random_range(-range,range)*image_yscale;

with instance_create(x,y,obj_Explosion_B_mute)
    {
    mute=other.mute;
    image_xscale=random_range(.8,1.5)*other.scale;
    image_yscale=image_xscale;
    image_angle=random_range(0,360);   
    loot=other.loot;
    }
}

if (xplode&gt;=2)
{   
    if (size==2)
    {
    x=xpos+random_range(-range*.5,range*.5)*image_yscale;
    y=ypos+random_range(-range*.5,range*.5)*image_yscale;
    }
    else
    {     
    x=xpos+random_range(-range,range)*image_yscale;
    y=ypos+random_range(-range,range)*image_yscale;
}

with instance_create(x,y,obj_Smoke_A)
    {
    image_xscale=random_range(.8,1.2)*other.scale;
    image_yscale=image_xscale;  
    }
}
       
xplode=xplode-1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if !audio_is_playing(snd_Grenade) 
{
audio_sound_pitch(snd_Grenade,random_range(.9,1.1)*global.game_speed);
audio_play_sound(snd_Grenade,14,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(snd_Grenade_short) 
audio_sound_pitch(snd_Grenade_short,random_range(.9,1.1)*global.game_speed);


if (irandom_range(1,2)==1)
audio_play_sound(snd_Grenade_short,16,false);
else
audio_play_sound(snd_explosion_A,16,false);





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (tear==true)
{
//TEMPO EXPLODE
switch(irandom_range(1,3))
{
case 1:
audio_sound_pitch(spr_Explode_After_Burn,random_range(.9,1.1)*global.game_speed);
audio_play_sound(spr_Explode_After_Burn,11,false);
break;

case 2:
if !audio_is_playing(spr_Explode_Tear_A)
audio_sound_pitch(spr_Explode_Tear_A,random_range(.9,1.1)*global.game_speed);
audio_play_sound(spr_Explode_Tear_A,12,false);
break;

case 3:

if !audio_is_playing(spr_Explode_Tear_B)
audio_sound_pitch(spr_Explode_Tear_B,random_range(.9,1.1)*global.game_speed);

if (irandom_range(1,6)!=1)
audio_play_sound(spr_Explode_Tear_A,12,false);
else
audio_play_sound(spr_Explode_Tear_B,13,false);
break;
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TEMPO EXPLODE
if !audio_is_playing(snd_tripple_sound) &amp;&amp; (tempo==true)
{
audio_sound_pitch(snd_tripple_sound,random_range(1.1,1.2)*global.game_speed);
audio_play_sound(snd_tripple_sound,15,false);
}

if (can_tempo)
{
//TEMPO SCATTER
x=xpos+random_range(-range, range)*image_yscale;
y=ypos+random_range(-range, range)*image_yscale;

with instance_create(x,y,obj_Explosion_tempo)
    {
    scale=random_range(.8,1.4)*other.scale;
    image_xscale=scale;
    image_yscale=scale;
    depth=irandom_range(other.temp_min_depth,other.temp_max_depth);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_PearStore_inside) instance_destroy();
if (instance_number(obj_Explosion_A)&gt;=2) mute=true; else mute=false;
if (flash)
{
if !instance_exists(obj_AuraFlash)
    instance_create(x,y,obj_AuraFlash); 
    flash=false;
}

switch(size)
{
case 1: //small
range=32;
rate=5;
scale=.8;
break;

case 2: //medium
range=64;
rate=5;
scale=1;
break;

case 3: //large
range=128;
rate=2;
scale=1.2;
break;
}

//TEMPO

//if (instance_number(obj_Explosion_A)&lt;3)
//{
if (alarm[0]==-1) alarm[0]=tempo_rate+irandom_range(-1,2);
//TEAR
if (alarm[1]==-1) alarm[1]=tear_rate;

//BURN
if (alarm[2]==-1) alarm[2]=boom_rate;

//BOMB
if (alarm[3]==-1) 
    {
    alarm[3]=bomb_rate;
    bomb_rate=irandom_range(20,200);
    }
//}

if (alarm[5]=-1) alarm[5]=rate; //MAIN EXPLOSIONS


if(xplode&lt;=0)
{
// if !audio_is_playing(snd_Grenade)// &amp;&amp; (size&gt;1) 
 audio_play_sound(snd_Grenade,10,false);
 instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_add);
draw_self();
draw_set_blend_mode(bm_normal);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
