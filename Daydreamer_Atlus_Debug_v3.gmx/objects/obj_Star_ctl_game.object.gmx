<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>110</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>amount=.04*1400;
scroll_max=4;
var a
master_speed=2;
horizon=room_height-400;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Layer 0
Current_Layer=0;

for (a=0; a&lt;amount; a+=1)
{
with instance_create(irandom_range(view_xview,view_xview+1400),irandom_range(0,horizon),obj_Star_game)
    {
    direction=180;
    hsp=(other.Current_Layer+1)*2;
    depth=other.depth-5;
    scale=1+random_range(0,1);
    part_x=other.scroll_max-(other.Current_Layer*.75);
    part_y=other.scroll_max-(other.Current_Layer*.75);
    }
}

//Layer 1
Current_Layer=1;
for (a=0; a&lt;amount; a+=1)
{
with instance_create(irandom_range(view_xview,view_xview+1400),irandom_range(0,horizon),obj_Star_game)
    {
    direction=180;
    hsp=(other.Current_Layer+1)*2;
    depth=other.depth-4;
    scale=.75+random_range(0,1);
    part_x=other.scroll_max-(other.Current_Layer*.75);
    part_y=other.scroll_max-(other.Current_Layer*.75);

    }
}

//Layer 2
Current_Layer=2;
for (a=0; a&lt;amount; a+=1)
{
with instance_create(irandom_range(view_xview,view_xview+1400),irandom_range(0,horizon),obj_Star_game)
    {
    direction=180;
    hsp=(other.Current_Layer+1)*2;
    depth=other.depth-3;
    scale=.5+random_range(0,1);
    part_x=other.scroll_max-(other.Current_Layer*.75);
    part_y=other.scroll_max-(other.Current_Layer*.75);

    }
}

//Layer 3
//BACK LAYER
Current_Layer=3;
for (a=0; a&lt;amount; a+=1)
{
with instance_create(irandom_range(view_xview,view_xview+1400),irandom_range(0,horizon),obj_Star_game)
    {
    direction=180;
    hsp=.5+random_range(0,1)*other.master_speed;
    depth=other.depth-2;
    scale=.25+random_range(0,1);
    part_x=other.scroll_max-(other.Current_Layer*.75);
    part_y=other.scroll_max-(other.Current_Layer*.75);

    }
}


//Layer 4 NEBULA
Current_Layer=4;
for (a=0; a&lt;room_width; a+=irandom_range(1500,3000))
{
with instance_create(a,0,obj_nebula)
    {
    depth=other.depth-1;
    scale=.75+random_range(0,1); //was +random_range(0,1);
    image_xscale=scale;
    image_yscale=scale;
    
    image_alpha=.75;
    var part= random_range(1.1,1.5);
    part_x=part;
    part_y=part;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
scale = 1 * (room_width / background_get_width(bg_Earth));

//scale = 1 * (room_width / background_width[0]);
background_xscale[0] = scale;
//background_yscale[0] = scale;
background_y[0] = room_height- background_get_height(bg_Earth);
draw_background_ext(bg_Earth, 0, background_y[0], background_xscale[0], background_yscale[0], 0, c_white, .1); 
draw_set_blend_mode(bm_add);
draw_background_ext(bg_Earth, 0, background_y[0], background_xscale[0], background_yscale[0], 0, c_white, 1); 
draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
