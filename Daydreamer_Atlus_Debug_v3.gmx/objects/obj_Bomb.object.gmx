<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_AuraFlash</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>par_Shoot</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(par_HERO)
{
damage=.001;
detonate=false;
star_frame=0;
max_damage=1;

    par_HERO.image_speed=.5*global.game_speed;
    par_HERO.image_speed=0;  

if instance_exists(obj_Screen_Darken) 
    with (obj_Screen_Darken){instance_destroy();}

    instance_create(x,y,obj_Screen_Darken);
}
else
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_Screen_Darken)
obj_Screen_Darken.active=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>            if (detonate==false)
            {
            detonate=true;
            audio_stop_sound(snd_BombCharge);
            audio_sound_pitch(snd_GP_ExplosionOnly,global.game_speed);
            audio_play_sound(snd_GP_ExplosionOnly,101,false);
            audio_sound_pitch(snd_GP_Detonate_Trail,global.game_speed);
            audio_play_sound(snd_GP_Detonate_Trail,101,false);
            detonate=true;
            par_HERO.neck_fire=0;
            image_xscale=.1;
            image_yscale=.1;
            image_alpha=.75;
            fade=0;
            sprite_index=spr_AuraFlash;
            visible=true;
            
            if (global.HERO_type==0)
            par_HERO.sprite_index=spr_Young_Olivia_Bomb_Cast;
            else
            par_HERO.sprite_index=spr_Old_Olivia_Bomb_Cast;
            
            par_HERO.image_index=0;
            instance_create(x,y-par_HERO.y_shoot_offset,obj_Aura_Ripple_stat);
            }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(par_HERO)
{
    if(!detonate)
    {
        x=par_HERO.x;
        y=par_HERO.y-par_HERO.y_shoot_offset;  
        sprite_index=spr_wisp_A;
        image_speed=.5;
        image_alpha=.2;
        
        if (par_HERO.firing) 
        {
        audio_sound_pitch(snd_BombCharge,global.game_speed);
        
        if !audio_is_playing(snd_BombCharge) 
            audio_play_sound(snd_BombCharge, 10, false );
    
            ang  = irandom_range(1,360);
            dist = irandom_range(1,350);
            wisp_x = x + lengthdir_x(dist,ang);
            wisp_y = y + lengthdir_y(dist,ang)-par_HERO.y_shoot_offset;
            
            with instance_create(wisp_x,wisp_y,obj_PowerUP_Wisp) 
            {
            scale=random_range(.1,.15);
            image_xscale=scale+other.damage*1.5;
            image_yscale=scale*.5;
            s_speed=1+other.damage*14;
            direction = point_direction(x, y, par_HERO.x, par_HERO.y-par_HERO.y_shoot_offset)
            image_angle=direction;
            }
       
        
        
        
        
        if (damage&lt;max_damage)
            {
            damage+=.015*global.game_speed; //was .01;
            par_HERO.energy-=.55*global.game_speed; //.5
            }
        }
        else
        {
            detonate=true;
            par_HERO.neck_fire=0;
            par_HERO.bombing=false;
        }
        
         if (detonate) || (par_HERO.energy&lt;2.2) || (par_HERO.weapontype!=6)
         {   
            audio_stop_sound(snd_BombCharge);
            audio_sound_pitch(snd_GP_ExplosionOnly,global.game_speed);
            audio_play_sound(snd_GP_ExplosionOnly,101,false);
            audio_sound_pitch(snd_GP_Detonate_Trail,global.game_speed);
            audio_play_sound(snd_GP_Detonate_Trail,101,false);
            detonate=true;
            par_HERO.neck_fire=0;
            image_xscale=.1;
            image_yscale=.1;
            image_alpha=.75;
            fade=0;
            sprite_index=spr_AuraFlash;
            visible=true;
            
            if (global.HERO_type==0)
            par_HERO.sprite_index=spr_Young_Olivia_Bomb_Cast;
            else
            par_HERO.sprite_index=spr_Old_Olivia_Bomb_Cast;
            
            par_HERO.image_index=0;
            instance_create(x,y-par_HERO.y_shoot_offset,obj_Aura_Ripple_stat);
         }
    
    }
    else //START DETONATE
    {
    
    x=par_HERO.x+10*par_HERO.image_xscale;
    y=par_HERO.y-40-par_HERO.y_shoot_offset;
    
    if instance_exists(obj_Screen_Darken)
    {
    obj_Screen_Darken.active=false;
    }
    
    if (par_HERO.grounded==false) 
        {
        par_HERO.finish_fire=true;
        }
    
    if (image_xscale&lt;1.1) 
    {
        image_xscale+=.25; 
        image_yscale+=.25;
        if (image_xscale&gt;=1)
            {
            audio_sound_pitch(snd_Flash_A,global.game_speed);
            audio_play_sound(snd_Flash_A,101,false);
            }
    }
    else
    {
        if(image_yscale&lt;2)
        {
        
        
        if (image_xscale&lt;200)
            image_xscale=image_xscale*4;
            
        if(image_xscale&gt;25) &amp;&amp; (image_xscale&lt;100) 
        {
        
        image_xscale=200;
        }
        
        }
        else
        {
        if (image_xscale&gt;170)
            image_xscale=image_xscale-2;
        }   
    }
    
    if (image_xscale&gt;100)
        {
        if(image_yscale&lt;2)
        image_yscale=image_yscale*1.2;
        else
        {
        if(image_yscale&lt;100)
            image_yscale=image_yscale*1.5;
        }
       
        if (fade&lt;1) fade+=.1;
        }
        
    if (image_yscale&gt;=55)
        {
        image_alpha-=.01;
        if (image_alpha&lt;=0) instance_destroy();
        }
        
    }//END DETONATE
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!detonate)
{
    draw_set_blend_mode(bm_add);
    image_xscale=12*damage; //was 5.5
    image_yscale=12*damage;
    image_alpha=damage; 
     
    if (damage&gt;=max_damage) 
        {
        image_blend=make_color_hsv(irandom_range(1,255),255,245);   
        if (alarm[0]==-1) 
            {
            alarm[0]=30;
                if !audio_is_playing(snd_flutter_tech)
                {
                audio_sound_pitch(snd_flutter_tech,1.4);
                audio_play_sound(snd_flutter_tech,8,false);
                }
            }
        }  
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,0,image_blend,image_alpha);
    draw_set_blend_mode(bm_normal);
    image_blend=c_white;
}
else
{
draw_set_blend_mode(bm_add);
draw_self();
image_blend=c_white;
//DRAW STAR BURSTS
if (star_frame&gt;5)
{
    if (star_frame-5&lt;sprite_get_number(spr_StarBurst)-1) 
    {
    angle=irandom_range(1,360);
    x1 = lengthdir_x(250,angle);
    y1 = lengthdir_y(250,angle);
    
    with instance_create(x+x1+25*par_HERO.image_xscale,y+y1-25,obj_Bomb_particle)
        {
        direction=other.angle;
        speed=25;
        image_xscale=.25;
        image_yscale=.25;
        image_alpha=other.image_alpha;
        }
        
    shader_set(shdr_blackandwhite);  
    draw_sprite_ext(spr_StarBurst,star_frame-4,x+25*par_HERO.image_xscale,y-25,1,1,0,image_blend,.4);
    shader_reset();
    }
}    
star_frame+=.75*global.game_speed;  

draw_set_blend_mode(bm_normal);
}

//draw_text(x,y,string(damage));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
