<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>par_Crate</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(master.SWAP_spr_Crate_Round_A_LED==0)
{
master.num+=1;
master.SWAP_spr_Crate_Round_A_LED=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Crate_Round_A_LED.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.SWAP_spr_Crate_Round_A==0)
{
master.num+=1;
master.SWAP_spr_Crate_Round_A=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Crate_Round_A.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num],  0, 2, 37, 4, 190, 306,0,225);
}


powerup=false;
weapon=false;

sprite_index=global.sprite[master.SWAP_spr_Crate_Round_A];

move=0;
hp=30;
breakable=true;
color=image_blend;
loot=true;

    flash_alpha=0;
    flash_speed=.1;  
    flash=true;
    flash_sect=1;
    phase=0
    
    set_x=7;
    set_y=-23;
    flashes=0;
    flash_type=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend=color;
audio_play_sound(snd_EnemyHit_A,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x,y,par_Shoot)
{
if (breakable)
{
if place_meeting(x,y,obj_Bomb) &amp;&amp; !place_meeting(x,y,obj_HERO_Melee)
{
    //DO NOTHING
}
else
{

    
    var inst;
    inst = instance_place(x, y, par_Shoot);
    if (inst == noone)
    inst = instance_nearest(x, y, par_Shoot);
    
   
    if (alarm[0] &lt;=-1) 
    { 
    
    if (inst != noone) 
    {      
        hp=hp-inst.damage;                                             
    }
    else
    {
        hp=hp-3;
    }
              
    image_blend = c_red;
    alarm[0]=4; 
    }
    

    if (hp&lt;=0)
    {
    if (alarm[1]==-1)
    {
            with instance_create(x,y,obj_Static)
            {
            loops=1;
            var a=random_range(.8,1);
            image_xscale=other.image_xscale*a;
            image_yscale=other.image_yscale*a;
            }
            
            if (powerup) instance_create(x,y,obj_PowerUP_Tank);
            if (weapon) instance_create(x,y,obj_WeaponTank);
            
            audio_sound_pitch(snd_HeavyDamage,global.game_speed);
            if !audio_is_playing(snd_HeavyDamage)
            audio_play_sound(snd_HeavyDamage,10,false);
           
           with instance_create(x,y,obj_Explosion_Boss)
            {
            boss_image_index=other.image_index;
            boss_sprite_index=other.sprite_index;
            boss_image_xscale=other.image_xscale;
            boss_image_yscale=other.image_yscale;
            boss_image_angle=other.image_angle;
            boss_x=other.x;
            boss_y=other.y;
            boss_image_angle=other.image_angle;
            xplode=24;
            rate=4;
            stripes=200;
            max_spread_x=12*abs(image_yscale);
            max_spread_y=2*abs(image_yscale);
            spread=75*abs(image_yscale);
            }
    }
    instance_destroy();
    }
}               
}












}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alarm[1]==-1)
{
    if sprite_exists(sprite_index) 
    draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,image_angle,image_blend,1);
    draw_sprite_ext(global.sprite[master.SWAP_spr_Crate_Round_A_LED],0,x+set_x*image_xscale,y+set_y*image_yscale,image_xscale,image_yscale,image_angle,c_white,flash_alpha);
    
    flash_alpha=abs(sin(phase));
    phase+=.25*global.game_speed;
    
  

   
    /* 
    draw_set_color(c_white);
    if keyboard_check(vk_up) set_y-=1;
    if keyboard_check(vk_down) set_y+=1;
    draw_text (x,y+20,"movelist_y: "+string(set_y));
    
    if keyboard_check(vk_left)  set_x-=1;
    if keyboard_check(vk_right) set_x+=1;
    draw_text (x,y,"movelist_x: "+string(set_x));
    */

}
else
{
    move+=0.1*global.game_speed;     
    var Stripes = shader_get_uniform(shdr_Hologram,"Stripes");
    var Filter = shader_get_uniform(shdr_Hologram,"Filter");
    var Phase = shader_get_uniform(shdr_Hologram,"Phase");   
    shader_set(shdr_Hologram);
    shader_set_uniform_f(Stripes,140);
    shader_set_uniform_f(Filter,0.98,0.98,0.98,1.0);//rgba diffuse color
    shader_set_uniform_f(Phase,move);
    image_blend=c_red; draw_self();
    image_blend=c_white;    
    shader_reset();
}
    
if (global.debug)
{

draw_rectangle_colour(

    x-sprite_get_xoffset(sprite_index)*image_xscale+sprite_get_bbox_left(sprite_index)*image_xscale,
    y-sprite_get_yoffset(sprite_index)*image_yscale+sprite_get_bbox_top(sprite_index)*image_yscale,
    x-sprite_get_xoffset(sprite_index)*image_xscale+sprite_get_bbox_right(sprite_index)*image_xscale,
    y-sprite_get_yoffset(sprite_index)*image_yscale+sprite_get_bbox_bottom(sprite_index)*image_yscale,

c_red,c_red,c_red,c_red,false);
}    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>84,84</point>
  </PhysicsShapePoints>
</object>
