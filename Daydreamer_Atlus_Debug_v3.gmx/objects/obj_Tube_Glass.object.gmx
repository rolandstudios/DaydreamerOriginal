<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_savegame();

//Load sprite Pages
sprite_index=spr_explosion;
sprite_index=spr_explosion_scatter;
sprite_index=spr_AuraFlash;


if(master.spr_Old_Olivia_Conform==0)
{
master.num+=1;
master.spr_Old_Olivia_Conform=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\spr_Old_Olivia_Conform.png",34,0,0,25,152);
}


if(master.SWAP_spr_Tube_Glass==0)
{
master.num+=1;
master.SWAP_spr_Tube_Glass=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Sprites\spr_Tube_Glass.png",9,0,1,360,267);
sprite_collision_mask(global.sprite[master.SWAP_spr_Tube_Glass], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}
sprite_index=global.sprite[master.SWAP_spr_Tube_Glass];

image_speed=0;
shatter=false;

conform_index=0;
wisp_index=0;
wisp_alpha=0;
conform_alpha=.02;
conform=false;

alarm[1]=70;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>conform=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_pitch(snd_Tankbreak,global.game_speed);
audio_play_sound(snd_Tankbreak,10,false);
shatter=true;


if instance_exists(obj_camera_snap)
    with (obj_camera_snap)
        {
        instance_destroy();
        }
if !instance_exists(obj_AuraFlash) instance_create(x,y,obj_AuraFlash); 
    
with instance_create(x,y,obj_Explosion_A)
    {
    loot=false;
    size=2;
    xplode=24;
    flash=false;
    range=128;
    rate=5;
    scale=1;
    tear=false;
    temp_min_depth=-1;
    temp_max_depth=-1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_Tube_Water.visible==false)
{
if (!shatter)
{
if (alarm[0]==-1) alarm[0]=25;
}
}

if (shatter)
{
    if (image_index&lt;8)
    {
    image_speed=.5;
    }
    else
    {
    image_speed=0;
    visible=false;
     if (global.game_speed==1) global.CutScene=false;  
    }
}
else
{
    image_speed=0;
}

if instance_exists(par_HERO)
{
    par_HERO.Bullet_Time=100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
    if instance_exists(par_HERO)
    {
        if (conform_index&lt;35)
        {
            par_HERO.image_alpha=0;
        }
        else
        {
            if (par_HERO.image_alpha&lt;1) par_HERO.image_alpha+=.1;
        }
            
            draw_set_blend_mode(bm_add);
            draw_sprite_ext(spr_wisp_A,wisp_index,x,y,14,14,0,c_white,wisp_alpha);
            
            wisp_index+=.5*global.game_speed;
            
            if (conform) &amp;&amp; sprite_exists(global.sprite[master.spr_Old_Olivia_Conform])
            {
            if (conform_index&gt;=2) 
                {
                if (conform_index-2 &lt;33) 
                draw_sprite_ext(global.sprite[master.spr_Old_Olivia_Conform],conform_index-2,par_HERO.x,par_HERO.y-25,par_HERO.image_xscale,par_HERO.image_yscale,0,c_white,conform_alpha*.25);
                else
                draw_sprite_ext(global.sprite[master.spr_Old_Olivia_Conform],33,par_HERO.x,par_HERO.y-25,par_HERO.image_xscale,par_HERO.image_yscale,0,c_white,conform_alpha*.25);
                }
            
            if (conform_index-1&gt;=1) 
                {
                if (conform_index&lt;33) 
                draw_sprite_ext(global.sprite[master.spr_Old_Olivia_Conform],conform_index-1,par_HERO.x,par_HERO.y-25,par_HERO.image_xscale,par_HERO.image_yscale,0,c_white,conform_alpha*.5);
                else
                draw_sprite_ext(global.sprite[master.spr_Old_Olivia_Conform],33,par_HERO.x,par_HERO.y-25,par_HERO.image_xscale,par_HERO.image_yscale,0,c_white,conform_alpha*.5);
                }
            
            
            if (conform_index&lt;33) 
                draw_sprite_ext(global.sprite[master.spr_Old_Olivia_Conform],conform_index,par_HERO.x,par_HERO.y-25,par_HERO.image_xscale,par_HERO.image_yscale,0,c_white,conform_alpha);
                else
                draw_sprite_ext(global.sprite[master.spr_Old_Olivia_Conform],33,par_HERO.x,par_HERO.y-25,par_HERO.image_xscale,par_HERO.image_yscale,0,c_white,conform_alpha);
            
            if (conform_index&lt;35)
                { 
                    if (conform_index==0)
                        {
                        audio_play_sound(snd_droid_takeoff,14,false);
                        audio_play_sound(snd_flutter_tech,15,false);
                        }
                    conform_index+=.5;
                    if (wisp_alpha&lt;.45) wisp_alpha+=.01;
                }
                else
                {
                    if (conform_alpha&gt;0) conform_alpha*=.95;
                    wisp_alpha*=.9;
        
                }
            
            }//END CONFORM IS TRUE
            else
            {
     
                if (conform_alpha&lt;1) conform_alpha*=1.05;
                if (conform_alpha&gt;1) conform_alpha=1;
     
            }
    }//END HERO EXISTS
    
if (image_index&gt;0)
{
draw_set_blend_mode(bm_normal);
depth=-30;
//draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,.7);
image_alpha=1;
draw_set_blend_mode(bm_add);
draw_self();
draw_self();

}
else
{
draw_set_blend_mode(bm_add);
image_alpha=.5;
draw_self();
}
draw_set_alpha(image_alpha);

draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>796,122</point>
    <point>796,796</point>
  </PhysicsShapePoints>
</object>
