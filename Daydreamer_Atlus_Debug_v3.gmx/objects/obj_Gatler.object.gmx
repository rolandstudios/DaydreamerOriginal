<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Load Sprites ----------------------

if(master.Gatler_Jump==0)
{
master.num+=1;
master.Gatler_Jump=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\Gatler_Jump.png",25,1,1,137,186);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.Gatler_Walk==0)
{
master.num+=1;
master.Gatler_Walk=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\Gatler_Walk.png",25,1,1,132,164);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.Gatler_Melee==0)
{
master.num+=1;
master.Gatler_Melee=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\Gatler_Melee.png",25,1,1,272,179);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.Gatler_Fire_UPDOWN==0)
{
master.num+=1;
master.Gatler_Fire_UPDOWN=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\Gatler_Fire_UPDOWN.png",18,1,1,121,148);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.Gatler_Fire==0)
{
master.num+=1;
master.Gatler_Fire=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\Gatler_Fire.png",25,1,1,121,148);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}



sprite_index=global.sprite[master.Gatler_Fire];
//-----------------------------------

image_speed=.5;
damage=8*global.difficulty;
hp=75;
init_hp=hp;
active=true;
//shadow_ON=true;
moveChoose=true;
moveChoice=1;
fire_range = false;
hsp=0;
vsp=0;
jump_hsp=0;
acel=1;
stuck=0;
noCollide=false;
acel=0;
grav=1;
walkAway=false;
grounded=false;
can_land=false;
if(image_yscale==1) 
scale=random_range(1.2,1.4); else scale=image_yscale;
image_xscale=scale;
image_yscale=scale;
kickback=0;

view =  instance_create(x,y,obj_Gatler_view);
sprite_index=spr_collide;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Points+=irandom_range(50,100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kickback=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_EnemyHit_A</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walkAway=false;
moveChoose=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
audio_play_sound(snd_droid_gun, 10, false); 

x_offset =  121*image_xscale;
moveChoice=ctl.moveChoice;

with instance_create(x-x_offset,y+(83*image_yscale)+irandom_range(-4,4),obj_Gatler_Fire)
    {
    speed=20;
        
        switch(sign(other.image_xscale))
            {
            case 1:
            if (other.moveChoice==5)
            {
            direction = 180-2*(16-other.image_index);
            y=y-5*(16-other.image_index);
            }
            else
            direction = 180+irandom_range(-2,2);
            break;
            
            case -1:
            if (other.moveChoice==5)
            {
            direction = 2*(16-other.image_index);
            y=y-5*(16-other.image_index);
            }
            else
            direction = irandom_range(-2,2);
            break;
            }
            
            image_angle=direction;
            image_xscale=.5;
            image_yscale=.5;
            damage=other.damage;
    }
            
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveChoose=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (par_HERO.x-1000 &lt; bbox_right) &amp;&amp; (par_HERO.x + 1000 &gt; bbox_left) 
{
if (par_HERO.y-1000 &lt; bbox_bottom) &amp;&amp; (par_HERO.y + 1000 &gt; bbox_top) 
{
active=true; 
}
}
else 
{
active=false;
}

if (active)
{
var HERO = instance_nearest(x,y,par_Goodguy);
sprite_index=spr_collide;
delay=irandom_range(1,6);
if (delay==2) delay=1;
if (delay==3) delay=1;
if (delay==4) delay=1;



if(moveChoice!=4) &amp;&amp; (moveChoice!=7)
{
    //check direction
    if (HERO.x &gt; x)
    {        
        image_xscale = -scale;
        hsp=2.5;
        west_east = 1;        
    }
    
    if (HERO.x &lt; x) 
    {                
        image_xscale = scale;
        hsp=-2.5;
        west_east = 0;       
    }
}

//CheckSwingRange
if(HERO.x &lt; x) &amp;&amp; (HERO.x &gt; x - 180) || (HERO.x &gt; x) &amp;&amp; (HERO.x &lt; x + 180) 
 {
 swing_range = true;
 }
 else
 {
 swing_range = false;
 }
//CheckFireRange
if(HERO.x &lt; x) &amp;&amp; (HERO.x &gt; x - 700) || (HERO.x &gt; x) &amp;&amp; (HERO.x &lt; x + 700) 
 {
 fire_range = false;
 }
 else
 {
 fire_range = true;
 }
 
 

 
 if(moveChoose==true)
    {   
        if(audio_is_playing(snd_GatlingGun)) audio_stop_sound(snd_GatlingGun);
        
        if !audio_is_playing(snd_Troll_Growl)
            {
            audio_sound_pitch(snd_Troll_Growl, random_range(.8,1.2)*global.game_speed);
            audio_play_sound(snd_Troll_Growl, 10, false); 
            }
        
        if(moveChoice==1)
        {
         moveChoice=irandom_range(2, 5); 
        }
         else
         moveChoice=irandom_range(1, 5); 
         
         if(moveChoice==2)
            {  
            if (!place_meeting(x+(70*hsp*scale),bbox_bottom+40,par_wall)) //Dont Fall off Cliff
            {
            stuck=0;
            view.sprite_index = global.sprite[master.Gatler_Jump];
            moveChoice=6;
            view.image_speed=.5*global.game_speed;
            view.image_index=0;
            acel=1;
            if (HERO.x &gt; x) 
                jump_hsp=3*scale;
                else
                jump_hsp=-3*scale;
            alarm[0]=250/global.game_speed;
            }
            }
            
        switch(moveChoice)
            {
            case 1:
            alarm[0]=25/global.game_speed;
            break;
            
            case 2:
            alarm[0]=250/global.game_speed;
            break;
            
            case 3:
            audio_sound_pitch(snd_GatlingGun, global.game_speed);
            audio_play_sound(snd_GatlingGun,10,false);
            alarm[0]=50/global.game_speed;
            break;
            
            case 5:
            audio_sound_pitch(snd_GatlingGun, global.game_speed);
            audio_play_sound(snd_GatlingGun,10,false);
            alarm[0]=80/global.game_speed;
            break;
            
            case 6:
            view.sprite_index = global.sprite[master.Gatler_Jump];
            view.image_speed=.5*global.game_speed;
            view.image_index=0;
            acel=1;
            if (HERO.x &gt; x) 
                jump_hsp=3*scale;
                else
                jump_hsp=-3*scale;
            alarm[0]=250/global.game_speed;
            break;
            
            }
        moveChoose=false;       
        
    }
 
 if(swing_range)
 {
 //alam[0]=-1;
 moveChoose=false;
 moveChoice=4;
 }
    
switch(moveChoice)
{

case 1: //Stand

if (view.sprite_index != global.sprite[master.Gatler_Fire])
        {
        view.sprite_index = global.sprite[master.Gatler_Fire]; 
        view.image_index=0;
        view.image_speed=.5*global.game_speed;
        //alarm[0]=25;
        shadow_ON=true;
        }
    
    view.sprite_index = global.sprite[master.Gatler_Fire]; 
    view.image_speed = .5*global.game_speed;
    damage=5*global.difficulty;
    hsp=0;
   // vsp=0;
    //shadow_ON=true;
break;


case 2: //Walk

if (view.sprite_index != global.sprite[master.Gatler_Walk])
        {
        view.sprite_index = global.sprite[master.Gatler_Walk]; 
        view.image_index=0;
        
        //audio_play_sound(snd_droid_walk, 10, true);
        }
    //vsp=0;
    
    view.sprite_index = global.sprite[master.Gatler_Walk]; 
    
    view.image_speed = 0.5*global.game_speed;
    
    damage=5*global.difficulty;
    //shadow_ON=true;
    
    if(swing_range) 
        {
        alarm[0]=-1; 
        moveChoose=true;
        }
break;

case 3: //Fire
if (view.sprite_index != global.sprite[master.Gatler_Fire])
        {
        view.sprite_index = global.sprite[master.Gatler_Fire]; 
        view.image_index=0;
        view.image_speed=.5*global.game_speed;
        //alarm[0]=25;
        view.alarm[1]=5/global.game_speed*delay;
        //shadow_ON=true;
        }
    if (view.alarm[1]=-1 )view.alarm[1]=5/global.game_speed*delay;
    view.sprite_index = global.sprite[master.Gatler_Fire]; 
    view.image_speed = .5*global.game_speed;
    damage=5*global.difficulty;
    hsp=0;
   // vsp=0;
break;

case 4: //Melee

if (view.sprite_index != global.sprite[master.Gatler_Melee])
        {
        view.sprite_index = global.sprite[master.Gatler_Melee]; 
        view.image_index=0;
        view.image_speed=.5*global.game_speed;
        //shadow_ON=true;
        }
    
    view.sprite_index = global.sprite[master.Gatler_Melee]; 
    view.image_speed = .5*global.game_speed;
    damage=5*global.difficulty;
    hsp=0;
   // vsp=0;
    if (view.image_index&gt;=23) moveChoose=true;
break;

case 5: //Fire UPDOWN
if (view.sprite_index != global.sprite[master.Gatler_Fire_UPDOWN])
        {
        view.sprite_index = global.sprite[master.Gatler_Fire_UPDOWN]; 
        view.image_index=5;
        view.image_speed=.5*global.game_speed;
        //alarm[0]=25;
        view.alarm[1]=5*delay;
        //shadow_ON=true;
        }
    if (view.alarm[1]=-1 ) view.alarm[1]=5/global.game_speed*delay;
    view.sprite_index = global.sprite[master.Gatler_Fire_UPDOWN]; 
    if (view.image_index&gt;=17) || (view.image_index&lt;=0) 
        view.image_speed = -(view.image_speed);
    damage=5*global.difficulty;
    hsp=0;
    //vsp=0;
break;

case 6: //JUMP
view.sprite_index = global.sprite[master.Gatler_Jump];
view.image_speed=.5*global.game_speed;
alarm[0]=250/global.game_speed;

if (view.image_index&gt;8) &amp;&amp;  (view.image_index&lt;16)
{
view.image_speed=.5*global.game_speed;
if (view.image_index==9) vsp=-12;
hsp=jump_hsp;
if (abs(jump_hsp)&lt;5) jump_hsp*=1.25;
}
else
{
if (vsp&gt;=0) grav+=.1;


if (view.image_index&gt;=16)
{
        if (grounded)
            {
                hsp=0;
                view.image_speed=.4*global.game_speed;
            } 
            else 
            {
                view.image_speed=0;
                jump_hsp=jump_hsp*.9;
                hsp=jump_hsp;
                
            }
}
else
{
hsp=0;
}

}
       
if (view.image_index&gt;=sprite_get_number(global.sprite[master.Gatler_Jump])-1) moveChoose=true;
        
break;

case 7: //WALK BACK
        view.sprite_index=global.sprite[master.Gatler_Walk];
        view.image_speed=.5*global.game_speed;
        
        if (west_east)
        {
        hsp=2.5;
        image_xscale=-scale;
        }
        else 
        {
        hsp=-2.5;
        image_xscale=scale;
        }
        
        break;
        
}//END SWITCH

vsp = vsp + grav*global.game_speed;

if (kickback!=0) //KICK BACK
{
    hsp=kickback;
    vsp=-1;
    kickback = kickback - sign(kickback);
}
//Collisions ------------------------------------------------------------



//Horizontal Collision ------------------------------
  

if place_meeting(x+2*hsp,y,par_wall) 
{
    //if !place_free(x+hsp,y) 
    if !place_meeting(x+hsp,y,obj_platform_128x4)
    {
    yplus = 0;   
    while (place_meeting(x+hsp,y-yplus,par_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus+= 1;
    if place_meeting(x+hsp,y-yplus,par_wall)
    {
        while (!place_meeting(x+sign(hsp),y,par_wall)) x+=sign(hsp);
        hsp =0;
        if(moveChoice==2)
        {
        //if(!walkAway) stuck=stuck+1;
        stuck=stuck+1;
        if(stuck&gt;5)
            {
            stuck=0;
            view.sprite_index = global.sprite[master.Gatler_Jump];
            moveChoice=6;
            view.image_speed=.5*global.game_speed;
            view.image_index=0;
            acel=1;
            if (HERO.x &gt; x) 
                jump_hsp=3*scale;
                else
                jump_hsp=-3*scale;
            alarm[0]=250/global.game_speed;
            }
        
        }
    }
    else
    {
        y=y-yplus;
    }
    }
}


if(moveChoice==2)
{  
if (!place_meeting(x+(70*hsp*scale),bbox_bottom+40,par_wall)) //Dont Fall off Cliff
    { 
    hsp=0; 
    moveChoice=1;
    alarm[0]=25/global.game_speed;
    }
} 

x = x + hsp*global.game_speed;

//Vertical Collision ------------------------------

if place_meeting(x,y+vsp,par_wall) 
{ 
    
    while (!place_meeting(x,y+vsp,par_wall)) y=y+sign(vsp);
    
    if (sign(vsp) == 1)
    {
        grounded = 1; //Enable First Jump
        can_land=true;
        grav=1;
        
    }       
    vsp = 0;      
    
}
else
{

grounded = 0;
//grav=.6;
}
y= y + vsp*global.game_speed;

//TRACK COLLIDE ----------------------------------
if place_meeting(x,y+1,par_Track)
{
    var track 
    track = instance_position(x,y,par_Track);
    if (track ==noone)
    track = instance_nearest(x,y,par_Track);
    
    if (bbox_bottom&lt;=track.bbox_top+1*abs(track.image_yscale)) 
    {
    x = x+(track.image_speed*1.57*track.image_xscale);
    }
}
//END TRACK --------------------------------------
}//End Active
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_spikes">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=0;
image_speed=0;
image_blend = c_red;

   with instance_create(x,y,obj_Explosion_Boss)
    {
    boss_image_index=other.image_index;
    boss_sprite_index=other.sprite_index;
    boss_image_xscale=other.image_xscale;
    boss_image_yscale=other.image_yscale;
    boss_image_angle=other.image_angle;
    boss_x=other.x;
    boss_y=other.y;
    boss_image_angle=other.image_angle;
    xplode=10;
    spread=100;
    stripes=120;
    rate=4;
    bloodsplash=false;//true;
    }

if (alarm[4]==-1) alarm[4]=5;
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if place_meeting(x+hsp,y+vsp,obj_HERO_Melee)
    {
        if (obj_HERO_Melee.damage&gt;0)
        {
         
        if (alarm[4] &lt;=-1) alarm[4]=5;
        if (obj_HERO.x&gt;x)
        kickback=-20; else kickback=20;
        
        //vsp=-5;
        hp=hp-obj_HERO_Melee.damage;
        
        if (alarm[3] &lt;=-1) 
        {   
        image_blend = c_red;
        alarm[3]=4;
        }
        
        }
    }
    else
    {
        hp=hp-obj_HERO.damage;   
    
        if (alarm[3] &lt;=-1) 
        {   
        image_blend = c_red;
        alarm[3]=4; 
        }
    }

if (hp&lt;=0)
{
image_speed=0;
hsp=0;
image_blend = c_red;
if (!instance_exists(obj_Explosion_A)) instance_create(x,y,obj_Explosion_A);
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_debug)
{
if (obj_debug.show_collide)
{
if (grounded) image_blend=c_red; else image_blend=c_white;
if sprite_exists(sprite_index) draw_self();
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>121,148</point>
    <point>156,156</point>
  </PhysicsShapePoints>
</object>
