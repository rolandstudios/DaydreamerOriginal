<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_Morph_Plat</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_Morph_Plat_B==0)
{
master.num+=1;
master.SWAP_spr_Morph_Plat_B=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Sprites\spr_Morph_Plat_B.png",15,0,1,145,121);
//sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_index=global.sprite[master.SWAP_spr_Morph_Plat_B];
sprite_collision_mask(global.sprite[master.SWAP_spr_Morph_Plat_B],0,2,1,70,291,242,1,225);
}
sprite_index=global.sprite[master.SWAP_spr_Morph_Plat_B];

active=false;
activate=true;
//alarm[0]=irandom_range(100,200);
image_speed=0;
image_alpha=0;

solid=false;
wave=0;
orig_x=x;
orig_y=y;
scale=image_yscale;
range=200;
image_xscale=.25;
image_yscale=.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (bbox_right&gt;view_xview-400) &amp;&amp; (bbox_left&lt;view_xview+1680) 
{
    if (bbox_bottom&gt;view_yview-400) &amp;&amp; (bbox_top&lt;view_yview+1120)
    {
    activate=true;
    }
    else
    {
    activate=false;
    }
}
else
{
activate=false;
}

if (!activate)
{
instance_deactivate_object(self);
}

if (y&lt;par_HERO.y+500) &amp;&amp; (y&gt;par_HERO.y-500)  //IF IM CLOSE BY TO HERO ~ 400 Pixels Away STAY ACTIVE
{
    if (x&lt;par_HERO.x+400) &amp;&amp; (x&gt;par_HERO.x-400) 
    {active=true;}
    else 
    {active=false;}
}
else 
{
active=false;
//image_blend=c_blue;
}

if (active)
{
        
    image_speed=.5*global.game_speed;
    
     if (round(image_index)==1)
        {
        if !audio_is_playing(snd_LS_Door_open)
            audio_play_sound(snd_LS_Door_open,10,false);
        }
            
    if (image_index&gt;=sprite_get_number(sprite_index)-1)
        {
        image_index=sprite_get_number(sprite_index)-1;
        image_speed=0;
        
        if (solid==false) &amp;&amp; !place_meeting(x,y,par_HERO) //IM SOLID NOW
            {
            solid=true;
            //image_blend=c_red;
            }
        }
        else
        {
        solid=false;
        //image_blend=c_white;
        
            if place_meeting(x,y,par_HERO)
            {
            active=false;
            if !audio_is_playing(snd_LS_Door_close)
            audio_play_sound(snd_LS_Door_close,10,false);
            image_speed=-.5*global.game_speed;
            }
        }
    
    if (image_yscale&lt;scale)
    {
    image_yscale+=.05*scale;
    image_xscale+=.05*scale;
    }

    if (image_alpha&lt;1)
    {
    image_alpha+=.05;
    }

}
else
{
            
    image_speed= -.5*global.game_speed;
    solid=false;
    
    if (image_index&lt;=0)
        {
            image_index=0;
            image_speed=0;
            image_alpha=0;
            solid=false;
        }
        else
        {
            solid=false;
        }
    
    if (image_yscale&gt;0) &amp;&amp; (image_index&lt;=6)
    {
    image_yscale-=.05*scale;
    image_xscale-=.05*scale;
    }

    if (image_alpha&gt;.5) &amp;&amp; (image_index&lt;=4)
    {
    image_alpha-=.05;
    }

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
