<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if !instance_exists(obj_Wisp_draw) instance_create(x,y,obj_Wisp_draw);



//NORMAL MODE
/*
draw_set_blend_mode(bm_normal);

if instance_exists(obj_Explosion_B)
{
    with (obj_Explosion_B)
    {
    image_alpha=.4;
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    }
}

if instance_exists(obj_Explosion_B_mute)
{
    with (obj_Explosion_B_mute)
    {
    image_alpha=.4;
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    }
}

*/
draw_set_blend_mode(bm_add) //ADD PORTION ------------------------------------------------------------


if instance_exists(obj_FireFlare)
{
    with (obj_FireFlare)
    {
    image_alpha=.5;
    image_blend=color;
    draw_self();
    }
}

if instance_exists(obj_ShootA)
{
    with (obj_ShootA)
    {
    draw_self();
    }
}

if instance_exists(obj_Spark_B)
{
    with (obj_Spark_B)
    {
    image_blend=color;
    draw_self();
    }
}

if instance_exists(obj_Gatler_Fire)
{
    with (obj_Gatler_Fire)
    {
    if sprite_exists(sprite_index)
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,color,image_alpha);
    }
}


if instance_exists(obj_Static)
{
with (obj_Static)
{
    if(image_index&gt;=sprite_get_number(sprite_index)-1)
    {
    image_angle=irandom_range(1,360)
    image_index=0;
    loops-=1;
    }
    
    if (loops&lt;=0) instance_destroy();    
    image_speed=.5*global.game_speed;
    if (desat) shader_set(shdr_blackandwhite);
    draw_self();
    if (desat) shader_reset();   
    }
}

if instance_exists(obj_Shoot_Tripple)
{
    with (obj_Shoot_Tripple)
    {
    image_blend = make_color_rgb(255,color_gain,color_gain);
    draw_self();
    }
}

if instance_exists(obj_Robot_Homing)
{
    with (obj_Robot_Homing)
    {
    image_blend = c_red;
    draw_self();
    }
}

if instance_exists(obj_Mentor_Fire)
{
    with (obj_Mentor_Fire)
    {
    image_blend = c_red;
    draw_self();
    }
}


if instance_exists(obj_Homing)
{
    with (obj_Homing)
    {
    image_blend = make_color_rgb(255,color_gain,color_gain);;
    if sprite_exists(sprite_index) draw_self();
    }
}
/*
if instance_exists(obj_quadroPod_Fire)
{
    with (obj_quadroPod_Fire)
    {
    draw_self();
    }
}
*/

/*if instance_exists(obj_Terror_Shot)
{
    with (obj_Terror_Shot)
    {
        draw_sprite_ext(sprite_index, image_index-9,last_x_I, last_y_I, image_xscale, image_yscale, image_angle, c_lime, .1*image_alpha);
        draw_sprite_ext(sprite_index, image_index-5,last_x_E, last_y_E, image_xscale, image_yscale, image_angle, c_lime, .3*image_alpha );
        draw_sprite_ext(sprite_index, image_index-2,last_x_B, last_y_B, image_xscale, image_yscale, image_angle, c_lime, .45*image_alpha );    
        draw_sprite_ext(sprite_index, image_index,x, y, image_xscale, image_yscale, image_angle, c_lime, image_alpha );
    }
}
*/
/*

if instance_exists(obj_Explosion_B_mute)
{
    with (obj_Explosion_B_mute)
    {
    image_alpha=.35; 
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    }
}

if instance_exists(obj_Explosion_B)
{
    with (obj_Explosion_B)
    {
    image_alpha=.35; 
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    }
}

if instance_exists(obj_Explosion_tempo)
{
    with(obj_Explosion_tempo)
    {
    image_alpha=.5;
    draw_self();
    }
}


if instance_exists(obj_Explosion_A)
{
    with (obj_Explosion_A)
    {
    draw_self();
    }
}

if instance_exists(obj_Explosion_C)
{
    with (obj_Explosion_C)
    {
    draw_self();
    }
}
*/
if instance_exists(obj_Dust_Wisp)
{
with (obj_Dust_Wisp) 
    {
    shader_set(shdr_blackandwhite);
    draw_self();
    shader_reset();
    }
}


if instance_exists(obj_PowerUP_Wisp)
{
with (obj_PowerUP_Wisp) 
    {
    shader_set(shdr_blackandwhite);
    draw_self();
    shader_reset();
    }
}

if instance_exists(obj_Ray_Wisp)
{
with (obj_Ray_Wisp) 
    {
    shader_set(shdr_blackandwhite);
    draw_self();
    shader_reset();
    }
}


if instance_exists(obj_wisp_A)
{

with (obj_wisp_A) 
    {
    if (x&gt;view_xview-400) &amp;&amp; (x&lt;view_xview+1600) 
    {
    if (y&gt;view_yview-400) &amp;&amp; (y&lt;view_yview+1120)
    {
    image_blend=col;
    draw_self();
    }
}
}
}


draw_set_blend_mode(bm_normal)




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
