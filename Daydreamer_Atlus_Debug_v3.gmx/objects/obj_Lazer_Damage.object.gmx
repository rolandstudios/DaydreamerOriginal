<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(master.SWAP_spr_Lazer_Damage==0)
{
master.num+=1;
master.SWAP_spr_Lazer_Damage=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Sprites\spr_Lazer_Damage.png",20,0,1,43,360);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}
sprite_index=global.sprite[master.SWAP_spr_Lazer_Damage];



image_alpha=1;
image_speed=.5;
image_index=1;
visible=true;
active=true;
alarm[0]=irandom_range(50,100);

damage=5;
type=2;
move=0;

orig_x=x;
orig_y=y;

/*
active=false;
triggered=false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active)
{
active=false;
visible=false;
x=room_width+200;
y=room_height+200;
if (par_HERO.x-1280 &lt; x) &amp;&amp; (par_HERO.x + 1280 &gt; x)
{
    if (par_HERO.y-720 &lt;y) &amp;&amp; (par_HERO.y + 720 &gt; y) 
    {
        audio_play_sound(snd_electrical_glitch,10,false);
    }
}
}
else
{
active=true;
visible=true;
x=orig_x;
y=orig_y;
if (par_HERO.x-1280 &lt; x) &amp;&amp; (par_HERO.x + 1280 &gt; x)
{
    if (par_HERO.y-720 &lt;y) &amp;&amp; (par_HERO.y + 720 &gt; y) 
    {
        audio_play_sound(snd_Voltage_Zap,10,false);
    }
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x,y,obj_ForceField)
{
obj_ForceField.hp=0;
}

if place_meeting(x,y,par_HERO)
{
if (par_HERO.warping)
{
    par_HERO.warping=false;
    par_HERO.x-=10*par_HERO.image_xscale;
    par_HERO.hsp=0;        
} 

    if (par_HERO.Melee)&amp;&amp; (par_HERO.color!=c_red)
    {    
    if (global.rumble) gamepad_set_vibration(global.playing_index, 1, 1);    
    //SET INVINSIBLE CLOCK        
    if (par_HERO.alarm[11]&lt;50/global.game_speed) par_HERO.alarm[11] = 50/global.game_speed; //REST FROM HIT (INVINSIBLE)
        
    audio_play_sound(snd_hit_A, 10, false);
    audio_play_sound(snd_take_damage, 10, false); 
                    
    par_HERO.color=c_red;
    par_HERO.hp-=damage;
    par_HERO.invinsible=true;
    
    }//END HERO MELEE IS TRUE
}

if (alarm[0]=-1) alarm[0]=irandom_range(50,100)/global.game_speed;

if instance_exists(obj_Garbage_Collector)
{
    if (obj_Garbage_Collector.x+1600&gt;=x) instance_destroy();

}
image_speed=.5*global.game_speed;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_blend_mode(bm_add);
//image_blend = c_red;
if sprite_exists(sprite_index)
    draw_self();
//draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
