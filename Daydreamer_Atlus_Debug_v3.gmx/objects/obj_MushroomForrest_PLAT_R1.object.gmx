<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>par_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_MushroomForrest_PLAT_R1==0)
{
master.num+=1;
master.SWAP_spr_MushroomForrest_PLAT_R1=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_MushroomForrest_PLAT_R1.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, 0);
sprite_collision_mask(global.sprite[master.SWAP_spr_MushroomForrest_PLAT_R1],  0, 2, 25, 200, 275, 948,1,225);
}
sprite_index=global.sprite[master.SWAP_spr_MushroomForrest_PLAT_R1];

if(master.SWAP_spr_MushroomForrest_PLAT_R2==0)
{
master.num+=1;
master.SWAP_spr_MushroomForrest_PLAT_R2=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_MushroomForrest_PLAT_R2.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, 0);
sprite_collision_mask(global.sprite[master.num], 1, 0, 10, 0, sprite_width-10, sprite_height,0,225);
}

with instance_create(x,y,obj_MushroomForrest_PLAT_R2)
    {
        sprite_index=global.sprite[master.SWAP_spr_MushroomForrest_PLAT_R2];
        depth=other.depth-1;
        image_xscale=other.image_xscale;
        image_yscale=other.image_yscale;
        image_angle=other.image_angle;
        image_blend=other.image_blend;
    }

vsp=2;
orig_vsp=vsp;
dist=0;
linear=true;
max_dist=100;
crash=false;
active=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (par_HERO.x-1000 &lt; x) &amp;&amp; (par_HERO.x + 1000 &gt; x) 
{
    active=true; 
}
else
{
    active=false;
}
    
    
if (dist&gt;=max_dist)
    {
    dist=0;
    
    if (linear)
    vsp=-vsp;
    else
    vsp=.1*-sign(vsp);  
    crash=false;
    }

if instance_exists(par_HERO)
{
if place_meeting(x,y-abs(vsp),par_HERO) 
    {   
    par_HERO.y=round(par_HERO.y+vsp*global.game_speed);
    }
}

if (linear)
{
dist+=round(abs(vsp)*global.game_speed);
y=round(y+vsp*global.game_speed);
}
else
{
vsp*=1.1;
dist=dist+abs(vsp)*global.game_speed;
y=y+vsp*global.game_speed;

//if (vsp&lt;0)
//{
if (max_dist-dist&lt;100)
    {
    if (crash==false)
    {
    if (active)
        {
            
            switch(irandom_range(1,2))
            {
            case 1: 
                audio_sound_gain(snd_StoneCrash_A,.001*(1000-abs(par_HERO.x-x)),0);
                if (vsp&lt;0) audio_sound_pitch(snd_StoneCrash_A,random_range(1,1.2)*global.game_speed);
                if (vsp&gt;0) audio_sound_pitch(snd_StoneCrash_A,random_range(.8,1)*global.game_speed);
                audio_play_sound(snd_StoneCrash_A,15,false); 
            break;
            
            case 2: 
                audio_sound_gain(snd_StoneCrash_B,.001*(1000-abs(par_HERO.x-x)),0);
                if (vsp&lt;0) audio_sound_pitch(snd_StoneCrash_B,random_range(1,1.2)*global.game_speed);
                if (vsp&gt;0) audio_sound_pitch(snd_StoneCrash_B,random_range(.8,1)*global.game_speed);
                audio_play_sound(snd_StoneCrash_B,15,false); 
            break;   
            }
        }
    crash=true;
    }
    }
//}

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>924,488</point>
    <point>924,924</point>
  </PhysicsShapePoints>
</object>
