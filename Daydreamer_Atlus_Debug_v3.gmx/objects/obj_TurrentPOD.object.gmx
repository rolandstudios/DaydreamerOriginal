<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy_Body</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.spr_TurrentPOD==0)
{
master.num+=1;
master.spr_TurrentPOD=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_TurrentPOD.png",33,0,1,55,75);
sprite_collision_mask(global.sprite[master.spr_TurrentPOD], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}



sprite_index=global.sprite[master.spr_TurrentPOD];

immortal=false;
hp=22;
init_hp=hp;
damage=10;
moveChoose=false;
moveChoice=1;
cycles=1;
max_cycles=3;
type=1;
scale=abs(image_yscale);
shoot_speed=30;

direction=image_angle+90;
s_speed=0;
speed=4;

image_speed=.5*global.game_speed;
offset_fire_x=0;
offset_fire_y=0;

active=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp&lt;=0)
global.Points+=irandom_range(10,25);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveChoose=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_EnemyHit_A</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_HERO) {instance_destroy();}
else
{
if (s_speed==0) 
    {
    s_speed=speed;
    }

if (obj_camera_offset.x-700 &lt; bbox_right) &amp;&amp; (obj_camera_offset.x + 700 &gt; bbox_left) //was 1280
{
    if (obj_camera_offset.y-720 &lt; bbox_bottom) &amp;&amp; (obj_camera_offset.y + 720 &gt; bbox_top) 
    {
    active=true; 
    }
    else
    {
    active=false;
    }
    }
else 
{
active=false;
}

if (active)
{

if (moveChoose)
{
    moveChoice=irandom_range(1,2)
    switch(moveChoice)
    {
    case 1: //MOVE
    image_index=0;
    cycles=irandom_range(1,max_cycles);
    if (s_speed==0)
    {
    alarm[1]=irandom_range(1,10)/global.game_speed;
    }
    break;
    
    case 2: //SHOOT
    image_index=25;
    cycles=irandom_range(1,max_cycles)
    break;
    }
    moveChoose=false;
}

switch(moveChoice)
{
    case 1: //MOVE
    if (image_index&gt;=24) 
        {
        image_index=0; 
        cycles-=1;
        }
    
    break;
    
    case 2: //SHOOT
    if (image_index&gt;=32) 
        { 
        image_index=25; 
        cycles-=1;
        }
    
        switch(direction)
        {
        case 0:
        offset_fire_x=x;
        break; 
        
        case 180:
        offset_fire_x=x;
        break;
        
        case 90:
        offset_fire_y=y;
        break;
        
        case 270:
        offset_fire_y=y;
        break;
        }
        
        switch(image_angle)
        {
        case 0:
        offset_fire_x=bbox_right-42*scale;
        break; 
        
        case 180:
        offset_fire_x=bbox_left+42*scale;
        break;
        
        case 90:
        offset_fire_y=bbox_top+42*scale;
        break;
        
        case 270:
        offset_fire_y=bbox_bottom-42*scale;
        break;
        }
    
    if (image_index==30)
    { 
    if !place_meeting(x,y,obj_quadroPod_FireB)
    {
     with (instance_create(offset_fire_x,offset_fire_y,obj_quadroPod_FireB)) 
        {
        damage=other.damage;
        image_index=(other.image_index-25);
        s_speed=other.shoot_speed;
        speed_inc=1;
        
        image_xscale=other.scale;
        image_yscale=other.scale*.75;
        direction=other.image_angle;
        image_angle=other.image_angle;
        }
        audio_sound_pitch(snd_Quadropod_Laser,global.game_speed);
        audio_play_sound(snd_Quadropod_Laser,random(100),false);
    }
    }   
    break;
}
    
if(cycles&lt;=0) moveChoose=true;
}

speed=s_speed*global.game_speed;
image_speed=.5*global.game_speed;
}

if place_meeting(x,y,obj_moving_platform_V_direction)
{
    switch (direction)
    {
    case 0:
    direction=180;
    break;
    
    case 360:
    direction=180;
    break;
    
    case 180:
    direction=0;
    break;
    
    case 90:
    direction=270;
    break;
    
    case 270:
    direction=90;
    break;
    }
}

if place_meeting(x,y,obj_moving_platform_H_direction)
{
    switch (direction)
    {
    case 0:
    direction=180;
    break;
    
    case 360:
    direction=180;
    break;
    
    case 180:
    direction=0;
    break;
    
    case 90:
    direction=270;
    break;
    
    case 270:
    direction=90;
    break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var shoot
shoot=instance_place(x,y,par_Shoot)
if (shoot==noone)
shoot=instance_nearest(x,y,par_Shoot)
if (shoot!=noone)
{  
        if (immortal==false)
        hp=hp-shoot.damage;       
        
        if (alarm[0] &lt;=-1) 
        {   
        image_blend = c_red;
        alarm[0]=4; 
        }
        
        if(hp&lt;=0)
        {
        image_speed=0;
        switch(irandom(1))
            {
            case 0:
            audio_sound_pitch(snd_Arcade_Blast_A,random_range(.9,1.1)*global.game_speed);
            audio_play_sound(snd_Arcade_Blast_A,10,false);
            break;
            
            case 1:
            audio_sound_pitch(snd_Arcade_Blast_B,random_range(.9,1.1)*global.game_speed);
            audio_play_sound(snd_Arcade_Blast_B,10,false);
            break;
            }

        with instance_create(x,y,obj_Static)
            {
            loops=1;
            image_xscale=other.image_xscale;
            image_yscale=other.image_yscale;
            }
        with instance_create(x,y-50*image_yscale,obj_Explosion_A)
        {
        image_xscale=abs(other.image_xscale);
        image_yscale=other.image_yscale;
        xplode=irandom_range(3,4);
        flash=false;
        range=50*other.image_yscale;
        }


        instance_destroy();
        }
}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index) 
{
draw_self();

if (image_index&gt;=25)
{
if (image_index&lt;30)
    {
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(spr_RedBall,(image_index-25), offset_fire_x, offset_fire_y,image_xscale,image_yscale, image_angle,c_white,1,);
    draw_set_blend_mode(bm_normal);
    }
}

if (global.enemy_hp)
    {
    draw_rectangle_color(x,bbox_top-25,x+(init_hp),bbox_top-22,c_red,c_red,c_red,c_red,false);
    draw_rectangle_color(x,bbox_top-25,x+(hp),bbox_top-22,c_green,c_green,c_green,c_green,false);
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>55,79</point>
    <point>100,100</point>
  </PhysicsShapePoints>
</object>
