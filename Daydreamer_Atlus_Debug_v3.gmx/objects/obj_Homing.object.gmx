<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_OrangeFireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>par_Shoot</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_HERO)
{
instance_destroy();
}
else
{
alarm[3]=1;
//Create Target
            switch(par_HERO.look)
            {
            case 2: target_direction=45; break;
            case 3: target_direction=0; break;
            case 12: target_direction=90; break;
            case 6: target_direction=270; break;
            case 10: target_direction=135; break;
            case 5: target_direction=315; break;
            case 7: target_direction=225; break;
            case 9: target_direction=180; break;
            }   
            shift=sign(par_HERO.image_xscale);
//audio_sound_pitch(snd_LaserSimple,1*global.game_speed);
//audio_play_sound(snd_LaserSimple, 10, false);
           
image_speed=.5;
damage=2;//par_HERO.damage;
org_damage=2;//par_HERO.damage;
color_gain=0;

image_xscale=.35;
image_yscale=.35;
orig_x=x;
orig_y=y;

switch(irandom_range(1,2))
{
case 1: wave=90; break;
case 2: wave=270; break;
}

if !instance_exists(obj_Homing_lock)
    instance_create(x,y,obj_Homing_lock);
    

    
if instance_exists(par_Enemy_Body) //ENEMY LOCK
{
    inst = instance_nearest(x, y, par_Enemy_Body);    
    target_x=inst.x;
    target_y=inst.y;
}
else
{
    x1 = lengthdir_x(640,target_direction);
    y1 = lengthdir_y(640,target_direction);

target_x=x+x1;
target_y=y+y1;
}
s_speed = 8;

alarm[0]=20/global.game_speed;
alarm[1]=100/global.game_speed;

if (shift==1)
    {
    if (target_direction&lt;180) target_direction+=360;
    }

direction=target_direction;
last_target_direction_A=target_direction;

create_flare=false;

}

    


































</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//do nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_pitch(snd_LaserSimple,1*global.game_speed);
audio_play_sound(snd_LaserSimple, 10, false);

with (instance_create(orig_x,orig_y,obj_FireFlare_HERO))
    {   
    damage=other.damage; 
    if instance_exists(par_HERO)
        {   
            switch(par_HERO.look)
            {
            case 2: image_angle=45; break;
            case 3: image_angle=0; break;
            case 12: image_angle=90; break;
            case 6: image_angle=270; break;
            case 10: image_angle=135; break;
            case 5: image_angle=315; break;
            case 7: image_angle=225; break;
            case 9: image_angle=180; break;
            }    
        }
    image_xscale = image_xscale*2;
    image_yscale = image_yscale*2; 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//seek=true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//CREATE FIRE FLARE -----------------------------
if !instance_exists(par_HERO)
{
instance_destroy();
}
else
{
if (create_flare)
{
with (instance_create(x,y,obj_FireFlare_HERO))
    { 
    damage=other.damage;   
    if instance_exists(par_HERO)
        {   
            switch(par_HERO.look)
            {
            case 2: image_angle=45; break;
            case 3: image_angle=0; break;
            case 12: image_angle=90; break;
            case 6: image_angle=270; break;
            case 10: image_angle=135; break;
            case 5: image_angle=315; break;
            case 7: image_angle=225; break;
            case 9: image_angle=180; break;
            }    
        }
    image_xscale = image_xscale*2;
    image_yscale = image_yscale*2; 
    }
create_flare=false;
}
//---------------------------------------------



    last_target_direction_A=target_direction; 
    diff=(last_target_direction_A-target_direction); 
    target_direction = point_direction(x, y, target_x, target_y);
    
    if (shift==1)
    {
    if (target_direction&lt;180) target_direction+=360;
    }
    

target_direction=(target_direction+last_target_direction_A)/2;
target_direction=(target_direction+last_target_direction_A)/2;
target_direction=(target_direction+last_target_direction_A)/2;
target_direction=(target_direction+last_target_direction_A)/2;
wave+=.5;
sup=50*sin(wave);
direction=target_direction+50*sin(wave);
image_angle=direction;


 

//SHOT LOOK PROGRESSION -----------------------------------
s_speed=s_speed*1.05;
if (color_gain&lt;255){if (color_gain&lt;10) color_gain=color_gain+1; else color_gain=color_gain+8;}
if (color_gain&gt;255) color_gain=255;
if(image_xscale&lt;2)
    {
    image_xscale=image_xscale+.02;
    image_yscale=image_yscale+.02;
    }
damage=org_damage*image_xscale;
image_speed=.5*global.game_speed;
if(image_index&gt;=24) image_speed=0;
speed=s_speed*global.game_speed;
}
/*
//TRAIL ------------------------------------------------  
for (a=20;a&gt;0;a-=1)
    {
    trail_x[a]=trail_x[a-1];
    trail_y[a]=trail_y[a-1];
    trail_angle[a]=trail_angle[a-1];
    }
    
    trail_x[0]=x;
    trail_y[0]=y;
    trail_angle[0]=image_angle;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Enemy_Body">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alarm[3]==-1)
{
var inst
inst = instance_place(x, y, par_Enemy);

if (inst==noone)
inst = instance_nearest(x, y, par_Enemy);

if (inst==noone) {instance_destroy();}
else
{
if (inst.type==1)
{
with instance_create(x,y,obj_FireFlare)
    {
    image_xscale=2*other.image_xscale;
    image_yscale=2*other.image_yscale;
    image_angle = other.image_angle;
    }
    
    with instance_create(x,y,obj_Spark_B)
        {
        image_angle=other.image_angle;
        color=c_red;
        }
    instance_destroy();
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
image_blend = make_color_rgb(255,color_gain,color_gain);
draw_set_blend_mode(bm_add);
if sprite_exists(sprite_index) draw_self();
draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
