<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Crosshair</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-55</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//homing target
target_scale=2;
target_alpha=.3;
x_offset=0;
phase=0;
last_enemy=noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_Homing) || !instance_exists(par_Enemy_Body) || !instance_exists(par_HERO)
{
instance_destroy();  
}
else
{

if (par_HERO.firing==false) instance_destroy();
var enemy_lock = instance_nearest(x, y, par_Enemy_Body)
if (last_enemy!=enemy_lock) audio_play_sound(snd_lockON,12,false);
last_enemy=enemy_lock;

x = (enemy_lock.x - sprite_get_xoffset(enemy_lock.sprite_index)*enemy_lock.image_xscale) + sign(enemy_lock.image_xscale)*(enemy_lock.sprite_width*.5*enemy_lock.image_xscale)+x_offset;
y = (enemy_lock.y - sprite_get_yoffset(enemy_lock.sprite_index)*enemy_lock.image_yscale) + (enemy_lock.sprite_height*.5*enemy_lock.image_yscale);

if (target_scale&gt;=.4) {target_scale-=.15; target_alpha+=.05;}
if (target_scale&lt;.4) {target_scale=2; target_alpha=.3;}
//phase+=.4;
//target_scale=.5+1.5*abs(sin(phase));

//draw_sprite_ext(spr_Crosshair,0,enemy_lock.x,enemy_lock.y,target_scale,target_scale,0,c_white,target_alpha);  
draw_sprite_ext(spr_Homing_Crosshair,0,x,y,target_scale,target_scale,0,c_white,1); 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>13,13</point>
    <point>13,13</point>
  </PhysicsShapePoints>
</object>
