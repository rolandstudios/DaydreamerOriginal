<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Rabbit_Laser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

alarm[0]=2;
alarm[1]=1;
image_speed=.5;
image_index=0;
type=2;
damage=8*global.difficulty;
speed=0;

/*
while (image_xscale&lt;14)
{
    x1 = lengthdir_x(128*image_xscale,image_angle);
    y1 = lengthdir_y(128*image_xscale,image_angle);   

image_xscale+=.1;
if position_meeting(x+x1,y+y1,par_wall) 
    {   
        var inst=instance_position(x+x1,y+y1,par_wall)
        if (inst!=noone)
        {
        if (inst.solid==true) break;
        }
        
    }
}

/*
length=0;
while (length&lt;1000)
{
length+=5;
    
    x2 = lengthdir_x(length,image_angle);
    y2 = lengthdir_y(length,image_angle);   

if position_meeting(x+x2,y+y2,par_wall) 
    {   
        var inst=instance_position(x+x2,y+y2,par_wall)
        if (inst!=noone)
        {
        if (inst.solid==true) break;
        }
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
with instance_create(x+x2,y+y2,obj_Spark_D)
    {
    image_xscale=2;
    image_yscale=2;
    image_angle=other.image_angle;
    color=c_red;
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while (image_xscale&lt;14)
{
    x2 = lengthdir_x(128*image_xscale,image_angle);
    y2 = lengthdir_y(128*image_xscale,image_angle);   

image_xscale+=.1;
if position_meeting(x+x2,y+y2,par_wall) 
    {   
        var inst=instance_position(x+x2,y+y2,par_wall)
        if (inst!=noone)
        {
        if (inst.solid==true) break;
        }        
    }
}

draw_set_blend_mode(bm_add);
draw_self();
draw_set_blend_mode(bm_normal);

//draw_line_color(x,y,x+x2,y+y2,c_blue,c_blue);
/*
draw_text(x,y-100,"image angle: "+string(image_angle));
draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,3</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
