<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>7</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Load Sprites ----------------------
//BURGERMAN
if(master.BM_Point==0)
{
master.num+=1;
master.BM_Point=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\BM_Point.png",25,0,1,81,127);
}

if(master.BM_Walk==0)
{
master.num+=1;
master.BM_Walk=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\BM_Walk.png",25,0,1,78,127);
}


if(master.BM_Idle==0)
{
master.num+=1;
master.BM_Idle=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\BM_Idle.png",25,0,1,81,127);
}

//STORE INSIDE
if(master.SWAP_spr_PearStore_inside==0)
{
master.num+=1;
master.SWAP_spr_PearStore_inside=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_inside.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}
sprite_index=global.sprite[master.SWAP_spr_PearStore_inside];

if(master.SWAP_spr_PearStore_inside_collide==0)
{
master.num+=1;
master.SWAP_spr_PearStore_inside_collide=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_inside_collide.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num],  1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.SWAP_spr_PearStore_inside_top==0)
{
master.num+=1;
master.SWAP_spr_PearStore_inside_top=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_inside_top.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

//STORE OUTSIDE
if(master.SWAP_spr_PearStore_LED==0)
{
master.num+=1;
master.SWAP_spr_PearStore_LED=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_LED.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.spr_PearStore_Door==0)
{
master.num+=1;
master.spr_PearStore_Door=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_Door.png",14,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}


if(master.SWAP_spr_PearStore_0==0)
{
master.num+=1;
master.SWAP_spr_PearStore_0=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_PearStore_0.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}


sprite_index=global.sprite[master.SWAP_spr_PearStore_0];
 
set_x=43;
set_y=116;
up=0;
flash_alpha=0;
flash_speed=.1;
can_enter=true;
    
door_index=0;
doorspeed=0;   
image_speed=0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_enter=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(par_HERO.x&lt;x+175)&amp;&amp;(par_HERO.x&gt;x-100)
{
sprite_index=global.sprite[master.SWAP_spr_PearStore_0];
if (doorspeed&lt;0) 
    {
        if !instance_exists(obj_PearStore_inside)
        {
        audio_sound_pitch(snd_Airlock_Open,global.game_speed);
        audio_play_sound(snd_Airlock_Open,10,false);
        }
    }
    
doorspeed=1*global.game_speed;
if (can_enter==false)
{
up=0;
if (alarm[0]==-1) alarm[0]=60;
}

if(par_HERO.Key_Up) &amp;&amp; place_meeting(x,y,par_HERO)
    {
    up+=1;
    if instance_exists(obj_camera_offset)
        {
        obj_camera_offset.Look_UP=false;
        }
    if (up&gt;=20)
    {
    if(!instance_exists(obj_PearStore_inside))
        {
        instance_create(x,y,obj_Curtain_short);
        instance_create(x,y,obj_PearStore_inside)
        can_enter=false;
        }
    }
    }
    else {up=0;}
}
else
{
sprite_index=global.sprite[master.SWAP_spr_PearStore_0];
if (doorspeed&gt;0) 
    {
       if !instance_exists(obj_PearStore_inside)
        {
        audio_sound_pitch(snd_AirLock_close,global.game_speed);
        audio_play_sound(snd_AirLock_close,10,false);
        }
    }
doorspeed=-1*global.game_speed;
}

if(!instance_exists(obj_PearStore_inside))
{
visible=true;
}
else
{
visible=false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_normal);
flash_alpha+=flash_speed*global.game_speed;
draw_sprite_ext(global.sprite[master.SWAP_spr_PearStore_0],0,x,y,image_xscale,image_yscale,0,image_blend,1);
 
door_index+=doorspeed;
if (door_index&gt;sprite_get_number(global.sprite[master.spr_PearStore_Door])-1) door_index=sprite_get_number(global.sprite[master.spr_PearStore_Door])-1;
if (door_index&lt;0) door_index=0;

draw_sprite_ext(global.sprite[master.spr_PearStore_Door],door_index,x+43*image_xscale,y+116,image_xscale,image_yscale,0,image_blend,1);

if (doorspeed&lt;=0) draw_set_blend_mode(bm_add);    
draw_sprite_ext(global.sprite[master.SWAP_spr_PearStore_LED],0,x+22*image_xscale,y-154*image_yscale,image_xscale,image_yscale,0,c_white,flash_alpha);
draw_set_blend_mode(bm_normal);

if (doorspeed&gt;0)
{
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_set_font(fnt_BytePolice);

//draw_text(x+200,bbox_top+10,"Press" ); 
//draw_sprite(spr_arrow_up,0,x+275,bbox_top+10);
//draw_text(x+300,bbox_top+10,"to enter"

draw_text(x-50,bbox_top+240,"Press" ); 
draw_sprite(spr_arrow_up,0,x+25,bbox_top+240);
draw_text(x+50,bbox_top+240,"to enter");

    if (flash_alpha&gt;=1) {flash_speed=-.1;}
    if (flash_alpha&lt;=0) {flash_speed=.1;} 
}
else
{
    
    if (flash_alpha&gt;=1) {flash_speed=-.05;}
    if (flash_alpha&lt;=0) {flash_speed=.05;} 
}
/*

if keyboard_check(vk_up) set_y-=1;
if keyboard_check(vk_down) set_y+=1;
draw_text (x,y,"movelist_y: "+string(set_y));

if keyboard_check(vk_left)  set_x-=1;
if keyboard_check(vk_right) set_x+=1;
draw_text (x,y+20,"movelist_x: "+string(set_x));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>609,267</point>
    <point>609,609</point>
  </PhysicsShapePoints>
</object>
