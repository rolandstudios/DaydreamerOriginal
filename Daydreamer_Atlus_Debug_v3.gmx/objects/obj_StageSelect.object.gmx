<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_vibration(0, 0, 0);

        
grow=0;
grow_a=0;
rest=true;
x_menu=950;
//y_menu=300;
y_menu=130;
y_menu=120;
y_menu=140;
x=x_menu-40;
//y=y_menu+40;
y=y_menu+260;

hours=99;
minutes=99;
seconds=99;
init_score=0;

frame_fill=0;

select_y=y-y_menu;
//select_y=260+140;

fade=0;
stripes=500;
move=0;

shift_back=0;
shift_front=0;
void=true;

grow_x=0;

flash=1;
flash_count=.05;

target_rm=rm_TitleScreen;


Key_Pause = 0;

var name_length=string_length(global.name);

if (name_length&lt;=8)
B_score_x=-250;
else
B_score_x=-250-50*(name_length-8);


B_score_y=270;

Key_Pause = 0;
Key_Up = 0;
Key_Down = 0;
Key_Jump = 0;
Key_Back = 0;
show_load=false;

time_score ="--";
damage_score="--";
grade_score="--";


//LOAD FILE -------------------------------------------------------------
    var nofile=false;
    
    switch(global.slot)
    {     
        case 1: if file_exists("Save_A.sav") {var LoadFile = file_text_open_read(working_directory+"Save_A.sav");}else{nofile=true} break;
        case 2: if file_exists("Save_B.sav") {var LoadFile = file_text_open_read(working_directory+"Save_B.sav");}else{nofile=true} break;
        case 3: if file_exists("Save_C.sav") {var LoadFile = file_text_open_read(working_directory+"Save_C.sav");}else{nofile=true} break;
        case 4: if file_exists("Save_D.sav") {var LoadFile = file_text_open_read(working_directory+"Save_D.sav");}else{nofile=true} break;
        case 5: if file_exists("Save_E.sav") {var LoadFile = file_text_open_read(working_directory+"Save_E.sav");}else{nofile=true} break;
        case 6: if file_exists("Save_F.sav") {var LoadFile = file_text_open_read(working_directory+"Save_F.sav");}else{nofile=true} break;
        case 7: if file_exists("Save_G.sav") {var LoadFile = file_text_open_read(working_directory+"Save_G.sav");}else{nofile=true} break;
        case 8: if file_exists("Save_H.sav") {var LoadFile = file_text_open_read(working_directory+"Save_H.sav");}else{nofile=true} break;
     }  
     
     if (nofile==false)
     {
            file_text_readln(LoadFile);
            var global.name=file_text_read_string(LoadFile); //Load Name
            file_text_readln(LoadFile);
            var LoadedRoom= file_text_read_real(LoadFile); //Load Room
            file_text_readln(LoadFile);
            var global.SavedHP=file_text_read_real(LoadFile); //Load HP
            file_text_readln(LoadFile);
            var global.SavedMoney=file_text_read_real(LoadFile); //Load Money
    
   
    
    for (a=0;a&lt;=2;a+=1)
    {
        for (b=0;b&lt;=3;b+=1)
        {
        file_text_readln(LoadFile);
        global.Inventory[a,b] = file_text_read_real(LoadFile); //Load Inventory
        }
    }
            
            file_text_readln(LoadFile);
            var global.weapon_A=file_text_read_real(LoadFile); //Weapon A
            file_text_readln(LoadFile);
            var global.weapon_B=file_text_read_real(LoadFile); //Weapon B
            file_text_readln(LoadFile);
            var global.weapon_C=file_text_read_real(LoadFile); //Weapon C
            file_text_readln(LoadFile);
            var global.weapon_D=file_text_read_real(LoadFile); //Weapon D
            
            file_text_readln(LoadFile);
            var global.weapon_A_energy=file_text_read_real(LoadFile); //Weapon A energy
            file_text_readln(LoadFile);
            var global.weapon_B_energy=file_text_read_real(LoadFile); //Weapon B energy
            file_text_readln(LoadFile);
            var global.weapon_C_energy=file_text_read_real(LoadFile); //Weapon C energy
            file_text_readln(LoadFile);
            var global.weapon_D_energy=file_text_read_real(LoadFile); //Weapon D energy
            file_text_readln(LoadFile);
            var global.Hours=file_text_read_real(LoadFile); //Hours
            file_text_readln(LoadFile);
            var global.Minutes=file_text_read_real(LoadFile); //Minutes
            file_text_readln(LoadFile);
            var global.Seconds=file_text_read_real(LoadFile); //Seconds
            file_text_readln(LoadFile);
            var global.Points=file_text_read_real(LoadFile); //Points
            
            var i
            for (i=0;i&lt;5;i+=1)
            {
            file_text_readln(LoadFile);
            var global.pets[i]=file_text_read_real(LoadFile); //Pets
            }
            
            file_text_readln(LoadFile);
            global.HERO_type=file_text_read_real(LoadFile); //HERO type
            
            file_text_readln(LoadFile);
            global.World=file_text_read_real(LoadFile); //World Progress
            

              for (a=1;a&lt;=14;a+=1) //BOSS SCORE
                {
                    for (b=1;b&lt;=3;b+=1)
                    {
                    file_text_readln(LoadFile);
                    global.Boss_Score[a,b] = file_text_read_real(LoadFile); //Load Inventory
                    }
                }
            
            file_text_close(LoadFile)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_vibration(0, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//audio_stop_all();
audio_stop_sound(msc_Title);
gamepad_set_vibration(0, 0, 0);
global.gamestart = true; //allow MEMFLUSH
instance_create(0,0,obj_Load);
with (obj_Menu_Background) {instance_destroy();}
room_goto(target_rm);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rest=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if !instance_exists(obj_useBlurFx) &amp;&amp; !instance_exists(obj_Olivia_Select)
{

if (global.xboxcontroller == true)
Key_Pause = gamepad_button_check_pressed(0,gp_start);

if (global.xboxcontroller == false)
Key_Pause = keyboard_check_pressed(vk_enter);
Key_Up = gamepad_button_check_pressed(0, gp_padu);
Key_Down = gamepad_button_check_pressed(0, gp_padd);
Key_Jump = gamepad_button_check_pressed(0, gp_face1);
Key_Back = gamepad_button_check_pressed(0, gp_face2);


if (rest)
{
if (gamepad_axis_value(0, gp_axislv)&lt;-.5) {Key_Up = 1; alarm[0]=10; rest=false;} 
if (gamepad_axis_value(0, gp_axislv)&gt;.5) {Key_Down = 1; alarm[0]=10; rest=false;}
if (gamepad_axis_value(0, gp_axislh)&lt;-.5) {Key_Left = 1; alarm[0]=10; rest=false;}
if (gamepad_axis_value(0, gp_axislh)&gt;.5) {Key_Right = 1; alarm[0]=10; rest=false;}
}




if (Key_Back) || keyboard_check_pressed(vk_escape)
{audio_play_sound(snd_capped_out,10,false); room_goto(rm_TitleScreen);}

if (Key_Up == 1) || keyboard_check_pressed(vk_up) //CURSOR UP
{
    audio_play_sound(snd_selectA, 10, false);
    shift_back=0;
    fade=0;
    stripes=500;
    
    if (y&gt;y_menu-80) 
    {
        if (y==y_menu+260) || (y==y_menu+560)
        {
            if (y==y_menu+260) {y=y_menu+180;}
            if (y==y_menu+560) {y=y_menu+520;}
            obj_StageSelect_select.y=y;
        }
        else
        {
            y=y-20;
        }
    }
    else
    {
    y=y_menu+560;
    obj_StageSelect_select.y=y;
    audio_play_sound(snd_selectA, 10, false);
    }
}


if (Key_Down ==1) || keyboard_check_pressed(vk_down) 
{
shift_back=0;
fade=0;
stripes=500;
audio_play_sound(snd_selectA, 10, false);

    if(y&lt;y_menu+560)
    {
        if (y==y_menu+180) || (y==y_menu+520)
        {
            if (y==y_menu+180) {y=y_menu+260;}
            if (y==y_menu+520) {y=y_menu+560;}
            obj_StageSelect_select.y=y;
        }
        else
        {
        y=y+20;
        }
    }
    else
    {
    y=y_menu-80;
    obj_StageSelect_select.y=y;
    }
}

if (Key_Jump) || (Key_Pause)   || keyboard_check_pressed(vk_enter)  || keyboard_check_pressed(vk_space)
{

select_y=y-y_menu;

if (void) &amp;&amp; (select_y!=560)
    {
    if !audio_is_playing(snd_diggweed)
        {audio_play_sound(snd_diggweed,10,false);}
    }

if(select_y!=560) &amp;&amp; (void==false)  //ADD RANDOM STATS TO STAGE SELECT ---------------------------
{

   if (alarm[1]==-1) audio_play_sound(snd_gamestart,10,false);

    //CREATE NEW GAME
    global.SavedHP=100; //Health
    global.Parallax=true;  //Horizontal Parallax
    global.VParallax=false; //Vertical Parallax
    //-part-
    global.creation=true; //Tube in at level start
    global.SavedMoney=100; //Money
    global.Trippy=false;  //Wavy FX
    global.CutScene=false; //Freeze Controls
      

for(var a=0; a&lt;=2; a+=1) //Random Inventory
{
    for (b=0;b&lt;=3;b+=1)
    {
    global.Inventory[a,b]=irandom_range(0,14);
    }
}

//Random_Weapons
global.weapon_A = irandom_range(1,7); 
global.weapon_B = irandom_range(1,7);
global.weapon_C = irandom_range(1,7); 
global.weapon_D = irandom_range(1,7);

//FULL Pets
global.pets[0]=1; //Turtle
global.pets[1]=1; //Pup
global.pets[2]=1; //Cat
global.pets[3]=1; //Weasel
global.pets[4]=1; //Duck

//FULL Weapon Energy
global.weapon_A_energy=100;
global.weapon_B_energy=100;
global.weapon_C_energy=100;
global.weapon_D_energy=100;

global.Hours=0; //Speed Run Time
global.Minutes=0; //Speed Run Time
global.Seconds=0; //Speed Run Time
global.Points=0;   //Sore



}//END NOT BACK



    switch(select_y)
    {
    //BOSSES
    case -80: 
    target_rm=rm_Collector_Boss;
    break;
    
    case -60:
    target_rm=rm_Drifter_Battle;
    break;
    
    case -40:
    target_rm=rm_Creeper_Boss; 
    break;
    
    case -20: 
    target_rm=rm_Garbage_Collector;
    break;
    
    case 0:
    target_rm=rm_Mechollector_Boss; 
    break;
    
    case 20:
    target_rm=rm_Bunny_Boss;
    break;
    
    case 40:
    target_rm=rm_GreenForrest_D;
    break;
    
    case 60:
    target_rm=rm_TrollQueen_Boss;
    break;
    
    case 80: 
    target_rm=rm_MrGrin_Boss;
    break;
    
    case 100:
    target_rm=rm_GH_Battle; 
    break;
    
    case 120: 
    target_rm=rm_WhiteBat;
    break;
    
    case 140: 
    target_rm=rm_MegaBot_Boss;
    break;
    
    case 160: 
    target_rm=rm_GooeyDragon;
    break;
    
    case 180: 
    target_rm=rm_Sin;
    break;
    
    //WORLD ZONES
    
    case 260:
    if (global.World&gt;=1)
    target_rm=rm_Tutorial_C;
    else
    target_rm=rm_Tutorial_0; 
    break;
    
    case 280:
    target_rm=rm_World2_A; 
    break;
    
    case 300:
    target_rm=rm_World2_B; 
    break;
    
    case 320: 
    target_rm=rm_World3_A;
    break;
    
    case 340:
    target_rm=rm_World4_A;
    break;
    
    case 360: 
    target_rm=rm_World5_A;
    break;
    
    case 380: 
    target_rm=rm_GreenForrest_A;
    break;
    
    case 400: 
    target_rm=rm_World6_A;
    break;
    
    case 420: 
    target_rm=rm_World7_A;
    break;
    
    case 440: 
    target_rm=rm_World8_A;
    break;
    
    case 460: 
    target_rm=rm_World9_A;
    break;
    
    case 480: 
    target_rm=rm_World10_A;
    break;
    
    case 500: 
    target_rm=rm_World11_A;
    break;
    
    case 520: 
    target_rm=rm_World12_A;
    break;

        
    case 560: 
    audio_play_sound(snd_capped_out,10,false);
    room_goto(rm_TitleScreen);
    break;  
    }//END SWITCH
    
    if (select_y!=550) &amp;&amp; (void==false)
    {
    //scr_savegame(); //edit
    if (alarm[1]==-1) alarm[1]=30;
    if (global.rumble)  gamepad_set_vibration(0, 1, 1);
    }

}


}//END NOT USE BLURFX EXISTS








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if window_get_fullscreen()
offset=1.5;
else
offset=1;



//DRAW BOSS SCORE -----------------------------------------------
if !instance_exists(obj_useBlurFx) &amp;&amp; !instance_exists(obj_Olivia_Select)
{
//B_score_x=500; was

if (B_score_x&lt;70) B_score_x+=50;
if (B_score_x&gt;70) B_score_x=70;

B_score_y=270;
boss=0;
boss_slot=0;


draw_set_color(c_black); draw_set_alpha(.15);
draw_roundrect((B_score_x-35)*offset,(B_score_y-20)*offset, (B_score_x+150)*offset,(B_score_y+280)*offset,false); 


switch(y-y_menu) 
{
case -80: boss_slot=1; break;
case -60: boss_slot=2; break;
case -40: boss_slot=3; break;
case -20: boss_slot=4; break;
case 0: boss_slot=5; break;
case 20: boss_slot=6; break;
case 40: boss_slot=7; break;
case 60: boss_slot=8; break;
case 80: boss_slot=9; break;
case 100: boss_slot=10; break;
case 120: boss_slot=11; break;
case 140: boss_slot=12; break;
case 160: boss_slot=13; break;
case 180: boss_slot=14; break;
}

  
    
    draw_set_valign(fa_center);   
    draw_set_font(fnt_Score);

    if (y-y_menu&lt;260)
    {
    grow+=.25;
    draw_set_halign(fa_center);
    draw_set_color(c_black) draw_set_alpha(.7);
    draw_text_transformed((B_score_x+85)*offset,(B_score_y-33)*offset,"Boss Rank: ",(.6+sin(grow)*.02)*offset,(.6+sin(grow)*.05)*offset,0)
    draw_set_color(make_color_hsv(irandom_range(1,255),100,255));
    draw_set_alpha(1);
    draw_text_transformed((B_score_x+87)*offset,(B_score_y-35)*offset,"Boss Rank: ",(.6+sin(grow)*.02)*offset,(.6+sin(grow)*.05)*offset,0)
    }
    else
    {
    draw_set_halign(fa_left);
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_text_transformed((B_score_x-25)*offset,(B_score_y-35)*offset,"Boss Rank: ",(.5)*offset,(.5)*offset,0)
    }

    draw_set_halign(fa_left);
    draw_set_valign(fa_center); 
    draw_set_color(c_white);
    draw_set_font(fnt_Digital);
    //draw_set_halign(fa_center);
    //draw_set_valig
    
for (boss=1;boss&lt;15;boss+=1)
{
    if (global.Boss_Score[boss,1]&gt;=0) //was != 0
    {
    if (global.Boss_Score[boss,1]&gt;=100)
    time_score = string(round(global.Boss_Score[boss,1])); 
    else if (global.Boss_Score[boss,1]&gt;=10)
    time_score = "0"+string(round(global.Boss_Score[boss,1])); 
    else 
    time_score = "00"+string(round(global.Boss_Score[boss,1]));
    }else{time_score = "--";}
    
    if (global.Boss_Score[boss,2]&gt;=0) //was !=0
    {
    if (global.Boss_Score[boss,2]&gt;=100)
    damage_score = string(global.Boss_Score[boss,2]); 
    else if (global.Boss_Score[boss,2]&gt;=10)
    damage_score = "0"+string(global.Boss_Score[boss,2]); 
    else 
    damage_score = "00"+string(global.Boss_Score[boss,2]);
    }else{damage_score = "--";}
    
    switch(global.Boss_Score[boss,3])
    {
    case -1: grade_score = "--"; break;
    case 0: grade_score = "--"; break;
    case 1: grade_score = "E"; break;
    case 2: grade_score = "D"; break;
    case 3: grade_score = "C"; break;
    case 4: grade_score = "B"; break;
    case 5: grade_score = "A"; break;
    }
            
    if (boss==boss_slot)
    {
    draw_set_color(c_dkgray); //BACK COLOR
    draw_set_alpha(.25);
    draw_rectangle((B_score_x-35)*offset ,(B_score_y+(20*(boss-1))-10)*offset,(B_score_x+150)*offset,(B_score_y+20*(boss-1)+10)*offset,false);
    
    draw_set_color(c_black); //SHADOW
    draw_set_alpha(.75*flash);
    draw_text_transformed((B_score_x+shift_back-10)*offset,(B_score_y+(20*(boss-1))+shift_back*.5)*offset, time_score+" | "+damage_score+" | "+grade_score,(1.2)*offset,(1.1)*offset,0);
    draw_set_alpha(flash);
    }
    else
    {
    draw_set_alpha(.8);
    }
    
    draw_set_color(c_white);
    
    if (boss==boss_slot)
    draw_text_transformed((B_score_x-10)*offset,(B_score_y+(20*(boss-1)))*offset, time_score+" | "+damage_score+" | "+grade_score,(1.2)*offset,(1.1)*offset,0);
    else
    draw_text_transformed((B_score_x)*offset,(B_score_y+(20*(boss-1)))*offset, time_score+" | "+damage_score+" | "+grade_score,(1)*offset,(1)*offset,0);
    
}



// TIME AND SCORE ---------------------------
if (B_score_x&gt;=70)
{
    if (hours&gt;global.Hours) 
    hours-=irandom_range(1,3);
    else
    hours=global.Hours;
    
    if (minutes&gt;global.Minutes) 
    minutes-=irandom_range(1,3);
    else
    minutes=global.Minutes;
    
    if (seconds&gt;global.Seconds) 
    seconds-=irandom_range(1,3);
    else
    seconds=global.Seconds;
    
    
    
    if (init_score&lt;global.Points)
    init_score=1.2*init_score+1;
    else
    init_score=global.Points;
}    
    //SHADOW SIDE SCORE
    draw_set_alpha(.7);
    draw_set_color(c_black);
    draw_set_font(fnt_Score);
    draw_text_transformed((B_score_x-25-2)*offset,(600+2)*offset,"Score: ",(.4)*offset,(.55)*offset,image_angle);
    draw_text_transformed((B_score_x-25-2)*offset,(620+2)*offset,"Time: ",(.4)*offset,(.55)*offset,image_angle);
    
    //FRONT SIDE SCORE
    draw_set_alpha(1);
    draw_set_color(c_yellow);
    draw_set_font(fnt_Score);
    draw_text_transformed((B_score_x-25)*offset,(600)*offset,"Score: ",(.4)*offset,(.55)*offset,image_angle);
    draw_set_font(fnt_Orbitron);
    draw_set_color(c_white);
    draw_text_transformed((B_score_x+70)*offset,(600)*offset,string(round(init_score)),(1)*offset,(1)*offset,image_angle);
    
    draw_set_color(c_yellow);
    draw_set_font(fnt_Score);
    draw_text_transformed((B_score_x-25)*offset,(620)*offset,"Time: ",(.4)*offset,(.55)*offset,image_angle);
    
    draw_set_font(fnt_Digital);
    draw_set_color(c_white);
    
if (hours&lt;10)
{
    
    if (seconds&lt;10) &amp;&amp; (minutes&lt;10)
    {
        draw_text_transformed((B_score_x+70)*offset,(620)*offset,"0"+string(hours)+":0"+string(minutes)+":0"+string(round(seconds)),1*offset,1*offset,image_angle);
    }
    else if(seconds&gt;=10) &amp;&amp; (minutes&gt;=10)
    {
        draw_text_transformed((B_score_x+70)*offset,(620)*offset,"0"+string(hours)+":"+string(minutes)+":"+string(round(seconds)),1*offset,1*offset,image_angle);
    }
    else if (seconds&lt;10) &amp;&amp; (minutes&gt;=10)
    {
        draw_text_transformed((B_score_x+70)*offset,(620)*offset,"0"+string(hours)+":"+string(minutes)+":0"+string(round(seconds)),1*offset,1*offset,image_angle);
    }
    else if (seconds&gt;=10) &amp;&amp; (minutes &lt;10)
    {
        draw_text_transformed((B_score_x+70)*offset,(620)*offset,"0"+string(hours)+":0"+string(minutes)+":"+string(round(seconds)),1*offset,1*offset,image_angle);
    }
    
}
else
{    
    if (seconds&lt;10) &amp;&amp; (minutes&lt;10)
    {
        draw_text_transformed((B_score_x+70)*offset,(620)*offset,string(hours)+":0"+string(minutes)+":0"+string(round(seconds)),1*offset,1*offset,image_angle);
    }
    else if(seconds&gt;=10) &amp;&amp; (minutes&gt;=10)
    {
        draw_text_transformed((B_score_x+70)*offset,(620)*offset,string(hours)+":"+string(minutes)+":"+string(round(seconds)),1*offset,1*offset,image_angle);
    }
    else if (seconds&lt;10) &amp;&amp; (minutes&gt;=10)
    {
        draw_text_transformed((B_score_x+70)*offset,(620)*offset,string(hours)+":"+string(minutes)+":0"+string(round(seconds)),1*offset,1*offset,image_angle);
    }
    else if (seconds&gt;=10) &amp;&amp; (minutes &lt;10)
    {
        draw_text_transformed((B_score_x+70)*offset,(620)*offset,string(hours)+":0"+string(minutes)+":"+string(round(seconds)),1*offset,1*offset,image_angle);
    }
}
    
    draw_set_font(fnt_Score);
    draw_set_color(c_black); draw_set_alpha(.7);
    draw_text_transformed((B_score_x-25-4)*offset,(680+4)*offset,string(global.name),1*offset,1*offset,image_angle);
    draw_set_color(c_white); draw_set_alpha(1);
    draw_text_transformed((B_score_x-25)*offset,(680)*offset,string(global.name),1*offset,1*offset,image_angle);
    
    
}//END NOT HERO TYPE


draw_set_font(fnt_Astron);
draw_set_halign(fa_center); //was left
draw_set_valign(fa_center);

draw_set_alpha(.5); draw_set_color(c_black);
draw_rectangle((1281-grow_x)*offset,(y_menu-110)*offset,1280*offset,(y_menu-130)*offset,false)
draw_rectangle((1281-grow_x)*offset,(y_menu+210)*offset,1280*offset,(y_menu+230)*offset,false)



grow_a+=.1;
if(y-y_menu&lt;260)
t_scale = sin(grow_a)*.05+.9;
else
t_scale=.9;

draw_set_alpha(.5); draw_set_color(c_black);
draw_text_transformed((x_menu-10+4)*offset,(y_menu-120+2)*offset,"Boss Stages",(t_scale)*offset,(t_scale)*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((x_menu-10)*offset,(y_menu-120)*offset,"Boss Stages",(t_scale)*offset,(t_scale)*offset,0);


if(y-y_menu&gt;=260) &amp;&amp; (y-y_menu&lt;=520)
t_scale = sin(grow_a)*.05+.9;
else
t_scale=.9;

draw_set_alpha(.5); draw_set_color(c_black);
draw_text_transformed((x_menu-10+4)*offset,(y_menu+220+2)*offset,"World Zones",(t_scale)*offset,(t_scale)*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((x_menu-10)*offset,(y_menu+220)*offset,"World Zones",(t_scale)*offset,(t_scale)*offset,0);




//draw_text_transformed((100)*offset,(100)*offset,string(global.World),.9*offset,.9*offset,0);

draw_set_alpha(.5);

draw_roundrect((x_menu-12)*offset,(y_menu+240)*offset, (x_menu+185)*offset,(y_menu+540)*offset,true); 
draw_roundrect((x_menu-12)*offset,(y_menu-100)*offset, (x_menu+185)*offset,(y_menu+200)*offset,true); 

if !instance_exists(obj_useBlurFx) &amp;&amp; !instance_exists(obj_Olivia_Select)
{
draw_roundrect((B_score_x-35)*offset,(B_score_y-20)*offset, (B_score_x+150)*offset,(B_score_y+280)*offset,true); 
}


draw_set_alpha(1);

if  (alarm[1]==2) || (alarm[1]==1) || (alarm[1]==0)//DISABLE STUFF AND SHOW LOADING
    {
    if instance_exists(obj_RolandStudios) obj_RolandStudios.visible=false;
    if instance_exists(obj_volume_Flare_A) obj_volume_Flare_A.visible=false;
    if instance_exists(obj_StageSelect_select) obj_StageSelect_select.visible=false;
    //if (global.gamestart) instance_destroy();
    draw_set_alpha(1);
    gamepad_set_vibration(0, 0, 0); 
    draw_rectangle_colour(0,0,1280*offset,720*offset,c_black,c_black,c_black,c_black,false);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_set_font(fnt_Astron);
    draw_text_transformed(1180*offset,680*offset,"- Loading",.667*offset,.667*offset,0);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//DRAW FRAME
/*
draw_set_color(c_gray);

if (frame_fill&lt;.35)
    {
    frame_fill+=.01;
    }
draw_set_alpha(frame_fill);
draw_rectangle(0,0,1280,720);
*/



draw_set_color(c_black);
draw_set_alpha(.35);
if (grow_x&lt;430) grow_x+=50;
if (grow_x&gt;430) grow_x=430;
draw_rectangle(1280-grow_x,0,1280,720,false);
draw_set_color(c_white);
draw_line(1280-grow_x,0,1280-grow_x,720);

//DRAW BACK COLOR --------------------------------------------------------------------------
draw_set_color(c_navy);
draw_set_alpha(.35);

if ((y-y_menu)!=560)
draw_rectangle(x_menu-12,y-10,x_menu+185,y+10,false);


draw_set_color(c_black);
draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_set_alpha(.75);
void=false;
shift_front=5;

//MENU SHADOW -----------------------------------------------------------------------------------------------
draw_set_font(fnt_BytePolice);
if (shift_back&lt;4) shift_back+=.25;
switch(y-y_menu)
{

case -80:  if (global.World&gt;=2-.5) draw_text(x_menu+shift_back+shift_front,y_menu-80+shift_back*.5,   "Mr Smiles"); break;
case -60:  if (global.World&gt;=3-.5) draw_text(x_menu+shift_back+shift_front,y_menu-60+shift_back*.5,   "Doomflayer"); break;
case -40:  if (global.World&gt;=4-.5) draw_text(x_menu+shift_back+shift_front,y_menu-40+shift_back*.5,   "Creeper"); break;
case -20:  if (global.World&gt;=5-.5)draw_text(x_menu+shift_back+shift_front,y_menu-20+shift_back*.5,  "Razormouth"); break;
case 0:  if (global.World&gt;=6-.5) draw_text(x_menu+shift_back+shift_front,y_menu+0+shift_back*.5,  "MechaSmiles"); break;
case 20:  if (global.World&gt;=7-.5) draw_text(x_menu+shift_back+shift_front,y_menu+20+shift_back*.5,  "Rabies Rabbit"); break;
case 40:  if (global.World&gt;=8-.5) draw_text(x_menu+shift_back+shift_front,y_menu+40+shift_back*.5,  "Krarox"); break;
case 60: if (global.World&gt;=9-.5) draw_text(x_menu+shift_back+shift_front,y_menu+60+shift_back*.5, "Grimeboy"); break;
case 80: if (global.World&gt;=10-.5) draw_text(x_menu+shift_back+shift_front,y_menu+80+shift_back*.5, "Mr Grin"); break;
case 100: if (global.World&gt;=11-.5) draw_text(x_menu+shift_back+shift_front,y_menu+100+shift_back*.5, "Flamefreak"); break;
case 120: if (global.World&gt;=12-.5) draw_text(x_menu+shift_back+shift_front,y_menu+120+shift_back*.5, "Dawnwing"); break;
case 140: if (global.World&gt;=13-.5) draw_text(x_menu+shift_back+shift_front,y_menu+140+shift_back*.5, "MegaBot"); break;
case 160: if (global.World&gt;=14-.5) draw_text(x_menu+shift_back+shift_front,y_menu+160+shift_back*.5, "GooeyDragon"); break;
case 180: if (global.World&gt;=15-.5) draw_text(x_menu+shift_back+shift_front,y_menu+180+shift_back*.5, "Sin"); break;


case 260: if (global.World&gt;=0) draw_text(x_menu+shift_back+shift_front,y_menu+260+shift_back*.5, "The Escape"); break;
case 280: if (global.World&gt;=2) draw_text(x_menu+shift_back+shift_front,y_menu+280+shift_back*.5, "Robo World"); break;
case 300: if (global.World&gt;=3) draw_text(x_menu+shift_back+shift_front,y_menu+300+shift_back*.5, "The Tunnel"); break;
case 320: if (global.World&gt;=4) draw_text(x_menu+shift_back+shift_front,y_menu+320+shift_back*.5, "Caverns"); break;
case 340: if (global.World&gt;=5) draw_text(x_menu+shift_back+shift_front,y_menu+340+shift_back*.5, "Red Valley"); break;
case 360: if (global.World&gt;=6) draw_text(x_menu+shift_back+shift_front,y_menu+360+shift_back*.5, "Grassy Hills"); break;
case 380: if (global.World&gt;=7) draw_text(x_menu+shift_back+shift_front,y_menu+380+shift_back*.5, "Green Forest"); break;
case 400: if (global.World&gt;=8) draw_text(x_menu+shift_back+shift_front,y_menu+400+shift_back*.5, "Factory"); break;
case 420: if (global.World&gt;=9) draw_text(x_menu+shift_back+shift_front,y_menu+420+shift_back*.5, "Purple Forest"); break;
case 440: if (global.World&gt;=10) draw_text(x_menu+shift_back+shift_front,y_menu+440+shift_back*.5, "Dark Core pt1"); break;
case 460: if (global.World&gt;=11) draw_text(x_menu+shift_back+shift_front,y_menu+460+shift_back*.5, "Dark Core pt2"); break;
case 480: if (global.World&gt;=12) draw_text(x_menu+shift_back+shift_front,y_menu+480+shift_back*.5, "Inner Core"); break;
case 500: if (global.World&gt;=13) draw_text(x_menu+shift_back+shift_front,y_menu+500+shift_back*.5, "Wavy Gravy"); break;
case 520: if (global.World&gt;=14) draw_text(x_menu+shift_back+shift_front,y_menu+520+shift_back*.5, "Deep Gravy"); break;


case 560: draw_text(x_menu+shift_back+shift_front,y_menu+560+shift_back*.5, "Back"); break; //was 550
}

//FLASH INC ------
if (flash&gt;=1) flash_count*=-1;
if (flash&lt;=0) flash_count*=-1;
if (alarm[1]==-1)
flash+=flash_count;
else
flash+=8*flash_count;

//B_score_x=70;//edit

/*
//DRAW BOSS SCORE -----------------------------------------------
if !instance_exists(obj_useBlurFx) &amp;&amp; !instance_exists(obj_Olivia_Select)
{
//B_score_x=500; was

B_score_x=70;
B_score_y=270;
boss=0;
boss_slot=0;


draw_set_color(c_black); draw_set_alpha(.25);
draw_roundrect((B_score_x-35),(B_score_y-20), (B_score_x+150),(B_score_y+280),false); 


switch(y-y_menu) 
{
case -80: boss_slot=1; break;
case -60: boss_slot=2; break;
case -40: boss_slot=3; break;
case -20: boss_slot=4; break;
case 0: boss_slot=5; break;
case 20: boss_slot=6; break;
case 40: boss_slot=7; break;
case 60: boss_slot=8; break;
case 80: boss_slot=9; break;
case 100: boss_slot=10; break;
case 120: boss_slot=11; break;
case 140: boss_slot=12; break;
case 160: boss_slot=13; break;
case 180: boss_slot=14; break;
}

  
    
    draw_set_valign(fa_center);   
    draw_set_font(fnt_Score);

    if (y-y_menu&lt;260)
    {
    grow+=.25;
    draw_set_halign(fa_center);
    draw_set_color(c_black) draw_set_alpha(.7);
    draw_text_transformed(B_score_x+85,B_score_y-33,"Boss Rank: ",.6+sin(grow)*.02,.6+sin(grow)*.05,0)
    draw_set_color(make_color_hsv(irandom_range(1,255),100,255));
    draw_set_alpha(1);
    draw_text_transformed(B_score_x+87,B_score_y-35,"Boss Rank: ",.6+sin(grow)*.02,.6+sin(grow)*.05,0)
    }
    else
    {
    draw_set_halign(fa_left);
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_text_transformed(B_score_x-25,B_score_y-35,"Boss Rank: ",.5,.5,0)
    }

    draw_set_halign(fa_left);
    draw_set_valign(fa_center); 
    draw_set_color(c_white);
    draw_set_font(fnt_Digital);
    //draw_set_halign(fa_center);
    //draw_set_valig
    
for (boss=1;boss&lt;15;boss+=1)
{
    if (global.Boss_Score[boss,1]!=0)
    {
    if (global.Boss_Score[boss,1]&gt;=10)
    time_score = string(round(global.Boss_Score[boss,1])); 
    else 
    time_score = "0"+string(round(global.Boss_Score[boss,1]));
    }else{time_score = "--";}
    
    if (global.Boss_Score[boss,2]!=0)
    {
    if (global.Boss_Score[boss,2]&gt;=10)
    damage_score = string(global.Boss_Score[boss,2]); 
    else 
    damage_score = "0"+string(global.Boss_Score[boss,2]);
    }else{damage_score = "--";}
    
    switch(global.Boss_Score[boss,3])
    {
    case 0: grade_score = "--"; break;
    case 1: grade_score = "E"; break;
    case 2: grade_score = "D"; break;
    case 3: grade_score = "C"; break;
    case 4: grade_score = "B"; break;
    case 5: grade_score = "A"; break;
    }
            
    if (boss==boss_slot)
    {
    draw_set_color(c_black); //SHADOW
    draw_set_alpha(.75*flash);
    draw_text_transformed(B_score_x+shift_back-10,B_score_y+(20*(boss-1))+shift_back*.5, time_score+" | "+damage_score+" | "+grade_score,1.2,1.1,0);
    draw_set_alpha(flash);
    }
    else
    {
    draw_set_alpha(.8);
    }
    
    draw_set_color(c_white);
    
    if (boss==boss_slot)
    draw_text_transformed(B_score_x-10,B_score_y+(20*(boss-1)), time_score+" | "+damage_score+" | "+grade_score,1.2,1.1,0);
    else
    draw_text_transformed(B_score_x,B_score_y+(20*(boss-1)), time_score+" | "+damage_score+" | "+grade_score,1,1,0);
    
}



// TIME AND SCORE ---------------------------

    if (hours&gt;global.Hours) 
    hours-=irandom_range(1,3);
    else
    hours=global.Hours;
    
    if (minutes&gt;global.Minutes) 
    minutes-=irandom_range(1,3);
    else
    minutes=global.Minutes;
    
    if (seconds&gt;global.Seconds) 
    seconds-=irandom_range(1,3);
    else
    seconds=global.Seconds;
    
    
    
    if (init_score&lt;global.Points)
    init_score=1.2*init_score+1;
    else
    init_score=global.Points;
    
    //SHADOW SIDE SCORE
    draw_set_alpha(.7);
    draw_set_color(c_black);
    draw_set_font(fnt_Score);
    draw_text_transformed(B_score_x-25-2,600+2,"Score: ",.4,.55,image_angle);
    draw_text_transformed(B_score_x-25-2,620+2,"Time: ",.4,.55,image_angle);
    
    //FRONT SIDE SCORE
    draw_set_alpha(1);
    draw_set_color(c_yellow);
    draw_set_font(fnt_Score);
    draw_text_transformed(B_score_x-25,600,"Score: ",.4,.55,image_angle);
    draw_set_font(fnt_Orbitron);
    draw_set_color(c_white);
    draw_text_transformed(B_score_x+70,600,string(round(init_score)),1,1,image_angle);
    
    draw_set_color(c_yellow);
    draw_set_font(fnt_Score);
    draw_text_transformed(B_score_x-25,620,"Time: ",.4,.55,image_angle);
    
    draw_set_font(fnt_Digital);
    draw_set_color(c_white);
    

    
    
    if (seconds&lt;10) &amp;&amp; (minutes&lt;10)
    {
        draw_text_transformed(B_score_x+70,620,string(hours)+":0"+string(minutes)+":0"+string(round(seconds)),1,1,image_angle);
    }
    else if(seconds&gt;=10) &amp;&amp; (minutes&gt;=10)
    {
        draw_text_transformed(B_score_x+70,620,string(hours)+":"+string(minutes)+":"+string(round(seconds)),1,1,image_angle);
    }
    else if (seconds&lt;10) &amp;&amp; (minutes&gt;=10)
    {
        draw_text_transformed(B_score_x+70,620,string(hours)+":"+string(minutes)+":0"+string(round(seconds)),1,1,image_angle);
    }
    else if (seconds&gt;=10) &amp;&amp; (minutes &lt;10)
    {
        draw_text_transformed(B_score_x+70,620,string(hours)+":0"+string(minutes)+":"+string(round(seconds)),1,1,image_angle);
    }

    
    draw_set_font(fnt_Score);
    draw_set_color(c_black); draw_set_alpha(.7);
    draw_text_transformed(B_score_x-25-4,680+4,string(global.name),1,1,image_angle);
    draw_set_color(c_white); draw_set_alpha(1);
    draw_text_transformed(B_score_x-25,680,string(global.name),1,1,image_angle);
    
    
}//END NOT HERO TYPE
*/


//MENU WHITE -----------------------------------------------------------------------------------------------
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_set_alpha(1);
draw_set_font(fnt_BytePolice);

if (y-y_menu==-80)
    { 
        if (global.World&gt;=2-.5)
        {draw_text_colour(x_menu+shift_front,y_menu-80,  "Mr Smiles",image_blend,image_blend,image_blend,image_blend,flash);}
        else
        {draw_text_colour(x_menu+shift_front,y_menu-80,  "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else 
    {
        if (global.World&gt;=2-.5)
        {draw_text_colour(x_menu,y_menu-80,  "Mr Smiles",image_blend,image_blend,image_blend,image_blend,1);}
        else
        {draw_text_colour(x_menu+shift_front,y_menu-80,  "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==-60)
    {
    if (global.World&gt;=3-.5) 
    {draw_text_colour(x_menu+shift_front,y_menu-60,  "Doomflayer",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu-60,  "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else 
    {
    if (global.World&gt;=3-.5)
    {draw_text_colour(x_menu,y_menu-60,  "Doomflayer",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu-60,  "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==-40)
    {
    if (global.World&gt;=4-.5) 
    {draw_text_colour(x_menu+shift_front,y_menu-40,  "Creeper",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu-40,  "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=4-.5) 
    {draw_text_colour(x_menu,y_menu-40,  "Creeper",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu-40,  "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==-20)
    {
    if (global.World&gt;=5-.5) 
    {draw_text_colour(x_menu+shift_front,y_menu-20,  "Razormouth",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu-20,  "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else 
    {
    if (global.World&gt;=5-.5)
    {draw_text_colour(x_menu,y_menu-20,  "Razormouth",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu-20,  "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==0) 
    {
    if (global.World&gt;=6-.5)
    {draw_text_colour(x_menu+shift_front,y_menu+0,  "MechaSmiles",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+0,  "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else 
    {
    if (global.World&gt;=6-.5)
    {draw_text_colour(x_menu,y_menu+0,  "MechaSmiles",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+0,  "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==20) 
    {
    if (global.World&gt;=7-.5)
    {draw_text_colour(x_menu+shift_front,y_menu+20,  "Rabies Rabbit",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+20,  "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else 
    {
    if (global.World&gt;=7-.5)
    {draw_text_colour(x_menu,y_menu+20,  "Rabies Rabbit",image_blend,image_blend,image_blend,image_blend,1);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+20,  "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==40)
    {
    if (global.World&gt;=8-.5) 
    {draw_text_colour(x_menu+shift_front,y_menu+40,  "Krarox",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+40,  "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=8-.5) 
    {draw_text_colour(x_menu,y_menu+40,  "Krarox",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+40,  "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==60) 
    {
    if (global.World&gt;=9-.5) 
    {draw_text_colour(x_menu+shift_front,y_menu+60, "Grimeboy",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+60, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else 
    {
    if (global.World&gt;=9-.5) 
    {draw_text_colour(x_menu,y_menu+60, "Grimeboy",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+60, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==80) 
    {
    if (global.World&gt;=10-.5) 
    {draw_text_colour(x_menu+shift_front,y_menu+80, "Mr Grin",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+80, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=10-.5)  
    {draw_text_colour(x_menu,y_menu+80, "Mr Grin",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+80, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==100) 
    {
    if (global.World&gt;=11-.5) 
    {draw_text_colour(x_menu+shift_front,y_menu+100, "Flamefreak",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+100, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    {
    if (global.World&gt;=11-.5)  
    {draw_text_colour(x_menu,y_menu+100, "Flamefreak",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+100, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==120)
    { 
    if (global.World&gt;=12-.5)
    {draw_text_colour(x_menu+shift_front,y_menu+120, "Dawnwing",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+120, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    { 
    if (global.World&gt;=12-.5)
    {draw_text_colour(x_menu,y_menu+120, "Dawnwing",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+120, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==140) 
    {
    if (global.World&gt;=13-.5)
    {draw_text_colour(x_menu+shift_front,y_menu+140, "MegaBot",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+140, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=13-.5) 
    {draw_text_colour(x_menu,y_menu+140, "MegaBot",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+140, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==160) 
    {
    if (global.World&gt;=14-.5)
    {draw_text_colour(x_menu+shift_front,y_menu+160, "GooeyDragon",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+160, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=14-.5) 
    {draw_text_colour(x_menu,y_menu+160, "GooeyDragon",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+160, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==180) 
    {
    if (global.World&gt;=15-.5)
    {draw_text_colour(x_menu+shift_front,y_menu+180, "Sin",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+180, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    {
    if (global.World&gt;=15-.5) 
    {draw_text_colour(x_menu,y_menu+180, "Sin",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+180, "---------",c_gray,c_gray,c_gray,c_gray,.5);} 
    }
    



draw_set_font(fnt_BytePolice);


if (y-y_menu==260) 
    {
    if (global.World&gt;=0) 
    {draw_text_colour(x_menu+shift_front,y_menu+260, "The Escape",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+260, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}  
    }
    else
    {
    if (global.World&gt;=0)  
    {draw_text_colour(x_menu,y_menu+260, "The Escape",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+260, "---------",c_gray,c_gray,c_gray,c_gray,.5);} 
    }
    
if (y-y_menu==280) 
    {
    if (global.World&gt;=2)
    {draw_text_colour(x_menu+shift_front,y_menu+280, "Robo World",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+280, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    { 
    if (global.World&gt;=2)
    {draw_text_colour(x_menu,y_menu+280, "Robo World",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+280, "---------",c_gray,c_gray,c_gray,c_gray,.5);} 
    }
    
if (y-y_menu==300) 
    {
    if (global.World&gt;=3)
    {draw_text_colour(x_menu+shift_front,y_menu+300, "The Tunnel",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+300, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    {
    if (global.World&gt;=3) 
    {draw_text_colour(x_menu,y_menu+300, "The Tunnel",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+300, "---------",c_gray,c_gray,c_gray,c_gray,.5);}  
    }
    
if (y-y_menu==320) 
    {
    if (global.World&gt;=4)
    {draw_text_colour(x_menu+shift_front,y_menu+320, "Caverns",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+320, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    { 
    if (global.World&gt;=4)
    {draw_text_colour(x_menu,y_menu+320, "Caverns",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+320, "---------",c_gray,c_gray,c_gray,c_gray,.5);} 
    }
    
if (y-y_menu==340) 
    {
    if (global.World&gt;=5)
    {draw_text_colour(x_menu+shift_front,y_menu+340, "Red Valley",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+340, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    {
    if (global.World&gt;=5) 
    {draw_text_colour(x_menu,y_menu+340, "Red Valley",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+340, "---------",c_gray,c_gray,c_gray,c_gray,.5);} 
    }
    
if (y-y_menu==360)
    { 
    if (global.World&gt;=6)
    {draw_text_colour(x_menu+shift_front,y_menu+360, "Grassy Hills",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+360, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    {
    if (global.World&gt;=6) 
    {draw_text_colour(x_menu,y_menu+360, "Grassy Hills",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+360, "---------",c_gray,c_gray,c_gray,c_gray,.5);} 
    }
    
if (y-y_menu==380) 
    {
    if (global.World&gt;=7) 
    {draw_text_colour(x_menu+shift_front,y_menu+380, "Green Forest",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+380, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    {
    if (global.World&gt;=7)  
    {draw_text_colour(x_menu,y_menu+380, "Green Forest",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+380, "---------",c_gray,c_gray,c_gray,c_gray,.5);} 
    }
    
if (y-y_menu==400) 
    {
    if (global.World&gt;=8)
    {draw_text_colour(x_menu+shift_front,y_menu+400, "Factory",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+400, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;} 
    }
    else
    {
    if (global.World&gt;=8) 
    {draw_text_colour(x_menu,y_menu+400, "Factory",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+400, "---------",c_gray,c_gray,c_gray,c_gray,.5);} 
    }
    
if (y-y_menu==420) 
    {
    if (global.World&gt;=9)
    {draw_text_colour(x_menu+shift_front,y_menu+420, "Purple Forest",image_blend,image_blend,image_blend,image_blend,flash);} 
    else
    {draw_text_colour(x_menu+shift_front,y_menu+420, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=9) 
    {draw_text_colour(x_menu,y_menu+420, "Purple Forest",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+420, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==440) 
    {
    if (global.World&gt;=10) 
    {draw_text_colour(x_menu+shift_front,y_menu+440, "Dark Core pt1",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+440, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=10)  
    {draw_text_colour(x_menu,y_menu+440, "Dark Core pt1",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+440, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==460) 
    {
    if (global.World&gt;=11)
    {draw_text_colour(x_menu+shift_front,y_menu+460, "Dark Core pt2",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+460, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=11) 
    {draw_text_colour(x_menu,y_menu+460, "Dark Core pt2",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+460, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==480) 
    {
    if (global.World&gt;=12) 
    {draw_text_colour(x_menu+shift_front,y_menu+480, "Inner Core",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+480, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=12)  
    {draw_text_colour(x_menu,y_menu+480, "Inner Core",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+480, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==500) 
    {
    if (global.World&gt;=13)  
    {draw_text_colour(x_menu+shift_front,y_menu+500, "Wavy Gravy",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+500, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=13)   
    {draw_text_colour(x_menu,y_menu+500, "Wavy Gravy",image_blend,image_blend,image_blend,image_blend,1);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+500, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==520) 
    {
    if (global.World&gt;=14)
    {draw_text_colour(x_menu+shift_front,y_menu+520, "Deep Gravy",image_blend,image_blend,image_blend,image_blend,flash);}
    else
    {draw_text_colour(x_menu+shift_front,y_menu+520, "---------",c_gray,c_gray,c_gray,c_gray,.5);void=true;}
    }
    else
    {
    if (global.World&gt;=14) 
    {draw_text_colour(x_menu,y_menu+520, "Deep Gravy",image_blend,image_blend,image_blend,image_blend,1);}   
    else
    {draw_text_colour(x_menu+shift_front,y_menu+520, "---------",c_gray,c_gray,c_gray,c_gray,.5);}
    }
    
if (y-y_menu==560) 
    {draw_text_colour(x_menu+shift_front,y_menu+560, "Back",image_blend,image_blend,image_blend,image_blend,flash);void=true;}
    else 
    {draw_text(x_menu,y_menu+560, "Back");}




    
//DRAW SCREEN SHOT FRAME -----------------------------------------------------------------------------------------------
   switch(y-y_menu)
    {
    //BOSSES
    case -80: 
    if(master.spr_sh_02==0)
        {
        master.num+=1;
        master.spr_sh_02=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_02.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_02];
        

    //target_rm=rm_Monster13_Boss;
    break;
    
    case -60:
        if(master.spr_sh_04==0)
        {
        master.num+=1;
        master.spr_sh_04=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_04.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_04];
    //target_rm=rm_Doomflayer_Battle;
    break;
    
    case -40: 
        if(master.spr_sh_07==0)
        {
        master.num+=1;
        master.spr_sh_07=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_07.png",1,0,0,0,0);
        }    
        sprite_index=global.sprite[master.spr_sh_07];
    

    //target_rm=rm_MrGrin_Boss;
    //room_goto(rm_MrGrin_Boss);
    break;
    
    case -20: 
        if(master.spr_sh_09==0)
        {
        master.num+=1;
        master.spr_sh_09=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_09.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_09];
    //target_rm=rm_Bunny_Boss;
    //room_goto(rm_Bunny_Boss);
    break;
    
    case 0: 
        if(master.spr_sh_12==0)
        {
        master.num+=1;
        master.spr_sh_12=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_12.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_12];
    //target_rm=rm_Mr Smiles_Boss;
    //room_goto(rm_Mr Smiles_Boss);
    break;
    
    case 20:
    
        if(master.spr_sh_14==0)
        {
        master.num+=1;
        master.spr_sh_14=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_14.png",1,0,0,0,0);
        }    
        sprite_index=global.sprite[master.spr_sh_14];
    

    //target_rm=rm_Creeper_Boss;
    //room_goto(rm_Creeper_Boss);
    break;
    
    case 40:
        if(master.spr_sh_16==0)
        {
        master.num+=1;
        master.spr_sh_16=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_16.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_16];
    //target_rm=rm_Garbage_Mr Smiles;
    //room_goto(rm_Garbage_Mr Smiles);
    break;
    
    case 60:
        if(master.spr_sh_18==0)
        {
        master.num+=1;
        master.spr_sh_18=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_18.png",1,0,0,0,0);
        }    
        sprite_index=global.sprite[master.spr_sh_18];
    

    //target_rm=rm_TrollQueen_Boss;
    //room_goto(rm_TrollQueen_Boss);
    break;
    
    case 80: 
        if(master.spr_sh_20==0)
        {
        master.num+=1;
        master.spr_sh_20=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_20.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_20];
    //target_rm=rm_MechaSmiles_Boss;
    //room_goto(rm_MechaSmiles_Boss);
    break;
    
    case 100:
        if(master.spr_sh_22==0)
        {
        master.num+=1;
        master.spr_sh_22=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_22.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_22];
    //target_rm=rm_GH_Battle; 
    //room_goto(rm_GH_Battle);
    break;
    
    case 120: 
        if(master.spr_sh_24==0)
        {
        master.num+=1;
        master.spr_sh_24=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_24.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_24];
    //target_rm=rm_WhiteBat;
    //room_goto(rm_WhiteBat);
    break;
    
    case 140: 
        if(master.spr_sh_26==0)
        {
        master.num+=1;
        master.spr_sh_26=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_26.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_26];
    //target_rm=rm_MegaBot_Boss;
    //room_goto(rm_MegaBot_Boss);
    break;
    
    case 160: 
        if(master.spr_sh_29==0)
        {
        master.num+=1;
        master.spr_sh_29=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_29.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_29];
    //target_rm=rm_GooeyDragon;
    //room_goto(rm_GooeyDragon);
    break;
    
    case 180: 
        if(master.spr_sh_31==0)
        {
        master.num+=1;
        master.spr_sh_31=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_31.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_31];
    //target_rm=rm_Sin;
    //room_goto(rm_Sin);
    break;
    
    
    
    //WORLD ZONES
    
    case 260: //TUTORIAL WORLD 1
        if(master.spr_sh_01==0)
        {
        master.num+=1;
        master.spr_sh_01=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_01.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_01];
    //target_rm=rm_World5_A; 
    //room_goto(rm_World5_A);
    break;
    
    case 280: //WORLD 2 ROBOCITY
        if(master.spr_sh_03==0)
        {
        master.num+=1;
        master.spr_sh_03=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_03.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_03];
    //target_rm=rm_World4_B; 
    //room_goto(rm_World4_B);
    break;
    
    case 300: //WORLD 3 TUNNEL
     if(master.spr_sh_06==0)
        {
        master.num+=1;
        master.spr_sh_06=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_06.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_06];
    //target_rm=rm_World7_A; 
    //room_goto(rm_World7_A);
    break;
    
    case 320: //WORLD 4 CAVES
     if(master.spr_sh_08==0)
        {
        master.num+=1;
        master.spr_sh_08=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_08.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_08]; 
    //target_rm=rm_World3_B;
    //room_goto(rm_World3_B);
    break;
    
    case 340: //WORLD 5 VALLEY
     if(master.spr_sh_11==0)
        {
        master.num+=1;
        master.spr_sh_11=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_11.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_11];
    //target_rm=rm_World6_A;
    //room_goto(rm_World6_A);
    break;
    
    case 360: //WORLD 6 Grassy Hills
     if(master.spr_sh_13==0)
        {
        master.num+=1;
        master.spr_sh_13=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_13.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_13];
    //target_rm=rm_World8_A;
    //room_goto(rm_World8_A);
    break;
    
    case 380: //WORLD 7 GREEN FOREST
     if(master.spr_sh_15==0)
        {
        master.num+=1;
        master.spr_sh_15=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_15.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_15];
    //target_rm=rm_World10_A;
    //room_goto(rm_World10_A);
    break;
    
    case 400: //WORLD 8 FACTORY
     if(master.spr_sh_17==0)
        {
        master.num+=1;
        master.spr_sh_17=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_17.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_17];
    //target_rm=rm_GreenForrest_A;
    //room_goto(rm_GreenForrest_A);
    break;
    
    case 420: //WORLD 9 MUSHROOM FOREST
     if(master.spr_sh_19==0)
        {
        master.num+=1;
        master.spr_sh_19=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_19.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_19];
    //target_rm=rm_World11_A;
    //room_goto(rm_World11_A);
    break;
    
    case 440: //WORLD 10 DARK CORE
     if(master.spr_sh_21==0)
        {
        master.num+=1;
        master.spr_sh_21=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_21.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_21];
    //target_rm=rm_Tutorial_0;
    //room_goto(rm_Tutorial_0);
    break;
    
     case 460: //WORLD 11 SKY CITY
     if(master.spr_sh_23==0)
        {
        master.num+=1;
        master.spr_sh_23=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_23.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_23];
    //target_rm=rm_Tutorial_0;
    //room_goto(rm_Tutorial_0);
    break;
    
     case 480: //WORLD 12 INNER CORE
     if(master.spr_sh_25==0)
        {
        master.num+=1;
        master.spr_sh_25=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_25.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_25];
    //target_rm=rm_Tutorial_0;
    //room_goto(rm_Tutorial_0);
    break;
    
     case 500: //WORLD 13 WAVY GRAVY
     if(master.spr_sh_28==0)
        {
        master.num+=1;
        master.spr_sh_28=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_28.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_28];
    //target_rm=rm_Tutorial_0;
    //room_goto(rm_Tutorial_0);
    break;
    
     case 520: //WORLD 14 DEEP GRAVY
     if(master.spr_sh_30==0)
        {
        master.num+=1;
        master.spr_sh_30=master.num;
        global.sprite[master.num] = sprite_add(working_directory+"\imports\spr_sh_30.png",1,0,0,0,0);
        }    
    sprite_index=global.sprite[master.spr_sh_30];
    //target_rm=rm_Tutorial_0;
    //room_goto(rm_Tutorial_0);
    break;
    
    case 550: 
    sprite_index=noone;
    //audio_play_sound(snd_capped_out,10,false);
    //room_goto(rm_TitleScreen);
    break;  
    }

//screen_x = 450;
//screen_y = 350;
    
//screen_x = 460; was

screen_x = B_score_x-40;
screen_y = 40;

if !instance_exists(obj_useBlurFx) &amp;&amp; !instance_exists(obj_Olivia_Select)
{
    draw_set_alpha(.2);
    draw_set_color(c_black);
    draw_roundrect(screen_x,screen_y,screen_x+300,screen_y+169,false);
    draw_set_color(c_white);    
    
    if sprite_exists(sprite_index) &amp;&amp; (y-y_menu!=550) &amp;&amp; (void==false)
    {
     
                move+=0.04;
                stripes=1400;
                //if (stripes&lt;1000) stripes+=1;
                var Stripes = shader_get_uniform(shdr_Hologram,"Stripes");
                var Filter = shader_get_uniform(shdr_Hologram,"Filter");
                var Phase = shader_get_uniform(shdr_Hologram,"Phase");
                
                //draw_sprite_ext(sprite_index, image_index, x, y-25, image_xscale, image_yscale, angle, color, image_alpha);
                shader_set(shdr_Hologram);
                shader_set_uniform_f(Stripes,stripes);
                shader_set_uniform_f(Filter,0.98,0.98,0.98,1.0);//rgba diffuse color
                shader_set_uniform_f(Phase,move);       
                draw_sprite_ext(sprite_index,0,screen_x,screen_y,1,1,0,c_white,1);
                shader_reset()
        
        
    
    
    draw_set_alpha(1);
    if (fade&lt;1) fade+=.01;
    if (y-y_menu!=550)
    draw_sprite_ext(sprite_index,0,screen_x,screen_y,1,1,0,c_white,fade);
    draw_set_alpha(.5);
    }
    
    draw_roundrect(screen_x-5,screen_y-5,screen_x+305,screen_y+174,true);
    draw_set_alpha(1);
}












</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
