<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy_Body</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ctl =  instance_nearest(x, y, obj_QuadroPOD);
sprite_index=global.sprite[master.spr_QuadroPOD_Idle];
if place_meeting(x,y,obj_Short_Ship)
{
    sprite_index=global.sprite[master.spr_QuadroPOD_JUMP];
}
image_index=0;
damage = ctl.damage;
type=1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ctl) ctl.kickback=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_EnemyHit_A</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(ctl) 
{
//    instance_destroy();
}
else
{
damage=ctl.damage;
x=ctl.x;
y=ctl.y-50*ctl.scale;
image_xscale=ctl.image_xscale;
image_yscale=ctl.image_yscale;

if (ctl.vsp&lt;0)
{
if place_meeting(x,bbox_top+ctl.vsp,par_wall)
    {
    if !place_free(x,y-ctl.vsp)
    ctl.vsp=0;
    ctl.grav=1;
    //image_blend = c_blue;alarm[3]=2;
    }
    
}

if(ctl.moveChoice==2)
{
if place_meeting(x+ctl.hsp,y,par_wall)            
    {
    ctl.stuck=ctl.stuck+1;
    ctl.hsp=ctl.hsp*.25;
    //image_blend = c_green;alarm[3]=2;
    }
}




//image_speed=image_speed*global.game_speed;


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Garbage_Collector">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ctl) ctl.hp=0;
image_speed=0;
if instance_exists(ctl) ctl.hsp=0;
image_blend = c_red;
with instance_create(x,y-50*image_yscale,obj_Explosion_B)
{
image_xscale=1;
image_yscale=1;
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_spikes">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;
if instance_exists(ctl) ctl.hsp=0;
image_blend = c_red;

switch(irandom(1))
{
case 0:
audio_sound_pitch(snd_Arcade_Blast_A,random_range(.9,1.1)*global.game_speed);
audio_play_sound(snd_Arcade_Blast_A,10,false);
break;

case 1:
audio_sound_pitch(snd_Arcade_Blast_B,random_range(.9,1.1)*global.game_speed);
audio_play_sound(snd_Arcade_Blast_B,10,false);
break;
}

with instance_create(x,y,obj_Static)
    {
    loops=1;
    image_xscale=other.image_xscale;
    image_yscale=other.image_yscale;
    }
with instance_create(x,y-50*image_yscale,obj_Explosion_A)
{
image_xscale=abs(other.image_xscale);
image_yscale=other.image_yscale;
xplode=irandom_range(3,4);
flash=false;
}

if (alarm[4]==-1) alarm[4]=5;
if instance_exists(ctl) { with (ctl) {instance_destroy();} }
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ctl)
{
var shoot
shoot=instance_place(x,y,par_Shoot)
if (shoot==noone)
shoot=instance_nearest(x,y,par_Shoot)
if (shoot!=noone)
{
if instance_exists(par_HERO)
{

if place_meeting(x,y,obj_HERO_Melee)
    {
        if (obj_HERO_Melee.damage&gt;0)
        {
         
        if (alarm[4] &lt;=-1) alarm[4]=5;
        
        var kick=20 
        if (par_HERO.slide) kick=5;
        if (par_HERO.jumpkick) kick=5;
        if (par_HERO.x&gt;x)
        ctl.kickback=-kick; else ctl.kickback=kick;

        ctl.hp=ctl.hp-obj_HERO_Melee.damage;
        
        if (alarm[3] &lt;=-1) 
        {   
        image_blend = c_red;
        alarm[3]=4;
        }
        
        }
    }
    else
    {

    
        ctl.hp=ctl.hp-shoot.damage;   
    
        if (alarm[3] &lt;=-1) 
        {   
        image_blend = c_red;
        alarm[3]=4; 
        }
    }//END MELEE

if (ctl.hp&lt;=0)
{
image_speed=0;
ctl.hsp=0;
image_blend = c_red;


switch(irandom(1))
{
case 0:
audio_sound_pitch(snd_Arcade_Blast_A,random_range(.9,1.1)*global.game_speed);
audio_play_sound(snd_Arcade_Blast_A,10,false);
break;

case 1:
audio_sound_pitch(snd_Arcade_Blast_B,random_range(.9,1.1)*global.game_speed);
audio_play_sound(snd_Arcade_Blast_B,10,false);
break;
}

with instance_create(x,y,obj_Static)
    {
    loops=3;
    image_yscale=random_range(1.25,1.5)*other.image_yscale;
    image_xscale=image_yscale;
    depth=irandom_range(-5,-4);
    }
    
with instance_create(x,y-50*image_yscale,obj_Explosion_A)
{
size=1;
flash=false;
if (irandom_range(1,3)==1) tempo=false;
}


if (alarm[4]==-1) alarm[4]=5;

if instance_exists(ctl) { with (ctl) {instance_destroy();} }
instance_destroy();
}
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ctl)
{

if sprite_exists(sprite_index) 
{
//HIT TILT
if (abs(ctl.kickback)&gt;0) 
    image_angle = 25*-sign(ctl.kickback); 
    else
    image_angle=0;

draw_self();
}

if (global.enemy_hp)
    {
    draw_rectangle_color(x,bbox_top-25,x+(ctl.init_hp),bbox_top-22,c_red,c_red,c_red,c_red,false);
    draw_rectangle_color(x,bbox_top-25,x+(ctl.hp),bbox_top-22,c_green,c_green,c_green,c_green,false);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
