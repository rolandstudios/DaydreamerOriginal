<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_OrangeFireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>par_Shoot</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create Target
target_x[1]=par_HERO.x;
target_x[2]=par_HERO.x;
target_y[1]=par_HERO.y;
target_y[2]=par_HERO.y;

image_speed=.5;
seek=1;
damage=par_HERO.damage;
org_damage=par_HERO.damage;
color_gain=0;

image_xscale=.35;
image_yscale=.35;

if !instance_exists(obj_Homing_lock)
    instance_create(x,y,obj_Homing_lock);


if instance_exists(par_Enemy) //ENEMY LOCK
{
    inst = instance_nearest(x, y, par_Enemy);
    
    target_x[2]=(inst.x);
    target_y[2]=(inst.y);
    
    target_x[1]=(x+inst.x)/2+irandom_range(-100,100);
    target_y[1]=(y+inst.y)/2+irandom_range(-100,100);
    
    
}
else //BLIND SHOT WITH NO TARGET
{
    target_x[1]=par_HERO.x+(par_HERO.image_xscale*400);
    target_y[1]=par_HERO.y+random_range(-100,100);
    
    target_x[2]=par_HERO.x+(par_HERO.image_xscale*800);
    target_y[2]=par_HERO.y;
}

s_speed = 8;


alarm[0]=20/global.game_speed;
alarm[1]=100/global.game_speed;

/*
//Trail ----------------
for (a=0;a&lt;=20;a+=1)
{
trail_x[a]=x;
trail_y[a]=y;
trail_angle[a]=image_angle;
}




    


































</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//seek=true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//CREATE FIRE FLARE -----------------------------
if (image_index==0)
{
with (instance_create(x,y,obj_FireFlare))
    {    
    if instance_exists(par_HERO)
        {   
            switch(par_HERO.look)
            {
            case 2: image_angle=45; break;
            case 3: image_angle=0; break;
            case 12: image_angle=90; break;
            case 6: image_angle=270; break;
            case 10: image_angle=135; break;
            case 5: image_angle=315; break;
            case 7: image_angle=225; break;
            case 9: image_angle=180; break;
            }    
        }
    image_xscale = image_xscale*2;
    image_yscale = image_yscale*2; 
    }
}
//---------------------------------------------

//TARGET FOLLOW -------------------------------

if (target_y[seek] &lt; y)
    {
        if (target_x[seek] &gt; x) 
            {
            if(direction&gt;45 &amp;&amp; direction&lt;225) direction=direction-3;
            if(direction&lt;45 || direction&gt;225) direction=direction+3;
        }
        if (target_x[seek] &lt; x) 
        {
            if(direction&gt;135&amp;&amp;direction&lt;315) direction=direction-3;
            if(direction&lt;135||direction&gt;315) direction=direction+3;
        }
    }
if (target_y[seek] &gt; y)
    {
        if (target_x[seek] &gt; x) 
        {
            if(direction&gt;315 || direction&lt;135) direction=direction-3;
            if(direction&lt;315 &amp;&amp; direction&gt;135) direction=direction+3;
        }
        if (target_x[seek] &lt; x) 
        {
            if(direction&gt;225 || direction&lt;45) direction=direction-3;
            if(direction&lt;225 &amp;&amp; direction&gt;45) direction=direction+3;
        }
    }
    
//CHECK IF MADE TARGET ONE ----------------------------------------
if (seek==1)
{
    if (y&lt;target_y[seek]) &amp;&amp; (y&gt;target_y[seek]-100) 
    {
        if (x&lt;target_x[seek]+100) &amp;&amp; (x&gt;target_x[seek]-100) 
            {
            seek+=1;
            }
    }
}

image_angle=direction;

//SHOT LOOK PROGRESSION -----------------------------------
s_speed=s_speed*1.05;
if (color_gain&lt;255){if (color_gain&lt;10) color_gain=color_gain+1; else color_gain=color_gain+8;}
if (color_gain&gt;255) color_gain=255;
if(image_xscale&lt;2)
    {
    image_xscale=image_xscale+.02;
    image_yscale=image_yscale+.02;
    }
damage=org_damage*image_xscale;
image_speed=.5*global.game_speed;
if(image_index&gt;=24) image_speed=0;
speed=s_speed*global.game_speed;

/*
//TRAIL ------------------------------------------------  
for (a=20;a&gt;0;a-=1)
    {
    trail_x[a]=trail_x[a-1];
    trail_y[a]=trail_y[a-1];
    trail_angle[a]=trail_angle[a-1];
    }
    
    trail_x[0]=x;
    trail_y[0]=y;
    trail_angle[0]=image_angle;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var inst
inst = instance_place(x, y, par_Enemy);

if (inst==noone)
inst = instance_nearest(x, y, par_Enemy);

if (inst==noone) {instance_destroy();}
else
{
if (inst.type==1)
{
with instance_create(x,y,obj_FireFlare)
    {
    image_xscale=2*other.image_xscale;
    image_yscale=2*other.image_yscale;
    image_angle = other.image_angle;
    }
    
    with instance_create(x,y,obj_Spark_B)
        {
        image_angle=other.image_angle;
        color=c_red;
        }
    instance_destroy();
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if sprite_exists(spr_Crosshair)
{
    draw_sprite(spr_Crosshair,0,target_x[1],target_y[1]);
    draw_sprite(spr_Crosshair,0,target_x[2],target_y[2]);
}
*/

image_blend = make_color_rgb(255,color_gain,color_gain);
draw_set_blend_mode(bm_add);
if sprite_exists(sprite_index) draw_self();
draw_set_blend_mode(bm_normal);

/*
draw_set_blend_mode(bm_add);
for (a=20;a&gt;0;a-=1)
    {
    draw_sprite_ext(sprite_index, image_index-a, trail_x[a], trail_y[a], image_xscale*(1-0.05*a), image_yscale*(1-0.05*a), trail_angle[a], image_blend, .75-(.025*a));
    }
draw_self();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
