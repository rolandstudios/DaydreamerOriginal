<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Lurker_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy_Body</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if(sprite_get_yoffset(global.spr_Lurker_Walk)!=66)
{
global.spr_Lurker_Walk=sprite_add(working_directory+"\Imports\spr_Lurker_Walk.png",16,0,1,63,66);
sprite_index=global.spr_Lurker_Walk;
sprite_collision_mask(global.spr_Lurker_Walk, 0, 2, 55, 15, 70, 83, 2, 252);
}

if(sprite_get_yoffset(global.spr_Lurker_Bite)!=90)
{
global.spr_Lurker_Bite=sprite_add(working_directory+"\Imports\spr_Lurker_Bite.png",16,0,1,63,90);
sprite_index=global.spr_Lurker_Bite;
sprite_collision_mask(global.spr_Lurker_Bite, 0, 2, 55, 35, 70, 105, 2, 252);
}

if(sprite_get_yoffset(global.spr_Lurker_Idle)!=67)
{
global.spr_Lurker_Idle=sprite_add(working_directory+"\Imports\spr_Lurker_Idle.png",16,0,1,62,67);
sprite_index=global.spr_Lurker_Idle;
sprite_collision_mask(global.spr_Lurker_Idle, 0, 2, 55, 14, 70, 83, 2, 252);
}
*/

if place_meeting(x,y,par_wall) instance_destroy();

blue=false;
swing_range=false;
west_east = 0;
active=true;
scale=image_xscale*random_range(.7,1.3);
hp=4*scale;
init_hp=hp;
setspeed = 2 + random_range(1,5);
hsp=0;
vsp=0;
damage=3*global.difficulty;
moveChoose=true;
moveChoice=1;
stuck=0;
walkAway=false;
tiltup=false;
last_y=y;
average_y=y;
grav=16;
kickback=0;
type=1;
burn=false;
grounded=false;

image_xscale=scale;
image_yscale=scale;

//Color Correction----
brightness=.04; //brightness
contrast=0; //contrast
//--------------------
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>burn=false;
image_blend=c_white
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kickback=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walkAway=false;
moveChoose=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_EnemyHit_A</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveChoose=true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_HERO) {instance_destroy();}
else
{
if (hp&lt;=0)
{
global.Points+=irandom_range(2,10);
audio_sound_pitch(snd_lurkerdie,random_range(.9,1.1)*global.game_speed);
audio_play_sound(snd_lurkerdie,10,false);


with instance_create(x,y,obj_BloodSplash)
{
image_xscale=.5*other.scale;
image_yscale=.5*other.scale;

if (other.blue)
    {
    lurker=true;
    }

}
instance_destroy();
}


if (par_HERO.x-1000 &lt; bbox_right) &amp;&amp; (par_HERO.x + 1000 &gt; bbox_left) 
{
active=true; 
}
else 
{
if(grounded) active=false;
}

if (!active)
{
if !place_meeting(x,y,obj_EnemyCheck) instance_deactivate_object(self);
}


if (active)
{
var HERO = instance_nearest(x,y,par_Goodguy);
//check direction
if (HERO.x &gt; x)
{
    
    image_xscale = scale;
    hsp=setspeed;
    west_east = 1;
    
}

if (HERO.x &lt; x) 
{
    
    image_xscale = -scale;
    hsp=-setspeed;
    west_east = 0;
    
}


//CheckSwingRange
if(HERO.x &lt; x) &amp;&amp; (HERO.x &gt; x - 35) || (HERO.x &gt; x) &amp;&amp; (HERO.x &lt; x + 35) 
 {
 swing_range = true;
 }
 else
 {
 swing_range = false;
 }


 
if(moveChoose==true)
    {   
        if (moveChoice==1)
            {
                moveChoice=irandom_range(2, 3);
            }
            else
            {
            moveChoice=irandom_range(1, 3);
            } 
         
         
         if (swing_range==true) moveChoice=3;
         moveChoose=false;
               
    }
 
    
switch(moveChoice)
{

    case 1:  //STANDING
    
    //image_angle=0; //tilt level
    
    if (sprite_index != spr_Lurker_Idle)
        {
        sprite_index = spr_Lurker_Idle; 
        image_index=0;
        image_speed=.5*global.game_speed;
        alarm[0]=40;
        }
    
    sprite_index = spr_Lurker_Idle; 
    image_speed = .5*global.game_speed;
    damage=5;
    hsp=0;
    vsp=grav*global.game_speed;
    shadow_ON=true;
    
    
    break;
    
    case 2: //WALKING
    
    if (sprite_index != spr_Lurker_Walk)
        {
        sprite_index = spr_Lurker_Walk; 
        image_index=0;
        alarm[0]=250;
        }
      
              
    vsp=grav*global.game_speed;
    
    sprite_index = spr_Lurker_Walk; 
    
    image_speed = 0.5*global.game_speed;
    
    damage=5;
    
    if(swing_range) 
        {
        alarm[0]=-1; 
        moveChoose=true;
        }
        
    break;
    
    
    case 3:  //BITE
    
    //image_angle=0; //tilt level
    
    if (sprite_index != spr_Lurker_Bite)
        {
        sprite_index = spr_Lurker_Bite; 
        image_index=0;
        image_speed=.4*global.game_speed;
        
            if !instance_exists(obj_Tube)
            {
            audio_sound_pitch(snd_cartoon_bite,global.game_speed);
            audio_play_sound(snd_cartoon_bite,10,false);
            }
        }
    
    sprite_index = spr_Lurker_Bite; 
    image_speed = .4*global.game_speed;
    damage=5;
    hsp=0;
    vsp=grav*global.game_speed;
    
    if (image_index&gt;=15)  moveChoose=true;
    
    break;
    
}  

if (kickback!=0) //KICK BACK
{
    hsp=kickback;
    vsp=-1;
    kickback = kickback - sign(kickback);
}

//Collisions ------------------------------------------------------------



//Horizontal Collision ------------------------------

if (walkAway)
    {
    hsp=-(hsp/2);
    image_xscale=-(image_xscale);
    }

if place_meeting(x+hsp,y,par_wall) 
{
    if !place_free(x+hsp,y) 
    {
    yplus = 0;   
    while (place_meeting(x+hsp,y-yplus,par_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus+= 1;
    if place_meeting(x+hsp,y-yplus,par_wall)
    {
        while (!place_meeting(x+sign(hsp),y,par_wall)) x+=sign(hsp);
        hsp =0; 
        if(!walkAway) stuck=stuck+1;
        
   
    }
    else
    {
        y=y-yplus;
        
    }
    }
}

if (!place_meeting(x+(10*hsp),bbox_bottom+40,par_wall)) 
    { 
    hsp=0; 
    moveChoice=1;
    if(!walkAway) stuck=stuck+1;
    }

if (stuck&gt;10)
{
walkAway=true;
stuck=0;
alarm[2]=irandom_range(40,80);
}


    


x = x + hsp*global.game_speed;

//Vertical Collision ------------------------------




if place_meeting(x,y+vsp,par_wall) 
{ 
   // if !place_free(x,y+vsp) 
   // {
    while (!place_meeting(x,y+vsp,par_wall)) 
        { 
        y=y+sign(vsp);
        } 
        
    grounded=true;
    vsp = 0;
    grav=3;
    //}
}
else
{
grav=16;
}


if (last_y&gt;y)  
{
    if(abs(image_angle+sign(hsp))&lt;8)
    image_angle=image_angle+sign(hsp); // tilt up
}
if (last_y&lt;y) 
{
    if(abs(image_angle-sign(hsp))&lt;8)
    image_angle=image_angle-sign(hsp);  // tilt down
     
} 

if (last_y==y)
{
if  (image_angle&gt;0) image_ange=image_angle-1;
if  (image_angle&lt;0)  image_ange=image_angle+1;        
}

        
last_y=y;


y=y+vsp*global.game_speed;

//TRACK COLLIDE ----------------------------------
if place_meeting(x,y+4,par_Track)
{
    var track 
    track = instance_position(x,y,par_Track);
    if (track ==noone)
    track = instance_nearest(x,y,par_Track);
    
    if (bbox_bottom&lt;=track.bbox_top+4*abs(track.image_yscale)) 
    {
    x = x+(track.image_speed*1.57*track.image_xscale);
    }
}
//END TRACK --------------------------------------

//image_speed=image_speed*global.game_speed;

}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var shoot
shoot=instance_place(x,y,par_Shoot)
if (shoot==noone)
shoot=instance_nearest(x,y,par_Shoot)
if (shoot!=noone)
{

if place_meeting(x+hsp,y+vsp,obj_HERO_Melee)
    {
        if (obj_HERO_Melee.damage&gt;0)
        {
         
        if (alarm[3] &lt;=-1) alarm[3]=5;

        var kick=20;
        if (par_HERO.slide) kick=5;
        if (par_HERO.jumpkick) kick=5;
        if (par_HERO.x&gt;x)
        kickback=-kick; else kickback=kick;
        
        //vsp=-5;
        hp=hp-obj_HERO_Melee.damage;
        //}
        
        if (alarm[1] &lt;=-1) 
        {   
        image_blend = c_red;
        alarm[1]=4;
        }
        
        }
    }
    else
    {
        //if (alarm[1]==-1) 
        hp=hp-shoot.damage;   
    
        if (alarm[1] &lt;=-1) 
        {   
        image_blend = c_red;
        alarm[1]=4; 
        }
    }
    
if place_meeting(x,y,obj_Flame_02)
{
    if (burn==false)
    {
    alarm[5]=50;
    burn=true;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (burn)
    {
    if (alarm[5]&gt;49)||(alarm[5]==40)||(alarm[5]==30)||(alarm[5]==20)||(alarm[5]==10)
    {
        burn_x = random_range(-.25,.25)*sprite_width*abs(image_xscale);
        burn_y = random_range(-.25,.25)*sprite_height*image_yscale;
        image_blend=c_red;
        
         with instance_create(x+burn_x,y+burn_y,obj_burn_damage)
            {
            image_xscale=other.image_yscale;
            image_yscale=other.image_yscale;
            }       
    }
    else
    {
    with instance_create(x+burn_x,y+burn_y,obj_burn)
        {
            image_xscale=other.image_yscale;
            image_yscale=other.image_yscale;
        }
    }
    }

    
if (blue)
{
    shader_set(shdr_blackandwhite);
    shader_set(shdr_Lurker);
    //shader_set(shdr_colorize);
    //shader_set_uniform_f(global.brightness_amount , brightness);
    //shader_set_uniform_f(global.contrast_amount, contrast);
    //draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, make_color_rgb(177,225,255), 1 );
    //draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, make_color_rgb(177,215,235), 1 );
     //draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, make_color_rgb(197,235,255), 1 );
     draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, make_color_rgb(210,235,255), 1 );
    shader_reset();
}
else
{
    draw_self();
}

if (global.enemy_hp)
    {
    draw_rectangle_color(x,bbox_top-25,x+(init_hp),bbox_top-22,c_red,c_red,c_red,c_red,false);
    draw_rectangle_color(x,bbox_top-25,x+(hp),bbox_top-22,c_green,c_green,c_green,c_green,false);
    }
    
/*
    shader_set(shd_bright_contrast);
    shader_set_uniform_f(global.brightness_amount , brightness);
    shader_set_uniform_f(global.contrast_amount, contrast);
    draw_self();
    
    shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>269,492</point>
    <point>256,256</point>
  </PhysicsShapePoints>
</object>
