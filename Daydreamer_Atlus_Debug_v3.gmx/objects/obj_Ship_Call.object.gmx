<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_collide3</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.spr_QuadroPOD_Idle==0)
{
master.num+=1;
master.spr_QuadroPOD_Idle=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_QuadroPOD_Idle.png",26,0,1,86,142);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.spr_Little_Consumer_LookAround==0)
{
master.num+=1;
master.spr_Little_Consumer_LookAround=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Little_Consumer_LookAround.png",31,0,1,63,79);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.spr_Medium_Consumer_Idle==0)
{
master.num+=1;
master.spr_Medium_Consumer_Idle=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Medium_Consumer_Idle.png",24,1,1,56,139);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_Ship_Short==0)
{
master.num+=1;
master.spr_Ship_Short=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Ship_Short.png",9,1,1,445,113);
sprite_collision_mask(global.sprite[master.num],1, 1, 0, 0,sprite_width, sprite_height,1,225);
}

hit=false;
amount=1;
hold=irandom_range(25,75);
desat=false;
count=0;
type=0;
color=c_white;

max_type_1=100;
max_type_2=100;
max_type_3=100;

if (sign(image_xscale)==-1)
{
dropoff_x=room_width+300;
}
else
{
dropoff_x=-300
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sign(image_xscale)==-1)
               {
               with  instance_create(dropoff_x,y-count*irandom_range(40,55),obj_Short_Ship)
                  { 
                  if (other.type==0)
                  enemy_type=irandom_range(1,3);
                  else
                  enemy_type=other.type; 
                    
                    
                  desat=other.desat;
                  color=other.color;
                  scale=.75;
                  self_destruct=true;
                  image_xscale=-1;
                  west_east=1;  
                  x_landing=other.x-other.amount*100;
                  damage=0;
                  hsp=50;
                  max_hsp=40;
                  
                  max_type_1=other.max_type_1;
                  max_type_2=other.max_type_2;
                  max_type_3=other.max_type_3;
                  }
               }
               else
               {
                with  instance_create(dropoff_x,y-count*irandom_range(25,50),obj_Short_Ship)
                  {                
                  if (other.type==0)
                  enemy_type=irandom_range(1,3);
                  else
                  enemy_type=other.type; 
                    
                  desat=other.desat;
                  color=other.color;
                  scale=.75;
                  self_destruct=true;
                  image_xscale=1;
                  west_east=0;  
                  x_landing=other.x+other.amount*100;
                  damage=0;
                  hsp=25;
                  max_hsp=40;
                  
                  max_type_1=other.max_type_1;
                  max_type_2=other.max_type_2;
                  max_type_3=other.max_type_3;
                  }
               }
count+=1;
amount-=1;

if (amount&lt;=0) 
    instance_destroy();
    else
    alarm[0]=hold;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_HERO">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hit==false)
{
            if (sign(image_xscale)==-1)
               {
               with  instance_create(dropoff_x,y-count*irandom_range(25,50),obj_Short_Ship)
                  {
                  
                  if (other.type==0)
                  enemy_type=irandom_range(1,3);
                  else
                  enemy_type=other.type; 
                  
                  desat=other.desat;
                  color=other.color;
                  scale=.75;
                  self_destruct=true;
                  image_xscale=-1;
                  west_east=1;  
                  x_landing=other.x-other.count*irandom_range(25,100);
                  damage=0;
                  hsp=50;
                  max_hsp=40;
                  
                  max_type_1=other.max_type_1;
                  max_type_2=other.max_type_2;
                  max_type_3=other.max_type_3;
                  }
               }
               else
               {
                with  instance_create(dropoff_x,y-count*irandom_range(25,50),obj_Short_Ship)
                  {
                  
                  if (other.type==0)
                  enemy_type=irandom_range(1,3);
                  else
                  enemy_type=other.type; 
                    
                  desat=other.desat;
                  color=other.color;
                  scale=.75;
                  self_destruct=true;
                  image_xscale=1;
                  west_east=0;  
                  x_landing=other.x+other.count*irandom_range(25,100);
                  damage=0;
                  hsp=50;
                  max_hsp=40;
                  
                  max_type_1=other.max_type_1;
                  max_type_2=other.max_type_2;
                  max_type_3=other.max_type_3;
                  }
               }
amount-=1;
count+=1;
hit=true;

if (amount&lt;=0) 
    instance_destroy();
    else
    alarm[0]=hold;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
