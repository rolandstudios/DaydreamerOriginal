<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_GreenForrest_Tree_A==0)
{
master.num+=1;
master.SWAP_spr_GreenForrest_Tree_A=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_GreenForrest_Tree_A.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.SWAP_spr_GreenForrest_Tree_B==0)
{
master.num+=1;
master.SWAP_spr_GreenForrest_Tree_B=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_GreenForrest_Tree_B.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}

if(master.SWAP_spr_GreenForrest_Tree_C==0)
{
master.num+=1;
master.SWAP_spr_GreenForrest_Tree_C=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_GreenForrest_Tree_C.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}
    
    color=image_blend;
    if (colour_get_saturation(color)==0)
    color_overide=false;
    else
    color_overide=true;
    
x_offset=x;
y_offset=y;
part_x=12;
part_y=12;
scale=1;
count=0;
Current_Layer=1;
horizon=1;

cached=false;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (part_x!=0)
x=x_offset+view_xview[0]/part_x;
if (part_y!=0)
y=y_offset+view_yview[0]/part_y;

if (cached==false)
{
var a;
for (a=-100; a&lt;room_width+100; a+=(2500)*random_range(.9,1.1)*scale) 
    {
        tree_x[count]=a;
        tree_y[count]=horizon-10*Current_Layer;
        tree_type[count]=irandom_range(1,3);       
        tree_xscale[count]=scale*random_range(1,1.2);                        
        tree_yscale[count]=scale*random_range(1.7,2);             
        if (irandom_range(1,2)==1) tree_xscale[count]*=-1;
    count+=1;
    }    
cached=true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (cached==true)
{
for(a=0;a&lt;count;a+=1)
{    
    switch(tree_type[a])
    {
    case 1: index=global.sprite[master.SWAP_spr_GreenForrest_Tree_A]; break;
    case 2: index=global.sprite[master.SWAP_spr_GreenForrest_Tree_B]; break;
    case 3: index=global.sprite[master.SWAP_spr_GreenForrest_Tree_C]; break;
    }
    
    var tx = x + tree_x[a];
    var ty = y + tree_y[a];

    if sprite_exists(index)
    {
    if (tx&gt;view_xview-200) &amp;&amp; (tx&lt;view_xview+1500)
    draw_sprite_ext(index,0,tx,ty,tree_xscale[a],tree_yscale[a],image_angle,color,image_alpha); ;        
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>293,730</point>
    <point>730,730</point>
  </PhysicsShapePoints>
</object>
