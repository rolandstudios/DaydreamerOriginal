<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bloom = .3;
var_radial_blur_offset = 0;

bloom_up=true;
bloom_max=.2;
//bloom_max=.4;
//bloom_min=0;
bloom_min=.00;
bloom_inc=.005;

blur_up=true;
blur_max=0.007;
blur_min=0;
blur_inc=0.00005;

//master_inc=100;
master_inc=1000;


if !instance_exists(obj_vignette_b)
instance_create(x,y,obj_vignette_b)

if (global.blur_fx==0) instance_destroy();

draw_set_color(c_white);


if (global.blur_fx==3)  //GOOD QUALITY [Quadro]
{
uni_time = shader_get_uniform(shd_radial_blur2,"time");
var_time_var = 0;

uni_mouse_pos = shader_get_uniform(shd_radial_blur2,"mouse_pos");
var_mouse_pos_x =640;
var_mouse_pos_y =360;

uni_resolution = shader_get_uniform(shd_radial_blur2,"resolution");
var_resolution_x = view_wview;
var_resolution_y = view_hview;


uni_radial_blur_offset = shader_get_uniform(shd_radial_blur2,"radial_blur_offset");
var_radial_blur_offset = var_radial_blur_offset;


uni_radial_brightness = shader_get_uniform(shd_radial_blur2,"radial_brightness");
var_radial_brightness = 1;


uni_bloom = shader_get_uniform(shd_radial_blur2,"bloom");
var_bloom = bloom;

uni_blur_amount = shader_get_uniform(shd_radial_blur2,"blur_amount");
var_blur_amount = 10;
}


if (global.blur_fx==2)  //GOOD QUALITY [GFX]
{
uni_time = shader_get_uniform(shd_radial_blur,"time");
var_time_var = 0;

uni_mouse_pos = shader_get_uniform(shd_radial_blur,"mouse_pos");
var_mouse_pos_x =640;
var_mouse_pos_y =360;

uni_resolution = shader_get_uniform(shd_radial_blur,"resolution");
var_resolution_x = view_wview;
var_resolution_y = view_hview;


uni_radial_blur_offset = shader_get_uniform(shd_radial_blur,"radial_blur_offset");
var_radial_blur_offset = var_radial_blur_offset;


uni_radial_brightness = shader_get_uniform(shd_radial_blur,"radial_brightness");
var_radial_brightness = 1;


uni_bloom = shader_get_uniform(shd_radial_blur,"bloom");
var_bloom = bloom;

uni_blur_amount = shader_get_uniform(shd_radial_blur,"blur_amount");
var_blur_amount = 10;
}


//-----------------------------------------------------------------------------------------------
if (global.blur_fx==1) //FAST QUALITY
{
uni_time = shader_get_uniform(shd_radial_blur_fast,"time");
var_time_var = 0;

uni_mouse_pos = shader_get_uniform(shd_radial_blur_fast,"mouse_pos");
var_mouse_pos_x = 640;
var_mouse_pos_y = 360;

uni_resolution = shader_get_uniform(shd_radial_blur_fast,"resolution");
var_resolution_x = view_wview;
var_resolution_y = view_hview;


uni_radial_blur_offset = shader_get_uniform(shd_radial_blur_fast,"radial_blur_offset");
var_radial_blur_offset = var_radial_blur_offset;


uni_radial_brightness = shader_get_uniform(shd_radial_blur_fast,"radial_brightness");
var_radial_brightness = 1;

uni_bloom = shader_get_uniform(shd_radial_blur_fast,"bloom");
var_bloom = bloom;
}

shader_enabled = true;
full_screen_effect = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.gamestart)
{ 
instance_destroy();
}
else
{
if !instance_exists(obj_vignette_b)
instance_create(x,y,obj_vignette_b)


if keyboard_check(ord('Q')) bloom_max += 0.001;
if keyboard_check(ord('A')) bloom_max -= 0.001;

if keyboard_check(ord('W')) bloom_min += 0.001;
if keyboard_check(ord('S')) bloom_min -= 0.001;

if keyboard_check(ord('E')) blur_max += 0.00001;
if keyboard_check(ord('D')) blur_max -= 0.00001;

if keyboard_check(ord('R')) blur_min += 0.00001;
if keyboard_check(ord('F')) blur_min -= 0.00001;

if keyboard_check(ord('T')) master_inc += 1;
if keyboard_check(ord('G')) {if (master_inc&gt;1) master_inc -= 1;}

if keyboard_check(ord('X')) //SYNC
    {
    bloom=bloom_min; bloom_up=true;
    var_radial_blur_offset=blur_min; blur_up=true;
    }

bloom_inc=(bloom_max-bloom_min)*(.01/(master_inc*.001));
blur_inc=(blur_max-blur_min)*(.01/(master_inc*.001));

if (bloom_up)
 bloom  += bloom_inc;
else
 bloom  -= bloom_inc;

  
if (bloom&gt;=bloom_max) bloom_up=false;
if (bloom&lt;=bloom_min) bloom_up=true;


if (blur_up) 
 var_radial_blur_offset += blur_inc;
else
 var_radial_blur_offset -= blur_inc;



if (var_radial_blur_offset&gt;=blur_max) blur_up=false;
if (var_radial_blur_offset&lt;=blur_min) blur_up=true;

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var_time_var+=0.04;

var_mouse_pos_x = 640;
var_mouse_pos_y = 360;

//var_mouse_pos_x = mouse_x;
//var_mouse_pos_y = mouse_y;

offset=1;

//surface_resize(application_surface, display_get_gui_width(), display_get_gui_height()); 

 
if (global.blur_fx==3) //GOOD QUALITY
{
if shader_enabled shader_set(shd_radial_blur2);
    shader_set_uniform_f(uni_time, var_time_var);
    shader_set_uniform_f(uni_mouse_pos, var_mouse_pos_x, var_mouse_pos_y);
    shader_set_uniform_f(uni_resolution, var_resolution_x, var_resolution_y);
    
    if instance_exists(obj_Daydreamer_LOGO)
    shader_set_uniform_f(uni_radial_blur_offset, var_radial_blur_offset/obj_Daydreamer_LOGO.pitch);
    else
    shader_set_uniform_f(uni_radial_blur_offset, var_radial_blur_offset);
    
    //shader_set_uniform_f(uni_radial_blur_offset, var_radial_blur_offset);
    
    shader_set_uniform_f(uni_radial_brightness, var_radial_brightness);
    shader_set_uniform_f(uni_bloom, bloom);
    if window_get_fullscreen()
    offset=1.5; else offset=1;
    if full_screen_effect draw_surface_stretched_ext(application_surface, 0, 0, 1280*offset, 720*offset,c_white,1);
    //draw_surface(application_surface,0,0);
shader_reset();
}

if (global.blur_fx==2) //GOOD QUALITY
{
if shader_enabled shader_set(shd_radial_blur);
    shader_set_uniform_f(uni_time, var_time_var);
    shader_set_uniform_f(uni_mouse_pos, var_mouse_pos_x, var_mouse_pos_y);
    shader_set_uniform_f(uni_resolution, var_resolution_x, var_resolution_y);
    
    if instance_exists(obj_Daydreamer_LOGO)
    shader_set_uniform_f(uni_radial_blur_offset, var_radial_blur_offset/obj_Daydreamer_LOGO.pitch);
    else
    shader_set_uniform_f(uni_radial_blur_offset, var_radial_blur_offset);
    
    //shader_set_uniform_f(uni_radial_blur_offset, var_radial_blur_offset);
    
    shader_set_uniform_f(uni_radial_brightness, var_radial_brightness);
    shader_set_uniform_f(uni_bloom, bloom);
    if window_get_fullscreen()
    offset=1.5; else offset=1;
    if full_screen_effect draw_surface_stretched_ext(application_surface, 0, 0, 1280*offset, 720*offset,c_white,1);
    //draw_surface(application_surface,0,0);
shader_reset();
}


if (global.blur_fx==1) //FAST QUALITY
{
if shader_enabled shader_set(shd_radial_blur_fast);
    shader_set_uniform_f(uni_time, var_time_var);
    shader_set_uniform_f(uni_mouse_pos, var_mouse_pos_x, var_mouse_pos_y);
    shader_set_uniform_f(uni_resolution, var_resolution_x, var_resolution_y);
    
    if instance_exists(obj_Daydreamer_LOGO)
    shader_set_uniform_f(uni_radial_blur_offset, var_radial_blur_offset/obj_Daydreamer_LOGO.pitch);
    else
    shader_set_uniform_f(uni_radial_blur_offset, var_radial_blur_offset);
    
    shader_set_uniform_f(uni_radial_brightness, var_radial_brightness);
    shader_set_uniform_f(uni_bloom, bloom);
    if window_get_fullscreen()
    offset=1.5; else offset=1;
    if full_screen_effect draw_surface_stretched_ext(application_surface, 0, 0, 1280*offset, 720*offset,c_white,1);
    //draw_surface(application_surface,0,0);
shader_reset();
}

/*
if instance_exists(obj_debug)
{

draw_set_font(fnt_Arial);
draw_set_alpha(1);
image_alpha=1;
image_blend=c_red;
draw_set_color(c_red);

draw_text(400,400,"[Q/A] Bloom Max: " + string(bloom_max));
draw_text(400,420,"[W/S] Bloom Min: " + string(bloom_min));
draw_text(400,440,"[E/D]  Blur Max: (" + string(blur_max*100)+")/100");
draw_text(400,460,"[R/F]  Blur Min: (" + string(blur_min*100)+")/100");
draw_text(400,480,"[T/G] Master Inc: " + string(master_inc)+" [X]-SYNC");
draw_text(400,500,"Bloom: " + string(bloom));
draw_text(400,520,"Blur: (" + string(var_radial_blur_offset*100)+")/100");
if instance_exists(obj_vignette_b)
{
draw_text(400,540,"[Y/H] Vignette: (" + string(obj_vignette_b.image_alpha*100)+")/100");
}
}
*/
/*
draw_set_alpha(1);
draw_set_color(c_white);
draw_text(700,500,string(var_mouse_pos_x)); 
draw_text(700,515,string(var_mouse_pos_y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
