<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>par_spikes</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_SpikeBox_B==0)
{
master.num+=1;
master.SWAP_spr_SpikeBox_B=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Sprites\spr_SpikeBox_B.png",2,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

sprite_index=global.sprite[master.SWAP_spr_SpikeBox_B];

enemy_damage=false;
damage=8*global.difficulty;
hp=100;
image_speed=0;
image_index=0;
flash=irandom_range(1,10)*.1;
flashup=true;
type=2;

stat_index=0;
stat_A_x=x-60;
stat_B_x=x+80;
walled=true;
stat_angle_A=0;
stat_angle_B=0;

color=image_blend;
active=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x&gt;view_xview-400) &amp;&amp; (x&lt;view_xview+1680) 
{
    if (y&gt;view_yview-400) &amp;&amp; (y&lt;view_yview+1120)
    {
    active=true;
    }
    else
    {
    active=false;
    }
}
else
{
active=false;
}

if (!active)
{
instance_deactivate_object(self);
}

if (active)
{

if (walled)
{
wall = instance_create(x,y,obj_wall_center);
width=(sprite_get_width(sprite_index)/37)*image_xscale;
height=(sprite_get_height(sprite_index)/37)*image_yscale;
    with (wall)
    {
    image_yscale=other.height;
    image_xscale=other.width;
    }
walled=false;
}


if (flashup) flash+=.05; else flash-=.05;
if (flash&gt;=.5) flashup=false;
if (flash&lt;=0) flashup=true;

if place_meeting(x,y,obj_ForceField)
{
    obj_ForceField.hp=0;
}


//HERO COLLIDE
if (par_HERO.x&gt;x) lean_x=1; else lean_x=-1;
if (par_HERO.y&gt;y) lean_y=1; else lean_y=-1;

if place_meeting(x+lean_x,y+lean_y,par_HERO)
{


    if (par_HERO.hp&gt;1) &amp;&amp; (par_HERO.grounded)
     {
     par_HERO.hp-=.2*global.difficulty;
     if (par_HERO.hsp==0) par_HERO.sprite_index=spr_Old_Olivia_Hit; 
     par_HERO.color=c_red;  
     if (global.rumble) gamepad_set_vibration(global.playing_index, 1, 1);
     }
    
    if !instance_exists(obj_ScreenFlash_static)
    {
            audio_sound_pitch(snd_HeavyDamage,.7*global.game_speed);
            if !audio_is_playing(snd_HeavyDamage)
            audio_play_sound(snd_HeavyDamage,10,false);
            
            audio_sound_pitch(snd_glitch_boom,.7*global.game_speed);
            audio_play_sound(snd_glitch_boom,12,false);
                
     with instance_create(x,y,obj_ScreenFlash_static){hold=4; flash=true;}
     
     if !instance_exists(obj_Static_trailer) 
        {
         with instance_create(x,y,obj_Static_trailer){desat=true;}
        } 
     
        repeat(3)
        {
        with instance_create((par_HERO.x+x)*.5+irandom_range(-25,25),(par_HERO.y+y)*.5+irandom_range(-25,25),obj_Static)
            {
            scale=1*random_range(.7,1)
            image_xscale=scale;
            image_yscale=scale;
            desat=true;
            }
        }     
    }
    
    if instance_exists(obj_dust_trail)
    {
    with (obj_dust_trail) {instance_destroy();}
    }
    
    if instance_exists(obj_Tunnel_Cliff_E_Elevator)
    {
        if (x&lt;2723) &amp;&amp; (x&gt;1373)
        {
        
            if (par_HERO.x&gt;x)
            {
                while place_meeting(x,y,par_HERO) par_HERO.x+=5;
            }
            else
            {
                while place_meeting(x,y,par_HERO) par_HERO.x-=5;
            }        
        }
        else
        {
            if (obj_Tunnel_Cliff_E_Elevator.x&gt;x)
                {
                    while place_meeting(x,y,par_HERO) par_HERO.x+=5;
                }
                else
                {
                    while place_meeting(x,y,par_HERO) par_HERO.x-=5;
                }    
        }
    }
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_blend=color;
draw_self();
draw_sprite_ext(sprite_index,1,x,y,image_xscale,image_yscale,image_angle,color,flash);

stat_index+=.5*global.game_speed;
if (stat_index&gt;=sprite_get_number(spr_Static)-1) 
    {
    stat_index=0;
    stat_angle_A=irandom_range(1,360);
    stat_angle_B=irandom_range(1,360);
    }
    
draw_set_blend_mode(bm_add);
shader_set(shdr_blackandwhite);
draw_sprite_ext(spr_Static,stat_index,stat_A_x,y,1.2*image_xscale,1.2*image_yscale,stat_angle_A,color,.25);
draw_sprite_ext(spr_Static,stat_index,stat_B_x,y,1.2*image_xscale,1.2*image_yscale,stat_angle_B,color,.25);
shader_reset();
draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>280,89</point>
    <point>280,280</point>
  </PhysicsShapePoints>
</object>
