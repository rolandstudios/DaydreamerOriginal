<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Crosshair</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weapon_check=false;
weapon_hit=false;
hero_x=0;

stop_hero=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_exists(par_HERO)
{
if (weapon_check==false)
{
    if place_meeting(x,y,par_HERO)
        {        
            
            if (stop_hero==true)
            {
            global.CutScene=true;          
            }
            
            par_HERO.hsp=0;
            par_HERO.warping=false;
            par_HERO.jumpkick=false;
            
            
        if instance_exists(obj_Baby_Fairy_tutorial)
        {
        if (obj_Baby_Fairy_tutorial.follow==true)
            {
            if (obj_Baby_Fairy_tutorial.dialog==2)
            {
            inst = instance_nearest(x,y,obj_Vertical_Shaft)
            with (inst) {locked=false;}// audio_play_sound(snd_Lock,10,false);}
            }
            obj_Baby_Fairy_tutorial.dialog+=1;
            obj_Baby_Fairy_tutorial.Frame_index=0
            obj_Baby_Fairy_tutorial.speak=true;
            obj_Baby_Fairy_tutorial.Frame=false;
            instance_destroy();
            weapon_check=false;
            }
        }
    }

}//Weapon Check is False

if (weapon_check==true) //EQUIVELANT OF HERO HIT
{
if place_meeting(x,y,obj_WeaponTank) 
    {
    if (weapon_hit==false)
        {
        weapon_hit=true;
        weapon=instance_place(x,y,obj_WeaponTank);
        if (weapon==noone)
        weapon=instance_nearest(x,y,obj_WeaponTank);
        }
    }


if (weapon_hit==true)
{
if !instance_exists(weapon)//!place_meeting(x,y,obj_WeaponTank)
    {
            if instance_exists(obj_Baby_Fairy_tutorial)
            {
            if (obj_Baby_Fairy_tutorial.follow==true)
            {
            if (obj_Baby_Fairy_tutorial.dialog==2) ||  (obj_Baby_Fairy_tutorial.dialog==1)
            {
            inst = instance_nearest(x,y,obj_Vertical_Shaft)
            with (inst) {locked=false;}// audio_play_sound(snd_Lock,10,false);}
            }
            //obj_Baby_Fairy_tutorial.dialog+=1;
            obj_Baby_Fairy_tutorial.dialog=3;
            obj_Baby_Fairy_tutorial.Frame_index=0
            obj_Baby_Fairy_tutorial.speak=true;
            obj_Baby_Fairy_tutorial.Frame=false;
            instance_destroy();
            }
            }
    }
}
}//END WEAPON CHECK

}//END HERO EXISTS
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
