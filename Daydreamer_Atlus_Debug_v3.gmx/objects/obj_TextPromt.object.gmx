<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-90</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>copystring_pos = 0;
copystring = "";
next_letter=true;
promt = global.promt;
type=1;
width=0;
last_width=0;
height=0;
lines=1;
hold=200;
center=true;
header=false;
gotit=false;
grow=0;

a=x-view_xview;
b=y-view_yview;

bubbles=false;
bubbles_finish=true;

blip=false;

bubble_Ax=a+160;
bubble_Ay=b+80;

bubble_Bx=bubble_Ax;
bubble_By=bubble_Ay;

bubble_A_shift=0;
bubble_B_shift=0;

halign=fa_left;
valign=fa_bottom;

draw_set_font(fnt_Arial_Big);
draw_set_halign(fa_left);
draw_set_valign(fa_bottom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_Text_A_Absolute);
audio_stop_sound(snd_Text_Toy);
audio_stop_sound(snd_Text_A_Robot);
audio_stop_sound(snd_Text_A_Hiss);
audio_stop_sound(snd_Text_A);
audio_stop_sound(snd_Text_B);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (blip==true)
    blip=false;
    else
    blip=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>next_letter=true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bubbles_finish)
{
if (copystring_pos == 1) //START THE SOUND
{
        switch(type)
        {
        case 1: //Strong
        if !audio_is_playing(snd_Text_A_Absolute)
        audio_play_sound(snd_Text_A_Absolute, 10, true);
        break;
        
        case 2: //Silly
        if !audio_is_playing(snd_Text_Toy)
        audio_play_sound(snd_Text_Toy, 10, true);
        break;
        
        case 3: //Robot
        if !audio_is_playing(snd_Text_A_Robot)
        audio_play_sound(snd_Text_A_Robot, 10, true);
        break;
        
        case 4: //Scratchy 
        if !audio_is_playing(snd_Text_A_Hiss)
        audio_play_sound(snd_Text_A_Hiss, 10, true);
        break;
        
        case 5: //Regular - High 
        if !audio_is_playing(snd_Text_A)
        audio_play_sound(snd_Text_B, 10, true);
        break;
        
        case 6: //Regular - Low
        if !audio_is_playing(snd_Text_B)
        audio_play_sound(snd_Text_B, 10, true);
        break; 
        }
}        
        
if (next_letter)
{
copystring_pos += 1;
copystring = string_copy(promt,0,copystring_pos);
letter=string_char_at(promt,copystring_pos);

if (letter == ".")
    {
    pause=20; //PAUSE THE SOUND
        switch(type)
        {
        case 1: //Strong
        audio_pause_sound(snd_Text_A_Absolute);
        break;
        
        case 2: //Silly
        audio_pause_sound(snd_Text_Toy);
        break;
        
        case 3: //Robot
        audio_pause_sound(snd_Text_A_Robot);
        break;
        
        case 4: //Scratchy 
        audio_pause_sound(snd_Text_A_Hiss);
        break;
        
        case 5: //Regular - High 
        audio_pause_sound(snd_Text_A);
        break;
        
        case 6: //Regular - Low
        audio_pause_sound(snd_Text_B);
        break; 
        }
    } 
    else
    {
    pause=2; //RESUME THE SOUND
        switch(type)
        {
        case 1: //Strong
        audio_resume_sound(snd_Text_A_Absolute);
        break;
        
        case 2: //Silly
        audio_resume_sound(snd_Text_Toy);
        break;
        
        case 3: //Robot
        audio_resume_sound(snd_Text_A_Robot);
        break;
        
        case 4: //Scratchy 
        audio_resume_sound(snd_Text_A_Hiss);
        break;
        
        case 5: //Regular - High 
        audio_resume_sound(snd_Text_A);
        break;
        
        case 6: //Regular - Low
        audio_resume_sound(snd_Text_B);
        break; 
        }    
    }
        
next_letter=false;
alarm[0]=pause;
} //END IF NEXT LETTER

if (copystring == '#') 
    {
    lines=lines+1;
    last_width=width;
    }

draw_set_font(fnt_Arial_Big);
draw_set_halign(fa_left);
draw_set_valign(fa_bottom);
        
//width = string_width_ext(copystring, -1, 100);
//if (last_width &gt; width) width = last_width;

width  = string_width(copystring);
height = string_height(copystring);

if (copystring_pos == string_length(promt))
{
    switch(type) //STOP THE SOUND
    {
        case 1: //Strong
        audio_stop_sound(snd_Text_A_Absolute);
        break;
        
        case 2: //Silly
        audio_stop_sound(snd_Text_Toy);
        break;
        
        case 3: //Robot
        audio_stop_sound(snd_Text_A_Robot);
        break;
        
        case 4: //Scratchy 
        audio_stop_sound(snd_Text_A_Hiss);
        break;
        
        case 5: //Regular - High 
        audio_stop_sound(snd_Text_A);
        break;
        
        case 6: //Regular - Low
        audio_stop_sound(snd_Text_B);
        break; 
    }
    
if (alarm[3]=-1) alarm[3]=hold; //Destroy after Hold
}
}
else
{
if (bubble_A_shift&lt;4)
    {
     bubble_A_shift+=.25;
    }
    else
    {
        if (bubble_B_shift&lt;4)
        bubble_B_shift+=.5;
        else
        bubbles_finish=true;    
    }
}

if (bubbles)
{
if (alarm[0]&gt;-1)
        {
        if (alarm[4]==-1)&amp;&amp;(bubble_A_shift&gt;=4) 
        alarm[4]=4;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_Text_A_Absolute);
audio_stop_sound(snd_Text_Toy);
audio_stop_sound(snd_Text_A_Robot);
audio_stop_sound(snd_Text_A_Hiss);
audio_stop_sound(snd_Text_A);
audio_stop_sound(snd_Text_B);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if window_get_fullscreen()
{
offset=1.5;
}
else
{
offset=1;
}
if !instance_exists(obj_Store) &amp;&amp; !instance_exists(obj_Inventory)
{

a=x-view_xview;
b=y-view_yview;

if (bubbles_finish)
{
draw_set_font(fnt_Arial_Big);
draw_set_halign(halign);
draw_set_valign(valign);

draw_set_alpha(0.25);
draw_set_color(c_black);
draw_roundrect((a-4)*offset,(b-4)*offset, (a+width+4)*offset,(b+height+4)*offset,false);
draw_set_alpha(0.5);
draw_set_color(c_white);
draw_roundrect((a-4)*offset,(b-4)*offset, (a+width+4)*offset,(b+height+4)*offset,true);

draw_set_alpha(0.7); //was .8
draw_text_transformed((a)*offset,(b+height)*offset,copystring,offset,offset,0);
draw_set_alpha(1);
}

if (bubbles)
{
bubble_Ax=a+width+14;
bubble_Ay=b+height+14;

bubble_Bx=(a+width)+(bubble_Ax)/2;
bubble_By=bubble_Ay;

draw_set_alpha(0.5)

if (blip)
{
draw_set_color(c_red);
draw_roundrect((bubble_Ax-bubble_A_shift)*offset,(bubble_Ay-bubble_A_shift)*offset,(bubble_Ax+bubble_A_shift)*offset,(bubble_Ay+bubble_A_shift)*offset,false);
draw_set_color(c_white);
draw_roundrect((bubble_Ax-bubble_A_shift)*offset,(bubble_Ay-bubble_A_shift)*offset,(bubble_Ax+bubble_A_shift)*offset,(bubble_Ay+bubble_A_shift)*offset,true);
}
else
{
draw_set_color(c_white);
draw_roundrect((bubble_Ax-bubble_A_shift)*offset,(bubble_Ay-bubble_A_shift)*offset,(bubble_Ax+bubble_A_shift)*offset,(bubble_Ay+bubble_A_shift)*offset,true);
}

draw_set_color(c_white);
draw_roundrect((a+width-4*bubble_B_shift)*offset,(bubble_By-+bubble_B_shift)*offset,(a+width+bubble_B_shift)*offset,(bubble_By+bubble_B_shift)*offset,true);

draw_set_alpha(1);
}

if (header==true)
    {
    draw_set_font(fnt_Arcade);
    draw_set_color(c_black); draw_set_alpha(.7);
    draw_text_transformed((a-2)*offset,(b-5+2)*offset,string(header_tag),.7*offset,.7*offset,0);
    draw_set_color(c_white); draw_set_alpha(1);
    draw_text_transformed((a)*offset,(b-5)*offset,string(header_tag),.7*offset,.7*offset,0);
    }
    
    //DRAW GOT IT
        if (gotit) &amp;&amp; (alarm[3]&gt;-1)
        {
        scale=1;
        draw_set_halign(fa_left);
        draw_set_valign(valign);
        
        draw_set_font(fnt_Arial_Big)        
        grow+=.25*global.game_speed;
        draw_set_alpha(.5);
        draw_text_transformed((a+width*scale*.5+0)*offset,(b+height*scale+33)*offset," ",.9*offset,.9*offset,0);
        draw_text_transformed((a+width*scale*.5+25)*offset,(b+height*scale+33)*offset,"  - Got It!!",.9*offset,.9*offset,0);
        draw_set_alpha(1);
        draw_sprite_ext(spr_xbox_A,0,(a+width*scale*.5+15)*offset,(b+height*scale+25)*offset,(.4+sin(grow)*.05)*offset,(.4+sin(grow)*.05)*offset,0,c_white,1);
        draw_set_alpha(1);
        }


}//END NOT STORE OR INVENTORY
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if !instance_exists(obj_Store) &amp;&amp; !instance_exists(obj_Inventory)
{
draw_set_font(fnt_Arial);
draw_set_halign(fa_left);
draw_set_valign(fa_bottom);

draw_set_alpha(0.25);
draw_set_color(c_black);
draw_roundrect(x-4,y-4, x+width+4,y+height+4,false);
draw_set_alpha(0.5);
draw_set_color(c_white);
draw_roundrect(x-4,y-4, x+width+4,y+height+4,true);

draw_set_alpha(0.8);
draw_text(x,y+height,copystring);
draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
