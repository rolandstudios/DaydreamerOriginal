<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_Center_Short_Platform==0)
{
master.num+=1;
master.SWAP_spr_Center_Short_Platform=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Sprites\spr_Center_Short_Platform.png",1,0,0,0,0);
sprite_set_offset(global.sprite[master.num], sprite_get_width(global.sprite[master.num])*.5, round(sprite_get_height(global.sprite[master.num])*.5));
}
sprite_index=global.sprite[master.SWAP_spr_Center_Short_Platform];


uni_brightness_amount = shader_get_uniform(shd_bright_contrast,"brightness_amount");
uni_contrast_amount = shader_get_uniform(shd_bright_contrast,"contrast_amount");
b=0;
c=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if sprite_exists(sprite_index)
    {
    //shader_set(shd_bright_contrast);
    //shader_set_uniform_f(global.brightness_amount , b);
    //shader_set_uniform_f(global.contrast_amount, c);
    draw_self();
    //shader_reset();
    }

if (global.debug)
{

draw_rectangle_colour(
    x-sprite_get_xoffset(sprite_index)*image_xscale+sprite_get_bbox_left(sprite_index)*image_xscale,
    y-sprite_get_yoffset(sprite_index)*image_yscale+sprite_get_bbox_top(sprite_index)*image_yscale,
    x-sprite_get_xoffset(sprite_index)*image_xscale+sprite_get_bbox_right(sprite_index)*image_xscale,
    y-sprite_get_yoffset(sprite_index)*image_yscale+sprite_get_bbox_bottom(sprite_index)*image_yscale,
c_red,c_red,c_red,c_red,false);
}    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>139,125</point>
    <point>139,139</point>
  </PhysicsShapePoints>
</object>
