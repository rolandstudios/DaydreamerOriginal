<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>40</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.BlueCloud==0)
{
master.num+=1;
master.BlueCloud=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\BlueCloud.png",26,0,0,170,136);
}
sprite_index=global.sprite[master.BlueCloud];

color=image_blend;


image_index=random_range(0,23);
floatUP=true;
floatFactor=irandom_range(1,49);
image_speed=.4;
/*
image_xscale=random_range(.7,1.1)*image_xscale;
image_yscale=abs(image_xscale);
image_angle=random_range(-5,5)
*/

x_offset=x;
y_offset=y;

part_x=2;
part_y=2;

//image_alpha=random_range(.9,1);
/*
color=irandom_range(1,12);
r=irandom_range(200,255);
g=irandom_range(200,255);
b=irandom_range(200,255);

move=0;
fade=0;
fadeup=true;
flicker=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if (flicker)
{
flicker=false;
fade=0;
fadeup=true;
}
else
{
flicker=true;
//draw_set_alpha(1);
}
color=irandom_range(1,12);
r=irandom_range(180,255);
g=irandom_range(180,255);
b=irandom_range(180,255);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (floatUP) floatFactor+=.5*global.game_speed; else floatFactor-=.5*global.game_speed;
if (floatFactor&gt;=50) floatUP=false;
if (floatFactor&lt;0) floatUP=true;


x=x_offset+view_xview[0]/5;
y=y_offset+floatFactor;

//x=x_offset+view_xview[0]/part_x;
//y=y_offset+view_yview[0]/part_y+floatFactor;

image_speed=.4*global.game_speed;
/*
x=x_offset+view_xview[0]/5;
y=y_offset+view_yview[0]/5+floatFactor;

/*
if (alarm[0]==-1)
    {
     if (flicker)
     alarm[0]=irandom_range(80,120);
     else
     alarm[0]=irandom_range(900,1200);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
image_blend=color;
draw_self();
}
/*
if sprite_exists(sprite_index)
{
if(flicker)
{
move+=0.04;
image_blend=c_white;
image_alpha=.7;

var Stripes = shader_get_uniform(shdr_Hologram,"Stripes");
var Filter = shader_get_uniform(shdr_Hologram,"Filter");
var Phase = shader_get_uniform(shdr_Hologram,"Phase");

draw_self();

shader_set(shdr_Hologram);

shader_set_uniform_f(Stripes,25.0);
shader_set_uniform_f(Filter,0.98,0.98,0.98,1.0);//rgba diffuse color
shader_set_uniform_f(Phase,move);
draw_self();

shader_reset();
}

else
{
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, c_white, 1 );
       
    if (global.Trippy) || (!global.Trippy)// || (room==rm_UFO_0)
    {
    switch(color)
    {
    
    case 1: col = make_color_rgb(242,100,0); break;
    case 2: col = make_color_rgb(247,138,0); break;
    case 3: col = make_color_rgb(235,230,0); break;
    case 4: col = make_color_rgb(0,224,16); break;
    
    case 5: col = make_color_rgb(25,225,255); break;
    case 6: col = make_color_rgb(0,131,220); break;
    case 7: col = make_color_rgb(223,0,196); break;
    case 8: col = make_color_rgb(249,13,195); break;
    case 9: col = make_color_rgb(161,0,170); break;
    
    case 10: col = make_color_rgb(254,0,4); break;
    case 11: col = make_color_rgb(254,0,4); break;
    case 12: col = make_color_rgb(254,0,4); break;
    }
    }
    else
    {
    col=c_white;
    }
    
    //image_blend = make_color_rgb(r,g,b);
    //image_alpha=1;
    

        //shader_set(shdr_bloom);
       //draw_set_blend_mode(bm_add);
        
        draw_sprite_ext(sprite_index, image_index,x, y, image_xscale, image_yscale, image_angle, col , fade);
        
        if(fadeup) 
            {
            fade=fade+.0025;
            if (fade&gt;=.9) fadeup=false; 
            }
            else
            {
            fade=fade-.0025;
            if (fade&lt;=0) fadeup=true;
            }        
        
        
       //draw_set_blend_mode(bm_normal);
        //shader_reset();
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>237,200</point>
    <point>237,237</point>
  </PhysicsShapePoints>
</object>
