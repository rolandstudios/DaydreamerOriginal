<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-94</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
audio_sound_pitch(snd_confirm_tab_B,1);

pause_xscale=.1;
pause_xscale=.1;
grow_y=false;


grow=0;
grow_c=0;
arrow_frame=0;
movelist=false;
scroll=-120;
movelist_y=398;
movelist_x=468;
movelist_w=776;
movelist_h=300;
can_select=true;

shift_back=0;
front_scale=1;
rest=true;
background_visible[6] = false;
background_visible[7] = false;

if instance_exists(par_HERO)
{
global.SavedHP=par_HERO.hp;
global.SavedMoney=par_HERO.money;
}

audio_pause_all();
audio_play_sound(snd_gamestart, 10,false);

alarm[0]=30;

gamepad_set_vibration(global.playing_index, 0, 0); 

volume=string(global.vol);
music=string(global.mus);

instance_deactivate_all(true);
instance_activate_object(obj_debug);
instance_activate_object(master);


instance_create(0,0,obj_checker_scroll);

instance_create(x,y,obj_PauseBumper);
orig_y=-90*.667;
orig_x=-690*.667;

set_y=orig_y;
set_x=orig_x;

opac=.22;

y=500;


if window_get_fullscreen()
{offset=1.5}
else
{offset=1}


y_expand=0;
map_x_offset=-10;
map_y_offset=15;

instance_create(0,0,obj_Pause_mod_01);
instance_create(0,0,obj_Pause_mod_02);
instance_create(0,0,obj_Pause_mod_03);
instance_create(0,0,obj_Pause_mod_04);
instance_create(0,0,obj_Pause_mod_05);
instance_create(0,0,obj_Pause_mod_06);
instance_create(0,0,obj_Pause_mod_07);
instance_create(0,0,obj_Pause_mod_08);
instance_create(0,0,obj_Pause_mod_09);
instance_create(0,0,obj_Pause_mod_10);
instance_create(0,0,obj_Pause_mod_13);
instance_create(0,0,obj_Pause_mod_14);

audio_play_sound(snd_confirm_tab_B,11,false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.platform==1)
{
    if (master.progress_lost) || (master.logout)
    {
        //DO NOTHING
    }
    else
    {
        scr_Save_Config();
    }
}
else
{
    scr_Save_Config();
}

audio_stop_sound(msc_Pause);

if instance_exists(obj_DJ)
{
    audio_sound_gain(obj_DJ.music_track, global.mus, 0);
    
    with (obj_DJ) //RESUME PLAYING MUSIC OR START IF NOT PLAYING
        {
        audio_resume_sound(music_track);
        if !audio_is_playing(music_track) audio_play_sound(music_track,9,true);
        }
}


if instance_exists(obj_Sound_Config) {with(obj_Sound_Config){instance_destroy();}}
if instance_exists(obj_Video_Config) {with(obj_Video_Config){instance_destroy();}}
if instance_exists(obj_Game_Config)  {with(obj_Game_Config){instance_destroy();}}
if instance_exists(obj_GamePad_Bind) {with(obj_GamePad_Bind){instance_destroy();}}


if instance_exists(obj_Title_Bloom)
{
with (obj_Title_Bloom) {instance_destroy();}
instance_create(x,y,obj_Title_Bloom);
}

switch(global.theme) //BLUR PRESETS
{
case 0: //ORIGINAL
rad=1;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

case 1: //MusroomForrest
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Magical) audio_play_sound(amb_Magical,11,true);

rad=1;
blur[0]=2;
blur[1]=1.5;
blur[2]=1.04;
blur[3]=.82;
blur[4]=.5;
blur[5]=.5;
blur[6]=.5;
break;

case 2: //Collector Boss
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);

rad=1;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

case 3: //Tutorial Murky Outer Scifi
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);

rad=.32;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.5;
blur[6]=.25;
break;

case 4: //Tunnel
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Factory) audio_play_sound(amb_Factory,11,true);

rad=.5;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

case 5: //Green Hills
global.dof=false;
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_birds) audio_play_sound(amb_birds,10,true);

rad=1;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

case 6: //Valley
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);

rad=.8;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

case 7: //Sky Core
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if !audio_is_playing(amb_Factory) audio_play_sound(amb_Factory,12,true);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);
rad=1.27;
blur[0]=2;
blur[1]=.28;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.4;
blur[6]=.7;
break;

case 8: //Factory
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Factory) audio_play_sound(amb_Factory,11,true);
rad=.75;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.5;
blur[6]=.25;
break;

case 9: //Dark Core
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);
rad=1;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

case 10: //Forest
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Magical) audio_play_sound(amb_Magical,11,true);
rad=1;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

case 11: //Cave
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Caves) audio_play_sound(amb_Caves,11,true);
rad=1;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

case 12: //LS
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if !audio_is_playing(amb_Psy) audio_play_sound(amb_Psy,11,true);
rad=1;
blur[0]=2;
blur[1]=1;
blur[2]=.75;
blur[3]=.75;
blur[4]=.5;
blur[5]=.25;
blur[6]=.25;
break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_select=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto (rm_SaveGame);
audio_stop_sound(msc_Pause);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(msc_Pause);
room_goto(rm_WorldMap);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>neck_char=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rest=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(msc_Pause,global.mus,0);
if (global.mus&gt;0)
audio_play_sound(msc_Pause, 10,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> gamepad_set_vibration(global.playing_index, 0, 0);
 
if (global.platform==3)
{
gamepad_set_colour(global.playing_index, c_aqua);
}

if (global.platform==1)
{
if xboxone_is_suspending()
    {                             
    xboxone_suspend(); 
    }           
}

//EXCEPTIONS
if !instance_exists(obj_GamePad_Bind) &amp;&amp; !instance_exists(obj_Sound_Config) &amp;&amp; !instance_exists(obj_Video_Config) &amp;&amp; !instance_exists(obj_Game_Config) &amp;&amp; !instance_exists(obj_LeaveArea) &amp;&amp; !instance_exists(obj_QuitGame)
{
//CONTROL INPUT ------------------------------------
Key_Pause = gamepad_button_check_pressed(global.playing_index,gp_start);
if keyboard_check_pressed(vk_enter) Key_Pause = true;


if(movelist)
{ 
    Key_Up = gamepad_button_check(global.playing_index, gp_padu);
    Key_Down = gamepad_button_check(global.playing_index, gp_padd);
    if keyboard_check(vk_up) Key_Up=true;
    if keyboard_check(vk_down) Key_Down=true;
}
else
{
    Key_Up = gamepad_button_check_pressed(global.playing_index, gp_padu);
    Key_Down = gamepad_button_check_pressed(global.playing_index, gp_padd);
    if keyboard_check_pressed(vk_up) Key_Up=true;
    if keyboard_check_pressed(vk_down) Key_Down=true;
}

Key_Jump = gamepad_button_check_pressed(global.playing_index, gp_face1);
Key_Fire = gamepad_button_check_pressed(global.playing_index, gp_face2);

if (y!=440)
{
Key_Left = gamepad_button_check(global.playing_index, gp_padl);
Key_Right = gamepad_button_check(global.playing_index, gp_padr);
}
else
{
Key_Left = gamepad_button_check_pressed(global.playing_index, gp_padl);
Key_Right = gamepad_button_check_pressed(global.playing_index, gp_padr);
}

if keyboard_check_pressed(vk_space) Key_Jump=true;
if keyboard_check_pressed(vk_escape) Key_Pause =true;

if keyboard_check(vk_left) Key_Left=true;
if keyboard_check(vk_right) Key_Right=true;

if (rest)
{
if (gamepad_axis_value(global.playing_index, gp_axislv)&lt;-.5) 
    {
    Key_Up = 1;
    alarm[1]=10; 
    if(!movelist) rest=false;
    } 
if (gamepad_axis_value(global.playing_index, gp_axislv)&gt;.5) 
    {
    Key_Down = 1; 
    alarm[1]=10; 
    if(!movelist) rest=false;
    } 
if (gamepad_axis_value(global.playing_index, gp_axislh)&lt;-.5) 
    {
    Key_Left = 1; 
    if (y==460) || (y==480) alarm[1]=2; else alarm[1]=10; 
    rest=false;
    } 
if (gamepad_axis_value(global.playing_index, gp_axislh)&gt;.5) 
    {
     Key_Right = 1; 
    if (y==460) || (y==480) alarm[1]=2; else alarm[1]=10; 
    rest=false;
    } 
}

  if (master.paused) 
    {
    Key_Pause = false;
    Key_Down = false;
    Key_Up = false;
    Key_Jump = false;
    Key_Fire =false;
    Key_Right = false;
    Key_Left = false;
    }
    
if (Key_Jump) Key_Fire=false;

if (can_select==false) {Key_Jump=false;  Key_Fire=false;}  
    

if (Key_Up == 1) || keyboard_check_pressed(vk_up) 
{
    if (!movelist)
    {
    shift_back=0;
    audio_play_sound(snd_selectA, 10, false);
        
    if (global.ranked) &amp;&amp; (y==560) // (global.world_clear[0]==0) 
    {
    y-=60;
    }
    else
    {    
        if (y&gt;500) 
        {
        y=y-30;
        }
        else
        {
        y=710;
        audio_play_sound(snd_selectA, 10, false);
        }
    
    }
    }
    else
    {
        if(scroll&gt;-190) scroll-=4;
    }
}


if (Key_Down ==1) || keyboard_check_pressed(vk_down) 
{
    if (!movelist)
    {
        shift_back=0;
        audio_play_sound(snd_selectA, 10, false);
        
    if  (global.ranked) &amp;&amp; (y==500) //(global.world_clear[0]==0)
    {
    y+=60;
    }
    else
    { 
        if(y&lt;710)
        {
        y=y+30;
        }
        else
        {
        y=500;
        }
    }
    
    }
    else
    {
        if(scroll&lt;100) scroll+=4;
    }
}


  


//-------------------------------------------------------------------------

if(Key_Jump) || keyboard_check_pressed(vk_enter) 
{
switch(y)
{
case 500:
audio_play_sound(snd_gamestart, 10,false);
instance_activate_all();
background_visible[6] = true;
background_visible[7] = true;
//-------------------------------------------------------------------------
switch(global.theme) //BLUR PRESETS
{
case 0: //ORIGINAL
break;
case 1: //MusroomForrest
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Magical) audio_play_sound(amb_Magical,11,true);

break;

case 2: //Collector Boss
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);

break;

case 3: //Tutorial Murky Outer Scifi
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);

break;

case 4: //Tunnel
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Factory) audio_play_sound(amb_Factory,11,true);

break;

case 5: //Green Hills
global.dof=false;
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_birds) audio_play_sound(amb_birds,10,true);


break;

case 6: //Valley
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);


break;

case 7: //Sky Core
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if !audio_is_playing(amb_Factory) audio_play_sound(amb_Factory,12,true);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);

break;

case 8: //Factory
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Factory) audio_play_sound(amb_Factory,11,true);

break;

case 9: //Dark Core
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_windstorm) audio_play_sound(amb_windstorm,11,true);

break;

case 10: //Forest
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Magical) audio_play_sound(amb_Magical,11,true);

break;

case 11: //Cave
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_Psy) audio_stop_sound(amb_Psy);
if !audio_is_playing(amb_Caves) audio_play_sound(amb_Caves,11,true);

break;

case 12: //LS
global.dof=false;
if audio_is_playing(amb_birds) audio_stop_sound(amb_birds);
if audio_is_playing(amb_Factory) audio_stop_sound(amb_Factory);
if audio_is_playing(amb_Caves) audio_stop_sound(amb_Caves);
if audio_is_playing(amb_Magical) audio_stop_sound(amb_Magical);
if audio_is_playing(amb_windstorm) audio_stop_sound(amb_windstorm);
if !audio_is_playing(amb_Psy) audio_play_sound(amb_Psy,11,true);

//STOP MUSIC
audio_pause_sound(obj_DJ.music_track);
audio_stop_sound(obj_DJ.music_track);

break;

}
//---------------------------------------------------------------------------------------------------------------
 
audio_stop_sound(msc_Pause);
instance_destroy();
break;

case 530: //WORLD MAP

   //if (global.world_clear[0]==1)
   // {
    audio_play_sound(snd_gamestart, 10,false);
    if !instance_exists(obj_LeaveArea) instance_create(420,500,obj_LeaveArea);
    //}
    
//room_goto(rm_WorldMap);
break;

case 590: //SOUND CONFIG
instance_create(600,440,obj_Sound_Config);
break;


case 620: //VIDEO CONFIG
instance_create(600,440,obj_Video_Config);
break;

case 650: //GAME CONFIG
instance_create(440,440,obj_Game_Config); 
break;

case 680: //CONTROL CONFIG
audio_play_sound(snd_gamestart, 10,false);
with instance_create(440,440,obj_GamePad_Bind)
{
    menu_x=440;
    menu_y=440;
}
break;




case 560: //MOVE LIST 
audio_play_sound(snd_gamestart, 10,false);
if (movelist==false)
movelist=true;
else
movelist=false;
break;



case 710: //QUIT

    audio_play_sound(snd_gamestart, 10,false);
    if !instance_exists(obj_QuitGame) instance_create(420,500,obj_QuitGame);
    
break;

} //END SWITCH


}//END MAIN MENU SWITCH


// BLUR EFFECTS TWEAK
if (y==440) 
{
if(Key_Left) 
    {
    audio_play_sound(snd_gamestart, 10,false);
    if (global.blur_fx&lt;=0) global.blur_fx=2;
    else
    global.blur_fx-=1;  
    }
if(Key_Right)  
    {
    audio_play_sound(snd_gamestart, 10,false);
    if (global.blur_fx&gt;=3) global.blur_fx=0;
    else
    global.blur_fx+=1;   
    }
}


if (Key_Fire)
{
if (movelist==true) 
    {
    movelist=false;
    audio_play_sound(snd_capped_out,10,false);
    }
    else
    {
    audio_play_sound(snd_capped_out,10,false);
    instance_activate_all();
    
    audio_resume_all();
    audio_stop_sound(msc_Pause);
    instance_destroy();
    } 
}



if (Key_Pause) &amp;&amp; !instance_exists(obj_LeaveArea) &amp;&amp; !instance_exists(obj_QuitGame)
{
    audio_play_sound(snd_gamestart, 10,false);
    
    if (movelist)
    {
        movelist=false;
    }
    else
    {
        instance_activate_all();
        
        audio_resume_all();
        audio_stop_sound(msc_Pause);
        instance_destroy();
    }
}

}//END CONTROL IF NOT SUB MENU
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if window_get_fullscreen()
{
offset=1.5;
}
else
{
offset=1;
}


set_x=orig_x*offset;
set_y=orig_y*offset;

if (y_expand&gt;=180)
grow_c+=.25;

//DRAW FRAME
draw_set_color(c_white); draw_set_alpha(.1);
draw_rectangle(set_x+500*offset,set_y+(609-y_expand*.5)*offset,set_x+810*offset,set_y+(609+y_expand*.5)*offset,false);
draw_set_color(c_white); draw_set_alpha(.15);
draw_rectangle(set_x+500*offset,set_y+(609-y_expand*.5)*offset,set_x+810*offset,set_y+(609+y_expand*.5)*offset,true);
draw_sprite_ext(spr_Menu_Trim_Top,0,set_x+655*offset,set_y+(609-y_expand*.5)*offset,.667*offset,.667*offset,0,c_white,1); //TOP FRAME
draw_sprite_ext(spr_Menu_Trim_Bottom,0,set_x+655*offset,set_y+(609+y_expand*.5)*offset,.667*offset,.667*offset,0,c_white,1); //BOTTOM FRAME

if (y_expand&lt;260) y_expand+=20;
if (y_expand==60)
    {
    if !audio_is_playing(snd_HitMetal) audio_play_sound(snd_HitMetal,10,false);
    } 
    
if (y_expand&gt;260) y_expand=260;

if (shift_back&lt;4) shift_back+=.25;
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_font(fnt_Score);


         if (pause_xscale&lt;2) &amp;&amp; (grow_y==false)
                {
                    pause_xscale*=2;
                    pause_yscale=.1;           
                
                    if (pause_xscale&gt;2) grow_y=true; 
                }
                
                if (grow_y==true)
                {
                    if (pause_yscale&lt;1) pause_yscale*=2;  
                    if (pause_xscale&gt;1) pause_xscale*=.5;                   
                    if (pause_xscale&lt;1) pause_xscale=1;                 
                }                
                
                if (pause_yscale&gt;=1) 
                    {
                        pause_yscale=1;
                    }

draw_set_alpha(0.6);
draw_set_color(c_black);
draw_text_transformed(637*offset,242*offset,"Pause",offset*pause_xscale,offset*pause_yscale,image_angle);
draw_set_alpha(1);
draw_set_color(c_yellow);
draw_text_transformed(640*offset,240*offset,"Pause",offset*pause_xscale,offset*pause_yscale,image_angle);
//draw_set_font(fnt_Orbitron);
if (y_expand&gt;=260)
{
draw_set_font(fnt_LowGun);
draw_set_halign(fa_left); set_x-=(65*offset);
draw_set_color(c_white); draw_set_alpha(1);


if(y==500)
{
draw_set_color(c_black); draw_set_alpha(.75);
front_scale=.8;
draw_text_transformed(set_x+608*offset+shift_back*offset,set_y+502*offset+shift_back*.4*offset,"Resume Game",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white); draw_set_alpha(1);
}
draw_text_transformed(set_x+610*offset,set_y+500*offset,"Resume Game",offset*front_scale,offset*front_scale,image_angle);
front_scale=.8;

if(y==530)
{
draw_set_color(c_black); draw_set_alpha(.75);
front_scale=.8;
draw_text_transformed(set_x+608*offset+shift_back*offset,set_y+532*offset+shift_back*.4*offset,"World Map",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white); draw_set_alpha(1);
}

//if (global.world_clear[0]==0) draw_set_color(c_gray);
if (global.ranked) draw_set_color(c_gray);
draw_text_transformed(set_x+610*offset,set_y+530*offset,"World Map",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white);
front_scale=.8;

if(y==560)
{
draw_set_color(c_black); draw_set_alpha(.75);
front_scale=.8;
draw_text_transformed(set_x+608*offset+shift_back*offset,set_y+562*offset+shift_back*.4*offset,"Move List",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white); draw_set_alpha(1);
}
draw_text_transformed(set_x+610*offset,set_y+560*offset,"Move List",offset*front_scale,offset*front_scale,image_angle);
front_scale=.8;

if(y==590)
{
draw_set_color(c_black); draw_set_alpha(.75);
front_scale=.8;
draw_text_transformed(set_x+608*offset+shift_back*offset,set_y+592*offset+shift_back*.4*offset,"Sound Setup",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white); draw_set_alpha(1);
}
draw_text_transformed(set_x+610*offset,set_y+590*offset,"Sound Setup",offset*front_scale,offset*front_scale,image_angle);
front_scale=.8;

if(y==620)
{
draw_set_color(c_black); draw_set_alpha(.75);
front_scale=.8;
draw_text_transformed(set_x+608*offset+shift_back*offset,set_y+622*offset+shift_back*.4*offset,"Video Setup",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white); draw_set_alpha(1);
}
draw_text_transformed(set_x+610*offset,set_y+620*offset,"Video Setup",offset*front_scale,offset*front_scale,image_angle);
front_scale=.8;


if(y==650)
{
draw_set_color(c_black); draw_set_alpha(.75);
front_scale=.8;
draw_text_transformed(set_x+608*offset+shift_back*offset,set_y+652*offset+shift_back*.4*offset,"Game Settings",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white); draw_set_alpha(1);
}
draw_text_transformed(set_x+610*offset,set_y+650*offset,"Game Settings",offset*front_scale,offset*front_scale,image_angle);
front_scale=.8;


if(y==680)
{
draw_set_color(c_black); draw_set_alpha(.75);
front_scale=.8;
draw_text_transformed(set_x+608*offset+shift_back*offset,set_y+682*offset+shift_back*.4*offset,"Control Config",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white); draw_set_alpha(1);
}
draw_text_transformed(set_x+610*offset,set_y+680*offset,"Control Config",offset*front_scale,offset*front_scale,image_angle);
front_scale=.8;


if(y==710)
{
draw_set_color(c_black); draw_set_alpha(.75);
front_scale=.8;
draw_text_transformed(set_x+608*offset+shift_back*offset,set_y+712*offset+shift_back*.4*offset,"Quit",offset*front_scale,offset*front_scale,image_angle);
draw_set_color(c_white); draw_set_alpha(1);
}
draw_text_transformed(set_x+610*offset,set_y+710*offset,"Quit",offset*front_scale,offset*front_scale,image_angle);
front_scale=.8;



if !instance_exists(obj_GamePad_Bind) &amp;&amp; !instance_exists(obj_Sound_Config)&amp;&amp; !instance_exists(obj_Video_Config) &amp;&amp; !instance_exists(obj_Game_Config) &amp;&amp; !instance_exists(obj_LeaveArea) &amp;&amp; (alarm[3]==-1)
{
draw_sprite_ext(spr_Pause_Arrow,arrow_frame,set_x+600*offset,(y-54)*offset,.5*offset,.5*offset,0,c_white,1);
arrow_frame+=.5;
}
}
if(movelist)//DRAWS MOVE LIST ----------------------------------------------------------------------------------------------
{

draw_set_font(fnt_Arial);


//VARIABLES-------
movelist_y=-5;
movelist_x=410; //was 450
movelist_w=495; //was 420
movelist_h=800;

text_align_x=210; //was 220
icon_align_x=260;
icon_space=40;
v_space=50;
text_scale=1.1;
icon_scale=.8;
move_name="";



//DRAW FRAME
draw_set_color(c_black); draw_set_alpha(opac+.2);
draw_roundrect(movelist_x*offset,movelist_y*offset,(movelist_x+movelist_w)*offset,(movelist_y+movelist_h)*offset,false);

draw_set_color(c_white); draw_set_alpha(1);
draw_roundrect(movelist_x*offset,movelist_y*offset,(movelist_x+movelist_w)*offset,(movelist_y+movelist_h)*offset,true);

//draw_set_font(fnt_BytePolice);
draw_set_font(fnt_Arial_Big);

/*
draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+movelist_w+80-2)*offset,702*offset,"-Back",1.2*offset,1.2*offset,0);
draw_set_color(c_white); draw_set_alpha(1);


grow+=.25*global.game_speed;
draw_text_transformed((movelist_x+movelist_w+80)*offset,700*offset,"-Back",1.2*offset,1.2*offset,0);
draw_sprite_ext(pad_def(global.gp_Fire),0,(movelist_x+movelist_w+100)*offset,700*offset,(.7+sin(grow)*.05)*offset,(.7+sin(grow)*.05)*offset,0,c_white,1);
*/


//JUMP
list=0;
move_name="JUMP:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Jump),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//Double Jump
list=1;
move_name="DOUBLE JUMP:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Jump),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Jump),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//Wall Bounce
list=2;
move_name="WALL KICK:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(spr_xbox_Arrow,0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Jump),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//Ledge Drop
list=3;
move_name="DROP DOWN:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(spr_xbox_Arrow,0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,270,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Jump),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//FIRE
list=4;
move_name="FIRE:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Fire),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//CHANGE WEAPON
list=5;
move_name="CHANGE WEAPON:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Weapon),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//MELEE
list=6;
move_name="MELEE:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Melee),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//SPIN ATTACK
list=7;
move_name="SPIN ATTACK:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(spr_xbox_Arrow,0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,90,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Melee),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//SLIDE ATTACK
list=8;
move_name="SLIDE ATTACK:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(spr_xbox_Arrow,0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,270,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Melee),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//JUMP SWING
list=9;
move_name="JUMP SWING:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);

draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

//draw_set_halign(fa_center);
//draw_text_transformed((movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"(Mid-air)",text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Jump),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Melee),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//JUMP KICK
list=10;
move_name="JUMP KICK:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Jump),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);


draw_sprite_ext(spr_xbox_Arrow,0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

draw_set_halign(fa_center);

draw_text_transformed((movelist_x+icon_align_x+(3*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Melee),0,(movelist_x+icon_align_x+(4*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//SHIELD
list=11;
move_name="JUMP SHIELD:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);

draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Jump),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);
//draw_set_halign(fa_center);
//draw_text_transformed((movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"(Mid-air)",text_scale*offset,text_scale*offset,0);

draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Right_Shoulder),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//PARRY
list=12;
move_name="PARRY SHIELD:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Right_Shoulder),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);

//WARP
list=13;
move_name="WARP:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);

draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Left_Trigger),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*.75*offset,icon_scale*.75*offset,0,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"or",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Right_Trigger),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*.75*offset,icon_scale*.75*offset,0,c_white,1);


//BULLET TIME
list=14;
move_name="TIME WARP:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(spr_xbox_Arrow,0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,90,c_white,1);
draw_set_halign(fa_center);
draw_text_transformed((movelist_x+icon_align_x+(1*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,"+",text_scale*offset,text_scale*offset,0);
draw_sprite_ext(pad_def(global.gp_Weapon),0,(movelist_x+icon_align_x+(2*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);


//PET SELECT
list=15;
move_name="PET SELECT:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(spr_xbox_Arrow,0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,-icon_scale*offset,icon_scale*offset,0,c_white,1);
draw_sprite_ext(spr_xbox_RS,0,(movelist_x+icon_align_x+(1.5*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);
draw_sprite_ext(spr_xbox_Arrow,0,(movelist_x+icon_align_x+(3*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);



//SUMMON
list=16;
move_name="SUMMON PET:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Left_Shoulder),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);


//INVENTORY
list=17;
move_name="INVENTORY:";
draw_set_font(fnt_Orbitron); draw_set_halign(fa_right);
draw_set_color(c_black); draw_set_alpha(.75);
draw_text_transformed((movelist_x+text_align_x-4)*offset,(movelist_y+4+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);
draw_set_color(c_white); draw_set_alpha(1);
draw_text_transformed((movelist_x+text_align_x)*offset,(movelist_y+(v_space*list)+scroll)*offset,move_name,text_scale*offset,text_scale*offset,0);

draw_sprite_ext(pad_def(global.gp_Select),0,(movelist_x+icon_align_x+(0*icon_space))*offset,(movelist_y+(v_space*list)+scroll)*offset,icon_scale*offset,icon_scale*offset,0,c_white,1);






}

    //DRAW CONTROLS
    draw_set_halign(fa_left);
    draw_set_font(fnt_LowGun);
    
    draw_set_color(c_black); draw_set_alpha(.25);
    
    if (movelist==false)
    draw_sprite_ext(spr_xbox_A,0,(1050-2)*offset,(695+8+2)*offset,.45*offset,.45*offset,0,c_black,.4);
    
    draw_sprite_ext(spr_xbox_B,0,(1150-2)*offset,(695+8+2)*offset,.45*offset,.45*offset,0,c_black,.4);
    
    if (movelist==false)
    draw_text_transformed((1050-2)*offset,(695+2)*offset,"    - Select",.5*offset,.5*offset,0);
    
    if instance_exists(obj_Game_Config) || instance_exists(obj_Sound_Config) || instance_exists(obj_Video_Config) || instance_exists(obj_GamePad_Bind) || (movelist==true)
    draw_text_transformed((1150-2)*offset,(695+8+2)*offset,"    - Back",.5*offset,.5*offset,0);
    else
    draw_text_transformed((1150-2)*offset,(695+8+2)*offset,"    - Back to Game",.5*offset,.5*offset,0);
    
    draw_set_color(c_white); draw_set_alpha(1);
    
    if (movelist==false)
    draw_sprite_ext(spr_xbox_A,0,1050*offset,(695+8)*offset,.45*offset,.45*offset,0,c_white,1);
    
    draw_sprite_ext(spr_xbox_B,0,1150*offset,(695+8)*offset,.45*offset,.45*offset,0,c_white,1);
    
    if (movelist==false)
    draw_text_transformed(1050*offset,(695+8)*offset,"    - Select",.5*offset,.5*offset,0);
    
    if instance_exists(obj_Game_Config) || instance_exists(obj_Sound_Config) || instance_exists(obj_Video_Config) || instance_exists(obj_GamePad_Bind) || (movelist==true)
    draw_text_transformed(1150*offset,(695+8)*offset,"    - Back",.5*offset,.5*offset,0);
    else
    draw_text_transformed(1150*offset,(695+8)*offset,"    - Back to Game",.5*offset,.5*offset,0);
    
    

//DRAW RESOLUTION CURTAIN
draw_rectangle_colour(0,-400,1920,0,c_black,c_black,c_black,c_black,false);
draw_rectangle_colour(0,1080,1920,1480,c_black,c_black,c_black,c_black,false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
