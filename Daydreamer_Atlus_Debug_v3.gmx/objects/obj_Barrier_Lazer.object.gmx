<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.SWAP_spr_Barrier_Lazer==0)
{
master.num+=1;
master.SWAP_spr_Barrier_Lazer=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Sprites\spr_Barrier_Lazer.png",20,0,1,30,360);
}
sprite_index=global.sprite[master.SWAP_spr_Barrier_Lazer];

flash=true;
image_alpha=0
move=0;
active=false;
triggered=false;
set=false;
solid=false;
image_speed=.5;
image_index=1;
walled=false;
left_right=0;
color=c_white;
wall_xscale=1;

trigger_right=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_Got_special_A,10,false);
active=false;
solid=false;
 
if (walled)
{
if instance_exists(wall)
    {
    with(wall) instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active==false)
{
    if (left_right==1) &amp;&amp; (par_HERO.bbox_left&gt;bbox_right) || (left_right==2) &amp;&amp; (par_HERO.bbox_right&lt;bbox_left) || (left_right==3)
    {
        if (trigger_right) &amp;&amp; (par_HERO.x&lt;x)
        {
            alarm[0]=30;
        }
        else
        {
        
        active=true;
        image_alpha=1;
        visible=true;
        
        audio_sound_pitch(snd_laser_charge,global.game_speed);
        audio_play_sound(snd_laser_charge,10,false)
        audio_sound_pitch(snd_droid_check,global.game_speed);
        audio_play_sound(snd_droid_check,10,false)
                        
        if (triggered) 
        {
        audio_sound_pitch(snd_Lazer_Activate,global.game_speed);
        audio_play_sound(snd_Lazer_Activate,18,false);
        }
           
        wall = instance_create(x,y,obj_wall_center);
        with(wall)
            {
             image_xscale=other.sprite_width/32*other.wall_xscale;
             image_yscale=other.sprite_height/32;
            }
        walled=true;
        }
    }
    else
    {
        alarm[0]=30;
    }



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active)
{
   
if instance_exists(par_Enemy)
    {
    active=true;
    visible=true;
    image_alpha=1;
    }
    else
    {
    
        if(!instance_exists(obj_spawn_RANDOM))
            {
            instance_destroy()
            }
     }
}

 if (triggered) 
    {
    if (alarm[0]==-1) alarm[0]=25;
    if instance_exists(par_HERO)
        {
        if (left_right==0)
        {
            if (par_HERO.x&lt;x)
                left_right=1;
                else
                left_right=2;
        }
        }
    }
    
if (left_right==1) &amp;&amp; (par_HERO.bbox_left&gt;bbox_right) || (left_right==2) &amp;&amp; (par_HERO.bbox_right&lt;bbox_left) || (left_right==3)
    { 
    if (alarm[0]==-1) alarm[0]=25;
    }
 /*   
if place_meeting(x,y,par_HERO)
{

    if (triggered) 
    {
    alarm[0]=25;
    if instance_exists(par_HERO)
        {
        if (left_right==0)
        {
            if (par_HERO.x&lt;x)
                left_right=1;
                else
                left_right=2;
        }
        }
    }

}
*/

//FLOW UP THEN DOWN
if(image_index==19) image_speed=-.5;
if(image_index==0) image_speed=.5;
image_speed=.5*global.game_speed;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
    draw_set_blend_mode(bm_add);
    //image_blend = c_red;
    //draw_self();
    image_blend=color;
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale*1.5,image_yscale,0,color,image_alpha);
    draw_set_blend_mode(bm_normal);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
