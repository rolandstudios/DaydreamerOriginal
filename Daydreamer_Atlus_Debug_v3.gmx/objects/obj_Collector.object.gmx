<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_collide</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy_Body</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(master.spr_Collector_Fire==0)
{
master.num+=1;
master.spr_Collector_Fire=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Collector_Fire.png",23,0,1,88,146);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}

if(master.spr_Collector_Ball==0)
{
master.num+=1;
master.spr_Collector_Ball=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\spr_Collector_Ball.png",12,0,1,62,50);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.spr_Collector_Ball_Splash==0)
{
master.num+=1;
master.spr_Collector_Ball_Splash=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\spr_Collector_Ball_Splash.png",15,0,1,90,107);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.Collector_Backhand==0)
{
master.num+=1;
master.Collector_Backhand=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\spr_Collector_Backhand.png",31,1,1,251,243);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}


//Load Sprites ----------------------
if(master.Collector_Backhand==0)
{
master.num+=1;
master.Collector_Backhand=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\spr_Collector_Backhand.png",31,1,1,251,243);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.Collector_Shoot==0)
{
master.num+=1;
master.Collector_Shoot=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Imports\spr_Collector_Shoot.png",25,1,1,234,247);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.Collector_UpperCut==0)
{
master.num+=1;
master.Collector_UpperCut=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Imports\spr_Collector_UpperCut.png",29,1,1,223,268);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.Collector_Walk==0)
{
master.num+=1;
master.Collector_Walk=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Imports\spr_Collector_Walk.png",25,1,1,162,247);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.Collector_Idle==0)
{
master.num+=1;
master.Collector_Idle=master.num;
global.sprite[master.num]= sprite_add(working_directory+"\Imports\spr_Collector_Idle.png",25,1,1,139,247);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.spr_Collector_Turn==0)
{
master.num+=1;
master.spr_Collector_Turn=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\spr_Collector_Turn.png",17,1,1,188,244);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.spr_Collector_Belly==0)
{
master.num+=1;
master.spr_Collector_Belly=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\spr_Collector_Belly.png",37,1,1,196,246);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

if(master.spr_Collector_Explode==0)
{
master.num+=1;
master.spr_Collector_Explode=master.num;
global.sprite[master.num] = sprite_add(working_directory+"\Imports\spr_Collector_Explode.png",21,1,1,244,242);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0,sprite_width, sprite_height,0,225);
}

//-----------------------------------
sprite_index=global.sprite[master.Collector_Idle];
image_speed = .25*global.game_speed;

hp = 720;
scale=image_yscale;
west_east = 0;
fired=false;
hsp=0;
swing_range = false;
damage=5*global.difficulty;
dead=false;
activate=false;
type=1;

burn=false;
burns=0;

hero_hp=0;
hero_damage=0;

moveChoose=false;
moveChoice=1;
while !place_meeting(x,y,par_wall) y+=1;

if instance_exists(par_HERO) &amp;&amp; instance_exists(obj_camera_snap_to)
{
if(par_HERO.x&gt;x)
x=obj_camera_snap_to.bbox_left+150;
else
x=obj_camera_snap_to.bbox_right-150;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp&lt;=0) 
{
global.world_clear[1]=1;

//DEFEAT ACHIEVEMENT ---------------------------------------
 
 //STEAM --------------------------------
 if (global.platform==0)
 {         
    if !steam_get_achievement("ach_Defeat_MrSmiles") 
        steam_set_achievement("ach_Defeat_MrSmiles");
 }
 //XBOX ONE
 if (global.platform==1)
 {       
    scr_XboxOne_Achievement(7);                                   
 }  
 //PS4
 if (global.platform==3)
 {       
    scr_PS4_Trophies(7);                                   
 } 
                                                                                     
//-------------------------------------------------------[END] 
 
with instance_create(x,y,obj_CheckPoint)
    {
    World=1.5; 
    Boss=true;
    }

//const=500/(4*60); //MIN CONSTANT
damage_bonus=round((100-hero_damage)*5);
    if (damage_bonus&gt;500) damage_bonus=500;
    if (damage_bonus&lt;0) damage_bonus=0;

    
time_bonus = (300-((global.Hours*3600+global.Minutes*60+global.Seconds)-time))*2.08;    
    if (time_bonus&gt;500) time_bonus=500;
    if (time_bonus&lt;0) time_bonus=0;
    
with instance_create(x,y,obj_StageClear_header)
    {
    point_bonus=250;
    time_bonus=other.time_bonus;
    damage_bonus=other.damage_bonus;  
    boss_num=1;  
    }
}
   
   
 
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (burns&gt;0)
    {
        with instance_create(x,y,obj_burn_damage)
            {
            image_xscale=5;
            image_yscale=5;
            damage=1;
            }   
    burns-=1;
    alarm[9]=10/global.game_speed;
    }
    else
    {
    burn=false;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x,y,obj_Screen_Shake_Locked)
{
hold=150;
shakerange=5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_EnemyHit_A</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_Got_special_A</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_Collector_dropShadow){instance_destroy();}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveChoose=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_HERO) 
{
    instance_destroy();
}
else
{
if (hp&gt;0)
{
if (par_HERO.x-1000 &lt; bbox_right) &amp;&amp; (par_HERO.x + 1000 &gt; bbox_left) 
{
if (par_HERO.y-720 &lt; bbox_bottom) &amp;&amp; (par_HERO.y + 720 &gt; bbox_top) 
{

    if (!activate)
    {    
        if instance_exists(obj_camera_snap_to)
        {               
        
            if (obj_camera_snap_to.locked==true)
            {
             with instance_create(sprite_width/2, bbox_bottom+10,obj_Collector_dropShadow)
            {
                depth=other.depth+1;
            }
            alarm[4]=25/global.game_speed;    
            activate=true; 
            }
        
        }
    }

}
}

if(activate)
{
//check direction
if (par_HERO.x &gt; x)
{
if(moveChoice&lt;5) || (moveChoose)
    {
    if (moveChoice==1) hsp=3.2;
    if(west_east == 0)
        { 
         alarm[0]=2000;
         moveChoose=false;
         moveChoice=6;
         sprite_index=global.sprite[master.spr_Collector_Turn];
         image_speed=.5*global.game_speed;
         image_index=0;
         hsp=0;
         audio_sound_pitch(snd_Collector_Turn,global.game_speed);
         audio_play_sound(snd_Collector_Turn,10,false);
         }
         else
         {
           image_xscale = 1;
           west_east = 1;
         }      
    }
}

if (par_HERO.x &lt; x)
{
if(moveChoice&lt;5) || (moveChoose)
    {
    if (moveChoice==1) hsp=-3.2;
    if(west_east == 1)
        { 
         alarm[0]=2000;
         moveChoose=false;
         moveChoice=6;
         sprite_index=global.sprite[master.spr_Collector_Turn];
         image_speed=.5*global.game_speed;
         image_index=0;
         hsp=0;
         audio_sound_pitch(snd_Collector_Turn,global.game_speed);
         audio_play_sound(snd_Collector_Turn,10,false);
         }
         else
         {
           image_xscale = -1;
           west_east = 0;
         }      
    }
}

if place_meeting(x,y,obj_Suspend_Catwalk_Center)
depth=-3;
else
depth=-1;

//CheckSwingRange
if(par_HERO.x &lt; x) &amp;&amp; (par_HERO.x &gt; x - 180) || (par_HERO.x &gt; x) &amp;&amp; (par_HERO.x &lt; x + 180) 
 {
 swing_range = true;
 }
 else
 {
 swing_range = false;
 }
//CheckFireRange
if(par_HERO.x &lt; x) &amp;&amp; (par_HERO.x &gt; x - 700) || (par_HERO.x &gt; x) &amp;&amp; (par_HERO.x &lt; x + 700) 
 {
 fire_range = false;
 }
 else
 {
 fire_range = true;
 }

 
 
//INITIALIZE MOVE
if(moveChoose==true)
    {
    
        n=irandom_range(0, 6);
        if (n==6) n=1; //More Likely to Walk
        
        
        while (n==moveChoice) //Dont Repeat last move
        {
            n=irandom_range(0, 5);
        }
        
        if(fire_range) 
            {          
            n=irandom_range(4,5);
            }
        
             if (n==4)//FIRE EXCEPTION
            {
            if instance_exists(obj_Collector_Ball) 
                {
                n=irandom_range(0,1);
                }
            }
            
            if (n==5)//STOMACH EXCEPTION
            {
            if instance_exists(obj_Collector_Fire_Duo_Top)
                {
                n=irandom_range(0,1);
                }
            }
            
           
            
            
            
        moveChoice=n; 
          
                       
    switch(moveChoice)
    {
    case 0:
    sprite_index = global.sprite[master.Collector_Idle]; 
    image_speed = .25*global.game_speed;
    image_index=0;
    alarm[0]=24/global.game_speed;
    break;
    
    case 1:
    sprite_index = global.sprite[master.Collector_Walk]; 
    image_speed = .33*global.game_speed;
    image_index=0;
    alarm[0]=100/global.game_speed;
    break;
    
    case 2:
    sprite_index = global.sprite[master.Collector_Backhand]; 
    image_speed = .5*global.game_speed;
    image_index=0;
    alarm[0]=100/global.game_speed;
    break;
    
    case 3:
    sprite_index = global.sprite[master.Collector_UpperCut]; 
    image_speed = .5*global.game_speed;
    image_index=0;
    alarm[0]=100/global.game_speed;
    break;
    
    case 4:
    sprite_index = global.sprite[master.Collector_Shoot]; 
    image_speed = .5;
    image_index=0;
    alarm[0]=100/global.game_speed;
    fired=false;
    break;
    
    case 5:
    sprite_index = global.sprite[master.spr_Collector_Belly];  
    image_speed = .5*global.game_speed;
    image_index=0;
    alarm[0]=100/global.game_speed;
    break;
    }
    
        
    moveChoose=false;
    }
 
//EXECUTE MOVE

switch(moveChoice)
{

    case 0: //IDLE
    sprite_index = global.sprite[master.Collector_Idle]; 
    image_speed = .25*global.game_speed;
    hsp=0;
    break;
    
    case 1: //WALK
    sprite_index = global.sprite[master.Collector_Walk]; 
    image_speed = 0.33*global.game_speed;
    x=x+hsp*global.game_speed;
    if(swing_range) {moveChoose=true;}
    break;
    
    case 2: //BACKHAND
    sprite_index = global.sprite[master.Collector_Backhand]; 
    image_speed = .5*global.game_speed;
    if(image_index == 5)
        {
        audio_sound_pitch(snd_Collector_BackHand,global.game_speed);
        if !audio_is_playing(snd_Collector_BackHand)
        audio_play_sound(snd_Collector_BackHand, 10, false);
        }
    if(image_index &gt;= 29) moveChoose=true;
    break; 

    case 3: //UPPERCUT
    sprite_index = global.sprite[master.Collector_UpperCut]; 
    image_speed = .5*global.game_speed;
    if(image_index == 5)
        {
         audio_sound_pitch(snd_Collector_Swing,global.game_speed);
         if !audio_is_playing(snd_Collector_Swing)
         audio_play_sound(snd_Collector_Swing, 10, false);
        }
    if(image_index &gt;= 27) moveChoose=true;
    break; 
    
    case 4: //SHOOT
    sprite_index = global.sprite[master.Collector_Shoot]; 
    image_speed = .5*global.game_speed;
    
    if(round(image_index) == 12)
        {
        if (fired==false)
        {
            switch(irandom_range(1,1))
                {
                case 1:
                instance_create(x+64,y+12,obj_Collector_Fire_Duo_Top);
                break
                case 2:
                instance_create(x+64,y+12,obj_Collector_Fire);
                break;
                }
         
         audio_sound_pitch(snd_Collector_Fire,global.game_speed);
         audio_play_sound(snd_Collector_Fire, 10, false);       
         fired=true;        
        }
        }
    if (image_index&gt;=sprite_get_number(sprite_index)-1) moveChoose=true;   
    break;
    
    case 5: //BELLY BLAST
    sprite_index = global.sprite[master.spr_Collector_Belly]; 
    image_speed = .5*global.game_speed;
    hsp=0;
    if (round(image_index)==25)
        {
        if !instance_exists(obj_Collector_Ball)
        {
        audio_sound_pitch(snd_Collector_Belly_Splat,global.game_speed);
        audio_play_sound(snd_Collector_Belly_Splat,10,false);
        with instance_create(x+175*image_xscale,y+50,obj_Collector_Ball)
            {
                image_xscale=other.image_xscale;
                vsp=-5;
                hsp=25*other.image_xscale*random_range(.5,1);
                image_speed=.5*global.game_speed;
                image_index=0;
            }
        }
        }
    if(round(image_index) &gt;= sprite_get_number(global.sprite[master.spr_Collector_Belly])-1) moveChoose=true;
    break; 
    
     case 6: //TURN
     
        sprite_index = global.sprite[master.spr_Collector_Turn]; 
        image_speed = .5*global.game_speed;
        swing_range=false;
        alarm[0]=2000;
        if(image_index &gt;= sprite_get_number(global.sprite[master.spr_Collector_Turn])-1) 
        {
        moveChoose=true;
        sprite_index = global.sprite[master.spr_Collector_Turn];
        
            if (west_east==0) 
            {
            west_east = 1;
            //image_xscale = -scale;
            image_xscale = -image_xscale;
            x=x+(scale*50); //TURN OFFSET 
            sprite_index  = global.sprite[master.Collector_Idle];
             
            }
            else
            { 
            west_east = 0;
            //image_xscale = scale;
            image_xscale = -image_xscale;
            x=x-(scale*50); //TURN OFFSET
            sprite_index =   global.sprite[master.Collector_Idle]; 
            } 
        }
        break;
     
}//END MOVE SWITCH
}//END ACTIVATE
}//END HP GREATER THEN 0

//HERO DAMAGE TAKEN COUNTER 
if (hero_hp!=0)
{ 
if (par_HERO.hp&lt;hero_hp)
    {
        hero_damage+=(hero_hp-par_HERO.hp)
    }
hero_hp=par_HERO.hp;
}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var shoot
shoot=instance_place(x,y,par_Shoot)
if (shoot==noone)
shoot=instance_nearest(x,y,par_Shoot)
if (shoot!=noone)
{
if instance_exists(obj_Bomb) &amp;&amp; instance_exists(obj_Flame_02) ||  instance_exists(obj_Ray) &amp;&amp; instance_exists(obj_Flame_02)
{
if (alarm[3]==-1) 
    {
        if instance_exists(obj_Bomb)
        hp=hp-shoot.damage+obj_Bomb.damage;
        
        if instance_exists(obj_Ray)
        hp=hp-shoot.damage+obj_Ray.damage;        
    }
}
else
{
    hp=hp-shoot.damage;
}

if (alarm[3] &lt;=-1)
{
 alarm[3]=4; 
image_blend = c_red;
}


if place_meeting(x,y,obj_Flame_02) &amp;&amp; !instance_exists(obj_Bomb)
{
    if (burn==false)
    {
    alarm[9]=10;
    burn=true;
    burns=15;
    }
}

if (hp&lt;=0) &amp;&amp; (!dead) &amp;&amp; (activate) //edit 2/13/16
{
dead=true;
image_speed=0;
hsp=0;
image_blend = c_red;
with (obj_Collector_Health) {instance_destroy();}
with (obj_Collector_dropShadow) {instance_destroy();}
if (!instance_exists(obj_Explosion_A)) 
{
   with instance_create(x,y,obj_Explosion_Collector)
    {
    //boss_image_index=other.image_index
    sprite_index=global.sprite[master.spr_Collector_Explode];
    boss_image_index=0;
    boss_image_speed=.5;
    boss_image_max=20;
    //boss_sprite_index=other.sprite_index;
    boss_image_xscale=other.image_xscale;
    boss_image_yscale=other.image_yscale;
    boss_image_angle=other.image_angle;
    boss_x=other.x;
    boss_y=other.y;
    boss_image_angle=other.image_angle;
    stripes=100;
    spread=300; 
    xplode=20;
    hologram=false; 
    }
}
//alarm[1]=25;
with (obj_Collector_dropShadow){instance_destroy();}
instance_destroy();
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
