<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_LockON</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit=false; //contact with player
World=0; //default world
hotel=false; //enable header

stored_vars=false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hit)
{
if (stored_vars==false) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_HERO">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (World!=0)
{
    if (global.world_clear[World]==1) || (global.difficulty&lt;1)//CHECK IF BOSS BEATEN ALREADY OR LOW DIFFICULTY
    {    
        if (!hit) //SAVE THE GAME
        {
        hit=true;
        stored_vars=false;
            
            if (par_HERO.hp&gt;0)
            {
            
            if (global.difficulty&lt;1)
            {
            if(par_HERO.hp&gt;=75)
            global.SavedHP=par_HERO.hp;
            else
            par_HERO.hp=75;
            }
                        
            global.SavedHP=par_HERO.hp
            global.SavedMoney=par_HERO.money;
            
            global.weapon_A=par_HERO.weapon_A;
            global.weapon_B=par_HERO.weapon_B;
            global.weapon_C=par_HERO.weapon_C;
            global.weapon_D=par_HERO.weapon_D;
            
            global.weapon_A_energy=par_HERO.weapon_A_energy;
            global.weapon_B_energy=par_HERO.weapon_B_energy;
            global.weapon_C_energy=par_HERO.weapon_C_energy;
            global.weapon_D_energy=par_HERO.weapon_D_energy;  
            global.worldmap=false; //edit 031116  
            
            if instance_exists(obj_warps)
            {
                if (global.ranked)
                {
                 global.ranked_Minutes=obj_warps.death_clock_Minutes;
                 global.ranked_Seconds=obj_warps.death_clock_Seconds;
                }
            }
                  
            scr_savegame();
            }
        }
    }
    else //STORE HERO ORIGINAL STARTING VARIABLES BEFORE BOSS BATTLE
    {
        if (!hit) 
        {
        hit=true;
        stored_vars=true;

        last_hp=par_HERO.hp;
        last_money=par_HERO.money;
        last_energy=par_HERO.energy;
        
        last_weapon_A=par_HERO.weapon_A;
        last_weapon_B=par_HERO.weapon_B;
        last_weapon_C=par_HERO.weapon_C;
        last_weapon_D=par_HERO.weapon_D;
        
        weapon_A_energy=par_HERO.weapon_A_energy;
        weapon_B_energy=par_HERO.weapon_B_energy;
        weapon_C_energy=par_HERO.weapon_C_energy;
        weapon_D_energy=par_HERO.weapon_D_energy;
        
        for(var a=0; a&lt;=2; a+=1) //Set Inventory
            {
                for (b=0;b&lt;=3;b+=1)
                {           
                last_Inventory[a,b] = global.Inventory[a,b];
                }                   
            } 
        } //END HIT   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
