<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create Target
if(master.spr_Collector_Fire==0)
{
master.num+=1;
master.spr_Collector_Fire=master.num;
global.sprite[master.num]=sprite_add(working_directory+"\Imports\spr_Collector_Fire.png",23,0,1,88,146);
sprite_collision_mask(global.sprite[master.num], 1, 0, 0, 0, sprite_width, sprite_height,0,225);
}
sprite_index=global.sprite[master.spr_Collector_Fire];


image_speed=.4*global.game_speed;
type=2;
seek=true;
//alarm[0]=200/global.game_speed;
alarm[0]=80/global.game_speed;
acel_x=0;
acel_y=0;
damage=5;
hit=false;
 
image_xscale=.5;
image_yscale=.5;


if instance_exists(par_HERO)
{
target_x=par_HERO.x;
target_y=par_HERO.y;
//instance_create(target_x,target_y,obj_Explosion_A);
}
else
instance_destroy();

setspeed =8;

        last_x_A=x;
        last_y_A=y;

        
        last_x_B=x;
        last_y_B=y;
        
        
        last_x_C=x;
        last_y_C=y;
        
        
        last_x_D=x;
        last_y_D=y;
        
        
        last_x_E=x;
        last_y_E=y;
        
        
        last_x_F=x;
        last_y_F=y;
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x,y,obj_StarBurst)
            {
            image_xscale=2*other.image_xscale;
            image_yscale=2*other.image_yscale;
            image_angle=irandom_range(1,360);
            depth=-2;
            }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_Aura_Ripple_stat);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//if (image_xscale&lt;1.2) 
if (image_xscale&lt;1) 
    {
    image_xscale+=.01*global.game_speed;
    image_yscale+=.01*global.game_speed;
    }
//Seek Target
if(seek)
{
if (target_x&lt;x) hsp=-1;
if (target_x&gt;x) hsp=1;
if (target_x==x) hsp=0;
if (target_y&lt;y) vsp=-1; 
if (target_y&gt;y) vsp=1;
if (target_y==y) vsp=0;
}
acel_x=acel_x+hsp*global.game_speed;
acel_y=acel_y+vsp*global.game_speed;

        last_x_F=last_x_E;
        last_y_F=last_y_E;
            

        last_x_E=last_x_D;
        last_y_E=last_y_D;
        
        
        last_x_D=last_x_C;
        last_y_D=last_y_C;
        
        
        last_x_C=last_x_B;
        last_y_C=last_y_B;
        
        
        
        last_x_B=last_x_A;
        last_y_B=last_y_A;
        
        
        last_x_A=x;
        last_y_A=y;
        

x=x+acel_x*global.game_speed;
y=y+acel_y*global.game_speed;
image_speed=.4*global.game_speed;
//if(hsp==0) &amp;&amp; (vsp==0) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_HERO">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!hit)
{
instance_create(x,y,obj_ScreenFlash);
if instance_exists(par_HERO)
instance_create(par_HERO.x,par_HERO.y,obj_Aura_Ripple_stat);
hit=true;
instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_blend_mode(bm_add);
//image_alpha=.5;
if sprite_exists(sprite_index)
{
draw_sprite_ext(sprite_index, image_index-6,last_x_F, last_y_F, image_xscale*.4, image_yscale*.4, 0, c_white, .15 );
//draw_sprite_ext(sprite_index, image_index-2,last_x_B, last_y_B, image_xscale*.5, image_yscale*.4, 0, c_white, .2 );
draw_sprite_ext(sprite_index, image_index-4,last_x_D, last_y_D, image_xscale*.6, image_yscale*.6, 0, c_white, .3 );
//draw_sprite_ext(sprite_index, image_index-3,last_x_C, last_y_C, image_xscale*.7, image_yscale*.7, 0, c_white, .4 );
draw_sprite_ext(sprite_index, image_index-2,last_x_B, last_y_B, image_xscale*.8, image_yscale*.8, 0, c_white, .5 );
//draw_sprite_ext(sprite_index, image_index-1,last_x_A, last_y_A, image_xscale*.9, image_yscale*.9, 0, c_white, .6 );
draw_self();
}
//draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
