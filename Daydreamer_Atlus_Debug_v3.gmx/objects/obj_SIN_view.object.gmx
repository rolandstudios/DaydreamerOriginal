<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy_Body</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>        last_y=y;
        type=1;

        last_x_A=x;
        last_y_A=y;
        
        last_x_B=x;
        last_y_B=y;
        
        last_x_C=x;
        last_y_C=y;

//Color Correction----
brightness=-.1; //brightness
contrast=0; //contrast
//--------------------
fire_count=0;
burn=false;
burns=0;

//instance_create(x,y,obj_SIN_Slow);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (burns&gt;0)
    {
        with instance_create(x,y,obj_burn_damage)
            {
            image_xscale=5;
            image_yscale=5;
            damage=1;
            }   
    burns-=1;
    alarm[9]=10/global.game_speed;
    }
    else
    {
    burn=false;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_EnemyHit_A</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>543</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_SIN) 
{
instance_destroy();
}
else
{
damage=obj_SIN.damage;
x=obj_SIN.x;

switch(obj_SIN.moveChoice)
{
case 1:
y=obj_SIN.y-215*obj_SIN.scale;
break;

case 2:
y=obj_SIN.y-215*obj_SIN.scale;
break;

case 3:
y=obj_SIN.y-215*obj_SIN.scale;
if place_meeting(x,y,par_HERO)
    {
     if !audio_is_playing(snd_SIN_Bite)
        {
        instance_create(x,y,obj_ScreenFlash);
        audio_sound_pitch(snd_SIN_Bite,global.game_speed*obj_SIN.counter_time);
        audio_play_sound(snd_SIN_Bite,10,false);
        }
    }
break;

case 4:
y=obj_SIN.y-215*obj_SIN.scale;
if (image_index&gt;5)
        {
        last_x_C=last_x_B;
        last_y_C=last_y_B;
        
        last_x_B=last_x_A;
        last_y_B=last_y_A;
        
        last_x_A=x;
        last_y_A=y;
        }
        else
        {
        last_x_A=x;
        last_y_A=y;
        
        last_x_B=x;
        last_y_B=y;
        
        last_x_C=x;
        last_y_C=y;
        }
break;

case 5:
y=obj_SIN.y-215*obj_SIN.scale;
break;

case 6:
y=obj_SIN.y-215*obj_SIN.scale;
break;

case 7:
y=obj_SIN.y-215*obj_SIN.scale;
break;

case 8:
y=obj_SIN.y-215*obj_SIN.scale;
break;
}

image_xscale=obj_SIN.image_xscale;


if (last_y&gt;y)  
{
    if(abs(image_angle+sign(obj_SIN.hsp))&lt;5)
    {
    if (sprite_index==global.sprite[master.spr_SIN_Walk]) image_angle=image_angle+sign(obj_SIN.hsp*.1)*global.game_speed*obj_SIN.counter_time;  // tilt up half
    }
    
}
if (last_y&lt;y) 
{
    if(abs(image_angle-sign(obj_SIN.hsp))&lt;5)
    {
    if (sprite_index==global.sprite[master.spr_SIN_Walk]) image_angle=image_angle-sign(obj_SIN.hsp*.1)*global.game_speed*obj_SIN.counter_time;  // tilt down half
    }
} 

if (last_y==y) // or if JUMP  then SET TO REST Angle
{
if  (image_angle&gt;0) &amp;&amp; (image_angle&lt;45) 
        {
        if (sprite_index!=global.sprite[master.spr_SIN_Walk]) 
            image_angle=image_angle-1;
            else
            image_angle=image_angle-.1;
        }

if  (image_angle&lt;0) || (image_angle&gt;350) 
        {
        if (sprite_index!=global.sprite[master.spr_SIN_Walk]) 
            image_angle=image_angle+1;  
            else
            image_angle=image_angle+.1;    
        }  
}

if (sprite_index==global.sprite[master.spr_SIN_Blast])
    {
    if (round(image_index)==18)
        {
            if (fire_count==0)
            {
            instance_create(x-171*image_xscale,y+15*image_yscale,obj_SIN_Shoot);
            audio_sound_pitch(snd_djump,global.game_speed*obj_SIN.counter_time);
            audio_play_sound(snd_djump,10,false);
            fire_count=1;
            }
        }
    if (round(image_index)==22)
        {
        if (fire_count==1)
            {
            instance_create(x-184*image_xscale,y-40*image_yscale,obj_SIN_Shoot); 
            audio_sound_pitch(snd_jump,global.game_speed*obj_SIN.counter_time);
            audio_play_sound(snd_jump,10,false);
            fire_count=0;
            }
        }
    }


last_y=y;
//last_y=(last_y+y)*.5;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_SIN_Health)
{
var shoot
shoot=instance_place(x,y,par_Shoot)
if (shoot==noone)
shoot=instance_nearest(x,y,par_Shoot)
if (shoot!=noone)
{

if instance_exists(obj_Bomb) &amp;&amp; instance_exists(obj_Flame_02) ||  instance_exists(obj_Ray) &amp;&amp; instance_exists(obj_Flame_02)
        {
        if (alarm[3]==-1) 
            {
                if instance_exists(obj_Bomb)
                obj_SIN.hp=obj_SIN.hp-shoot.damage+obj_Bomb.damage;
                
                if instance_exists(obj_Ray)
                obj_SIN.hp=obj_SIN.hp-shoot.damage+obj_Ray.damage;        
            }
        }
        else
        {
            obj_SIN.hp=obj_SIN.hp-shoot.damage;
        }
        
if (alarm[3] &lt;=-1)
{
alarm[3]=4; 
image_blend = c_red;
}


if place_meeting(x,y,obj_Flame_02)
{
    if (burn==false)
    {
    alarm[9]=10;
    burn=true;
    burns=15;
    }
}

if (obj_SIN.hp&lt;=0)
{
image_speed=0;
hsp=0;
image_blend = c_red;


with instance_create(x,y,obj_Explosion_Sin)
    {
    //boss_image_index=other.image_index
    sprite_index=global.sprite[master.spr_Sin_Explode];
    boss_image_index=0;
    boss_image_speed=.5;
    boss_image_max=20;
    //boss_sprite_index=other.sprite_index;
    boss_image_xscale=other.image_xscale;
    boss_image_yscale=other.image_yscale;
    boss_image_angle=other.image_angle;
    boss_x=other.x;
    boss_y=other.y;
    boss_image_angle=other.image_angle;
    stripes=100;
    spread=300; 
    xplode=20;
    hologram=false; 
    }

if instance_exists (obj_SIN)  with (obj_SIN){instance_destroy();}
instance_destroy();
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
        
    if (obj_SIN.moveChoice==4)
    {
        if (image_index&gt;5)
        {
        draw_sprite_ext(sprite_index, image_index-3,last_x_C, last_y_C, image_xscale, image_yscale, 0, c_white, .25 );
        draw_sprite_ext(sprite_index, image_index-2,last_x_B, last_y_B, image_xscale, image_yscale, 0, c_white, .5 );
        draw_sprite_ext(sprite_index, image_index-1,last_x_A, last_y_A, image_xscale, image_yscale, 0, c_white, .75 );
        }
    }
    
if (image_blend == c_white)// &amp;&amp; (image_alpha&gt;=1)
    {
    shader_set(shd_bright_contrast);
    shader_set_uniform_f(global.brightness_amount , brightness);
    shader_set_uniform_f(global.contrast_amount, contrast);
    draw_self();
    //draw_text(x+128,y,"brightness: " + string(brightness));
    //draw_text(x+128,y-20,"contrast: " + string(contrast));
    shader_reset();
    }
    else
    {
    draw_self();
    }

}

if (obj_SIN.moveChoice==6)
{
    shader_set(shdr_blackandwhite);
    draw_sprite_ext(spr_wisp_A, image_index, x-100*image_xscale, y-150*image_yscale,14,14,0,c_white,.15);
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>296,263</point>
    <point>277,277</point>
  </PhysicsShapePoints>
</object>
