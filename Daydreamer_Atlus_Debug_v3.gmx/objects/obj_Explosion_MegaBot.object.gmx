<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_explosion</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x,y,obj_Screen_Shake_Locked)
{
hold=150;
shakerange=5;
}

global.game_speed=1;
master.target_speed=1;
master.draw_clock=false;
//master.draw_bullet_time=false;

hologram=true;
xplode=12;
xplode=18;
xpos=x;
ypos=y;
loot=true;
move=0;
rate=2;

boss_image_index=0;
boss_sprite_index=noone;
boss_x=x;
boss_y=y;
boss_image_xscale=1;
boss_image_yscale=1;
boss_image_angle=0;
boss_image_alpha=1;
boss_image_speed=0;
boss_image_max=0;
stripes=100;
spread=155;

flash=false;
image_speed=0;

burps=4;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spread=64;
var x_xplode=x+random_range(-75, 75);
var y_xplode=y+random_range(-100, 100);
scale_xplode=random_range(.75,2);
depth_xplode=other.depth+irandom_range(-3,3);
   
switch(irandom_range(1,1))
{
case 1:
with instance_create(x_xplode,y_xplode,obj_Explosion_B)
    {
    image_xscale=random_range(.5,1.5);
    image_yscale=image_xscale;
    image_angle=random_range(0,360); 
    if (other.image_index&lt;11)
    depth=other.depth+irandom_range(1,3);  
    else
    depth=other.depth_xplode; 
    loot=other.loot;
    }
instance_create(x,y,obj_Smoke_A);
break;

case 2:
with instance_create(x_xplode,y_xplode,obj_StarBurst)
            {
            image_xscale=other.scale_xplode;
            image_yscale=other.scale_xplode;
            image_angle=irandom_range(1,360);
            //image_blend=c_red;
            depth=other.depth_xplode; 
            }
/*            
with instance_create(x_xplode,y_xplode,obj_BloodSplash)
{
image_xscale=other.scale_xplode;
image_yscale=other.scale_xplode;
depth=other.depth_xplode;
}
*/
break;

case 3:
with instance_create(x_xplode,y_xplode,obj_StarBurst)
            {
            image_xscale=other.scale_xplode;
            image_yscale=other.scale_xplode;
            image_angle=irandom_range(1,360);
            //image_blend=c_red;
            depth=other.depth_xplode; 
            }
/*            
with instance_create(x_xplode,y_xplode,obj_BloodSplash)
{
image_xscale=other.scale_xplode;
image_yscale=other.scale_xplode;
depth=other.depth_xplode;
}
*/
break;
}

xplode=xplode-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=boss_x;
y=boss_y;
image_xscale=boss_image_xscale;;
image_yscale=boss_image_yscale;
image_angle=boss_image_angle;

if (burps&gt;0)
{
    if (sign(image_speed)==1)
    {
    if(image_index&gt;=7) 
        {
            image_speed=-boss_image_speed*global.game_speed;    
        }
    }
    else
    {
    if(image_index&lt;=4) 
        {
            image_speed=boss_image_speed*global.game_speed;
            burps-=1;
            audio_sound_pitch(snd_droid_swift,(1.6 - burps*.15)*global.game_speed);
            //audio_sound_pitch(snd_Collector_BackHand,random_range(-.1,.1)+global.game_speed);
            audio_play_sound(snd_droid_swift,10,false);
        }    
    }
}
else
{
if (alarm[0]=-1) alarm[0]=rate/global.game_speed;
image_speed=boss_image_speed*global.game_speed;

if (round(image_index)==6) 
{
    if (master.target_speed&gt;.5)
    {
    master.target_speed=.5;
    master.draw_clock=false;
    }
    
    if !instance_exists(obj_StarBurst)
        {
        with instance_create(x,y,obj_StarBurst)
            {
            image_xscale=2;
            image_yscale=2;
            image_angle=irandom_range(1,360);
            //image_blend=c_red;
            depth=other.depth+2; 
            }
         /*   
            with instance_create(x,y+50,obj_BloodSplash)
            {
            image_xscale=2;
            image_yscale=2;
            depth=other.depth+1;
            }
            */
        }
}

if (round(image_index)==10) &amp;&amp; (!flash)
{
instance_create(x,y,obj_Aura_Ripple);
with instance_create(x,y,obj_AuraFlash){depth=depth+1;color=c_red;}

//audio_sound_pitch(snd_ToWar,random_range(1.1,1.2)*global.game_speed);
//audio_play_sound(snd_ToWar,10,false); 
audio_sound_pitch(snd_Bot_Scream,random_range(1.1,1.2)*global.game_speed);
audio_play_sound(snd_Bot_Scream,10,false); 
flash=true;
}
if (image_index&gt;=sprite_get_number(sprite_index)-1)
{
    
image_speed=0;
image_index=sprite_get_number(sprite_index)-1;
}

if(xplode&lt;=0) &amp;&amp; (image_index&gt;=sprite_get_number(sprite_index)-1)
    {
        instance_destroy();
    }
}   
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(sprite_index)
{
if (image_index==3)||(image_index==5)||(image_index==6)||(image_index==8)||(image_index==10)||(image_index&gt;12)  //HOLOGRAM DRAW
{
    move+=0.1*global.game_speed;
    if (image_index&lt;12) image_blend=c_red; 
    //if (image_index&gt;=6) image_blend=c_red;
    boss_image_alpha=boss_image_alpha-.02*global.game_speed;
    var Stripes = shader_get_uniform(shdr_Hologram,"Stripes");
    var Filter = shader_get_uniform(shdr_Hologram,"Filter");
    var Phase = shader_get_uniform(shdr_Hologram,"Phase");
    
    if (image_index&lt;12) draw_self();   
    if (image_index&lt;12) image_blend=c_white; else image_blend=c_red
    shader_set(shdr_Hologram);
    shader_set_uniform_f(Stripes,900);
    shader_set_uniform_f(Filter,0.98,0.98,0.98,1.0);//rgba diffuse color
    shader_set_uniform_f(Phase,move);
    draw_self();
    shader_reset();
}
else
{
    draw_set_blend_mode(bm_normal);
    image_alpha=1;
    draw_set_alpha(1);
    //image_blend=c_white;
    image_blend=c_red;
    //if (image_index&gt;=6) image_blend=c_red;
     draw_self();
    //draw_sprite_ext(boss_sprite_index,boss_image_index,boss_x,boss_y,boss_image_xscale,boss_image_yscale,boss_image_angle,c_white,1)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
