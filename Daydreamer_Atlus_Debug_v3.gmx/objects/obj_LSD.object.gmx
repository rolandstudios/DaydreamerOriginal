<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_Bloom)
with(obj_Bloom){instance_destroy();}
global.Trippy=true;

control=false; //ENABLE OUTSIDE CONTROL
if instance_exists(obj_Collector_Sit) || instance_exists(obj_LSD_Trigger)
with instance_create(x,y,obj_LS_Tile_A_Scatter){image_alpha=0;}
else
with instance_create(x,y,obj_LS_Tile_A_Scatter){image_alpha=1;}
draw_set_color(c_white);

uni_time = shader_get_uniform(shd_wave,"time");
var_time_var = 0;

uni_mouse_pos = shader_get_uniform(shd_wave,"mouse_pos");
var_mouse_pos_x = mouse_x - view_xview;
var_mouse_pos_y = mouse_y - view_yview;

uni_resolution = shader_get_uniform(shd_wave,"resolution");
var_resolution_x = view_wview;
var_resolution_y = view_hview;

uni_wave_amount = shader_get_uniform(shd_wave,"wave_amount");
//var_wave_amount = 20; //higher = more waves
var_wave_amount = 0; //higher = more waves

uni_wave_distortion = shader_get_uniform(shd_wave,"wave_distortion");
var_wave_distortion = 100;//50; //higher = less distortion

uni_wave_speed = shader_get_uniform(shd_wave,"wave_speed");
//var_wave_speed = 2.0; //higher = faster
var_wave_speed = 1; //higher = faster

uni_bloom = shader_get_uniform(shd_wave,"bloom");
if instance_exists(par_HERO)
var_bloom = par_HERO.bloom;
else
var_bloom = .4;

shader_enabled = true;
full_screen_effect = true;
alpha_inc=.01;
forward=true;

if instance_exists(obj_LSD_Trigger)
{
evolution=.04;
frame_pull=1.02;
}
else
{
control=true;
var_wave_distortion=20//was 10
evolution = .08
frame_pull=1.1//was 1.2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_LS_Drone,20,false);
audio_sound_pitch(snd_LS_Drone,global.game_speed);

if instance_exists(obj_SIN)|| (obj_GooeyDragon)
{
audio_sound_gain(snd_LS_Drone,.5,0);
audio_sound_gain(amb_Psy, .25 , 0);
}
else
{
audio_sound_gain(snd_LS_Drone,1,0);
audio_sound_gain(amb_Psy, .55 , 0);
}

//alarm[0]=irandom_range(1,50);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_SIN) &amp;&amp; !instance_exists(obj_GooeyDragon)
{
audio_pause_sound(obj_DJ.music_track);
audio_stop_sound(obj_DJ.music_track);
}

if (alarm[0]==-1) alarm[0]=irandom_range(1,50);

if(global.Trippy==true)
{
//if (var_wave_speed &lt; 1) var_wave_speed+=.001; 
if (var_wave_amount &lt; 5) var_wave_amount+=.05;

if (control==false) //ENABLE OUTSIDE CONTROL
{
if (var_wave_distortion&gt;50) var_wave_distortion-=.5;
}

if (var_wave_amount== .5) 
    {
    audio_play_sound(snd_goTrippy,10,false);
    }
}

if(global.Trippy==false)
{

var_wave_amount-=.05;
var_wave_distortion+=.5;
    
        
if (var_wave_amount &lt;= 0) 
    {
    audio_play_sound(snd_outTrippy,10,false);
    instance_destroy();
    }
}

var_time_var+=evolution*global.game_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>        control=true; 
        var_wave_distortion=20//was 10
        evolution = .08
        frame_pull=1.1;//was 1.2
    

/*
control=false;
var_wave_speed=1;
var_wave_distortion=50;
evolution=.04;
frame_pull=1.02;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>        if instance_exists(obj_GooeyDragon)
        {
        control=false;
        var_wave_speed=1;
        var_wave_distortion=50;
        evolution=.04;
        frame_pull=1.02;
        }
        else
        {
        control=true;
        var_wave_distortion=20//was 10
        evolution = .08
        frame_pull=1.1//was 1.2
        }
    
        
        if instance_exists(obj_Collector_Sit) || instance_exists(obj_LSD_Trigger)
        with instance_create(x,y,obj_LS_Tile_A_Scatter){image_alpha=0;}
        else
        with instance_create(x,y,obj_LS_Tile_A_Scatter){image_alpha=1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if shader_enabled shader_set(shd_wave);
    shader_set_uniform_f(uni_time, var_time_var);
    shader_set_uniform_f(uni_mouse_pos, var_mouse_pos_x, var_mouse_pos_y);
    shader_set_uniform_f(uni_resolution, var_resolution_x, var_resolution_y);
    shader_set_uniform_f(uni_wave_amount, var_wave_amount);
    shader_set_uniform_f(uni_wave_distortion, var_wave_distortion );
    shader_set_uniform_f(uni_wave_speed, var_wave_speed);
    shader_set_uniform_f(uni_bloom, var_bloom);
    if window_get_fullscreen()
    offset=1.5; else offset=1;
    if full_screen_effect 
    //draw_surface_stretched(application_surface, (0-frame_pull)*offset, (0-frame_pull)*offset, (1280+frame_pull)*offset, (720+frame_pull)*offset);
    draw_surface_ext(application_surface, (1-frame_pull)*640*offset, (1-frame_pull)*360*offset, (frame_pull)*offset, (frame_pull)*offset, 0, c_white, 1);
    
shader_reset();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
