<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_RedEnergy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index=random_range(0,48);
incFactor=.5;
floatFactor=random_range(0,32);
image_speed=.5;

Energy=round(irandom_range(6,9)/global.difficulty); //was 10
hit=false;
//phase=irandom_range(1,360);
vsp=0;
rise=true;

if instance_exists(par_HERO)
{
speed=0;
direction=90;//point_direction(x,y,par_HERO.x,par_HERO.y);
}

if instance_exists(obj_Tunnel_Cliff_E_Elevator) direction=90;
if place_meeting(x,y,par_wall) instance_destroy();
active=true;

if instance_exists(obj_PearStore_inside)
{
if !place_meeting(x,y,par_HERO)
    {
    instance_deactivate_object(self);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hit)
{
    if instance_exists(par_HERO)
    {
    par_HERO.hp=par_HERO.hp+Energy;
    if(par_HERO.hp&gt;100)par_HERO.hp=100;
    Energy=0;
    }       
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(par_HERO.hp&lt;100) &amp;&amp; (par_HERO.hp&gt;0)
{
if !instance_exists(obj_StageClear_header)
    {
    audio_sound_pitch(snd_life_up_A,global.game_speed);
    audio_play_sound(snd_life_up_A,10,false);
    }
par_HERO.hp=par_HERO.hp+1;
}
Energy=Energy-1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x&gt;view_xview-400) &amp;&amp; (x&lt;view_xview+1680) 
{
    if (y&gt;view_yview-400) &amp;&amp; (y&lt;view_yview+1120)
    {
    active=true;
    }
    else
    {
    active=false;
    }
}
else
{
active=false;
}

if (!active)
{
instance_deactivate_object(self);
}


if(hit)
{
    if instance_exists(par_HERO)
    {
    x=par_HERO.x;
    y=par_HERO.y;
    if (par_HERO.hp&lt;=0) instance_destroy();
    if (alarm[0] = -1) alarm[0] = 3;
    if (Energy &lt;= 0) instance_destroy();
    }
}
else
{


image_speed=.5*global.game_speed;


floatFactor=floatFactor+1;

if (floatFactor&gt;=50)
{
floatFactor=0;
incFactor= -(incFactor);
}

/*
phase+=.05*global.game_speed;
if (phase&gt;360) phase=1;
*/


if (rise)
{
if place_meeting(x,y,par_wall)
    {
    if (par_HERO.bbox_top&lt;y) vsp-=.25; else vsp=.25;
    speed+=.2*global.game_speed;
    } 
    else
    {
    speed=0;
    vsp=0;
    } 
}

if (speed==0)
y=y+incFactor+vsp; //y+=.3*sin(phase)*global.game_speed+vsp; 
else
y=y+vsp;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_HERO">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (par_HERO.hp==100) 
{
audio_sound_pitch(snd_capped_out,global.game_speed);
audio_play_sound(snd_capped_out,10,false);
instance_destroy();
}

sprite_index = noone;
hit=true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hit)
{
    if instance_exists(par_HERO)
    {
    par_HERO.hp=par_HERO.hp+Energy;
    if(par_HERO.hp&gt;100)par_HERO.hp=100;
    Energy=0;
    }       
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>36,36</point>
    <point>36,36</point>
  </PhysicsShapePoints>
</object>
